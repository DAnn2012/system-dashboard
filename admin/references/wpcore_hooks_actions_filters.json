[
 {
  "name": "_admin_menu",
  "file": "wp-admin\/includes\/menu.php",
  "type": "action",
  "description": "Fires before the administration menu loads in the admin."
 },
 {
  "name": "_core_updated_successfully",
  "file": "wp-admin\/includes\/update-core.php",
  "type": "action",
  "description": "Fires after WordPress core has been successfully updated."
 },
 {
  "name": "_network_admin_menu",
  "file": "wp-admin\/includes\/menu.php",
  "type": "action",
  "description": "Fires before the administration menu loads in the Network Admin."
 },
 {
  "name": "_user_admin_menu",
  "file": "wp-admin\/includes\/menu.php",
  "type": "action",
  "description": "Fires before the administration menu loads in the User Admin."
 },
 {
  "name": "_wp_put_post_revision",
  "file": "wp-includes\/revision.php",
  "type": "action",
  "description": "Fires once a revision has been saved."
 },
 {
  "name": "activate_blog",
  "file": "wp-admin\/network\/sites.php",
  "type": "action",
  "description": "Fires after a network site is activated."
 },
 {
  "name": "activate_header",
  "file": "wp-activate.php",
  "type": "action",
  "description": "Fires before the Site Activation page is loaded."
 },
 {
  "name": "activate_plugin",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires before a plugin is activated."
 },
 {
  "name": "activate_wp_head",
  "file": "wp-activate.php",
  "type": "action",
  "description": "Fires before the Site Activation page is loaded."
 },
 {
  "name": "activate_{$plugin}",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires as a specific plugin is being activated."
 },
 {
  "name": "activated_plugin",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires after a plugin has been activated."
 },
 {
  "name": "activity_box_end",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires at the end of the 'At a Glance' dashboard widget."
 },
 {
  "name": "add_admin_bar_menus",
  "file": "wp-includes\/class-wp-admin-bar.php",
  "type": "action",
  "description": "Fires after menus are added to the menu bar."
 },
 {
  "name": "add_attachment",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once an attachment has been added."
 },
 {
  "name": "add_inline_data",
  "file": "wp-admin\/includes\/template.php",
  "type": "action",
  "description": "Fires after outputting the fields for the inline editor for posts and pages."
 },
 {
  "name": "add_link",
  "file": "wp-admin\/includes\/bookmark.php",
  "type": "action",
  "description": "Fires after a link was added to the database."
 },
 {
  "name": "add_meta_boxes",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires after all built-in meta boxes have been added."
 },
 {
  "name": "add_meta_boxes_comment",
  "file": "wp-admin\/edit-form-comment.php",
  "type": "action",
  "description": "Fires when comment-specific meta boxes are added."
 },
 {
  "name": "add_meta_boxes_link",
  "file": "wp-admin\/edit-link-form.php",
  "type": "action",
  "description": "Fires when link-specific meta boxes are added."
 },
 {
  "name": "add_meta_boxes_{$post_type}",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires after all built-in meta boxes have been added, contextually for the given post type."
 },
 {
  "name": "add_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires before an option is added."
 },
 {
  "name": "add_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a specific option has been added."
 },
 {
  "name": "add_site_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a network option has been successfully added."
 },
 {
  "name": "add_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a specific network option has been successfully added."
 },
 {
  "name": "add_tag_form_fields",
  "file": "wp-admin\/edit-tags.php",
  "type": "action",
  "description": "Fires after the Add Tag form fields for non-hierarchical taxonomies."
 },
 {
  "name": "add_term_relationship",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately before an object-term relationship is added."
 },
 {
  "name": "add_user_role",
  "file": "wp-includes\/class-wp-user.php",
  "type": "action",
  "description": "Fires immediately after the user has been given a new role."
 },
 {
  "name": "add_user_to_blog",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires immediately after a user is added to a site."
 },
 {
  "name": "add_{$meta_type}_meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately before meta of a specific type is added."
 },
 {
  "name": "added_existing_user",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires immediately after an existing user is added to a site."
 },
 {
  "name": "added_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after an option has been added."
 },
 {
  "name": "added_term_relationship",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately after an object-term relationship is added."
 },
 {
  "name": "added_{$meta_type}_meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately after meta of a specific type is added."
 },
 {
  "name": "admin_action_{$action}",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Fires when an 'action' request variable is sent."
 },
 {
  "name": "admin_bar_init",
  "file": "wp-includes\/class-wp-admin-bar.php",
  "type": "action",
  "description": "Fires after WP_Admin_Bar is initialized."
 },
 {
  "name": "admin_bar_menu",
  "file": "wp-includes\/admin-bar.php",
  "type": "action_reference",
  "description": "Loads all necessary admin bar items."
 },
 {
  "name": "admin_color_scheme_picker",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires in the 'Admin Color Scheme' section of the user editing screen."
 },
 {
  "name": "admin_email_confirm",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires before the admin email confirm form."
 },
 {
  "name": "admin_email_confirm_form",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires inside the admin-email-confirm-form form tags, before the hidden fields."
 },
 {
  "name": "admin_enqueue_scripts",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Enqueue scripts for all admin pages."
 },
 {
  "name": "admin_footer",
  "file": "wp-admin\/admin-footer.php",
  "type": "action",
  "description": "Prints scripts or data before the default footer scripts."
 },
 {
  "name": "admin_footer-{$hook_suffix}",
  "file": "wp-admin\/admin-footer.php",
  "type": "action",
  "description": "Prints scripts or data after the default footer scripts."
 },
 {
  "name": "admin_head",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Fires in head section for all admin pages."
 },
 {
  "name": "admin_head-media-upload-popup",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires when scripts enqueued for the admin header for the legacy (pre-3.5.0) media upload popup are printed."
 },
 {
  "name": "admin_head-{$hook_suffix}",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Fires in head section for a specific admin page."
 },
 {
  "name": "admin_head_{$content_func}",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires in the admin header for each specific form tab in the legacy (pre-3.5.0) media upload popup."
 },
 {
  "name": "admin_init",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Fires as an admin screen or script is being initialized."
 },
 {
  "name": "admin_menu",
  "file": "wp-admin\/includes\/menu.php",
  "type": "action",
  "description": "Fires before the administration menu loads in the admin."
 },
 {
  "name": "admin_notices",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Prints admin screen notices."
 },
 {
  "name": "admin_page_access_denied",
  "file": "wp-admin\/includes\/menu.php",
  "type": "action",
  "description": "Fires when access to an admin page is denied."
 },
 {
  "name": "admin_post",
  "file": "wp-admin\/admin-post.php",
  "type": "action",
  "description": "Fires on an authenticated admin post request where no action is supplied."
 },
 {
  "name": "admin_post_nopriv",
  "file": "wp-admin\/admin-post.php",
  "type": "action",
  "description": "Fires on a non-authenticated admin post request where no action is supplied."
 },
 {
  "name": "admin_post_nopriv_{$action}",
  "file": "wp-admin\/admin-post.php",
  "type": "action",
  "description": "Fires on a non-authenticated admin post request for the given action."
 },
 {
  "name": "admin_post_{$action}",
  "file": "wp-admin\/admin-post.php",
  "type": "action",
  "description": "Fires on an authenticated admin post request for the given action."
 },
 {
  "name": "admin_print_footer_scripts",
  "file": "wp-admin\/admin-footer.php",
  "type": "action",
  "description": "Prints any scripts and data queued for the footer."
 },
 {
  "name": "admin_print_footer_scripts-{$hook_suffix}",
  "file": "wp-admin\/admin-footer.php",
  "type": "action",
  "description": "Prints scripts and data queued for the footer."
 },
 {
  "name": "admin_print_scripts",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Fires when scripts are printed for all admin pages."
 },
 {
  "name": "admin_print_scripts-media-upload-popup",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires when admin scripts enqueued for the legacy (pre-3.5.0) media upload popup are printed."
 },
 {
  "name": "admin_print_scripts-{$hook_suffix}",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Fires when scripts are printed for a specific admin page based on $hook_suffix."
 },
 {
  "name": "admin_print_styles",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Fires when styles are printed for all admin pages."
 },
 {
  "name": "admin_print_styles-media-upload-popup",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires when admin styles enqueued for the legacy (pre-3.5.0) media upload popup are printed."
 },
 {
  "name": "admin_print_styles-{$hook_suffix}",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Fires when styles are printed for a specific admin page based on $hook_suffix."
 },
 {
  "name": "admin_xml_ns",
  "file": "wp-admin\/includes\/template.php",
  "type": "action",
  "description": "Fires inside the HTML tag in the admin header."
 },
 {
  "name": "adminmenu",
  "file": "wp-admin\/menu-header.php",
  "type": "action",
  "description": "Fires after the admin menu has been output."
 },
 {
  "name": "after-{$taxonomy}-table",
  "file": "wp-admin\/edit-tags.php",
  "type": "action",
  "description": "Fires after the taxonomy list table."
 },
 {
  "name": "after_core_auto_updates_settings",
  "file": "wp-admin\/update-core.php",
  "type": "action",
  "description": "Fires after the major core auto-update settings."
 },
 {
  "name": "after_db_upgrade",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Fires on the next page load after a successful DB upgrade."
 },
 {
  "name": "after_delete_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after a post is deleted, at the conclusion of wp_delete_post()."
 },
 {
  "name": "after_menu_locations_table",
  "file": "wp-admin\/nav-menus.php",
  "type": "action",
  "description": "Fires after the menu locations table is displayed."
 },
 {
  "name": "after_mu_upgrade",
  "file": "wp-admin\/network\/upgrade.php",
  "type": "action",
  "description": "Fires after the Multisite DB upgrade for each site is complete."
 },
 {
  "name": "after_password_reset",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires after the user's password is reset."
 },
 {
  "name": "after_plugin_row",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "action",
  "description": "Fires after each row in the Plugins list table."
 },
 {
  "name": "after_plugin_row_{$plugin_file}",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "action",
  "description": "Fires after each specific row in the Plugins list table."
 },
 {
  "name": "after_setup_theme",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires after the theme is loaded."
 },
 {
  "name": "after_signup_form",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires after the sign-up forms, before wp_footer."
 },
 {
  "name": "after_signup_site",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires after site signup information has been written to the database."
 },
 {
  "name": "after_signup_user",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires after a user's signup information has been written to the database."
 },
 {
  "name": "after_switch_theme",
  "file": "wp-includes\/theme.php",
  "type": "action",
  "description": "Fires on the first WP load after a theme switch if the old theme still exists."
 },
 {
  "name": "after_theme_row",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "action",
  "description": "Fires after each row in the Multisite themes list table."
 },
 {
  "name": "after_theme_row_{$stylesheet}",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "action",
  "description": "Fires after each specific row in the Multisite themes list table."
 },
 {
  "name": "after_wp_tiny_mce",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "action",
  "description": "Fires after any core TinyMCE editor instances are created."
 },
 {
  "name": "all_admin_notices",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Prints generic admin screen notices."
 },
 {
  "name": "application_password_did_authenticate",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires after an application password was used for authentication."
 },
 {
  "name": "application_password_failed_authentication",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires when an application password failed to authenticate the user."
 },
 {
  "name": "archive_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'archived' status is added to a site."
 },
 {
  "name": "atom_author",
  "file": "wp-includes\/feed-atom.php",
  "type": "action",
  "description": "Fires at the end of each Atom feed author entry."
 },
 {
  "name": "atom_comments_ns",
  "file": "wp-includes\/feed-atom-comments.php",
  "type": "action",
  "description": "Fires inside the feed tag in the Atom comment feed."
 },
 {
  "name": "atom_entry",
  "file": "wp-includes\/feed-atom.php",
  "type": "action",
  "description": "Fires at the end of each Atom feed item."
 },
 {
  "name": "atom_head",
  "file": "wp-includes\/feed-atom.php",
  "type": "action",
  "description": "Fires just before the first Atom feed entry."
 },
 {
  "name": "atom_ns",
  "file": "wp-includes\/feed-atom.php",
  "type": "action",
  "description": "Fires at end of the Atom feed root to add namespaces."
 },
 {
  "name": "attachment_submitbox_misc_actions",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires after the 'Uploaded on' section of the Save meta box in the attachment editing screen."
 },
 {
  "name": "attachment_updated",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once an existing attachment has been updated."
 },
 {
  "name": "auth_cookie_bad_hash",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires if a bad authentication cookie hash is encountered."
 },
 {
  "name": "auth_cookie_bad_session_token",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires if a bad session token is encountered."
 },
 {
  "name": "auth_cookie_bad_username",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires if a bad username is entered in the user authentication process."
 },
 {
  "name": "auth_cookie_expired",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires once an authentication cookie has expired."
 },
 {
  "name": "auth_cookie_malformed",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires if an authentication cookie is malformed."
 },
 {
  "name": "auth_cookie_valid",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires once an authentication cookie has been validated."
 },
 {
  "name": "auth_redirect",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires before the authentication redirect."
 },
 {
  "name": "automatic_updates_complete",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "action",
  "description": "Fires after all automatic updates have run."
 },
 {
  "name": "before_delete_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires before a post is deleted, at the start of wp_delete_post()."
 },
 {
  "name": "before_signup_form",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires before the site Sign-up form."
 },
 {
  "name": "before_signup_header",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires before the Site Sign-up page is loaded."
 },
 {
  "name": "before_wp_tiny_mce",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "action",
  "description": "Fires immediately before the TinyMCE settings are printed."
 },
 {
  "name": "begin_fetch_post_thumbnail_html",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "action",
  "description": "Fires before fetching the post thumbnail HTML."
 },
 {
  "name": "block_editor_meta_box_hidden_fields",
  "file": "wp-admin\/includes\/post.php",
  "type": "action",
  "description": "Adds hidden input fields to the meta box save form."
 },
 {
  "name": "blog_privacy_selector",
  "file": "wp-admin\/options-reading.php",
  "type": "action",
  "description": "Enable the legacy 'Site visibility' privacy options."
 },
 {
  "name": "bulk_edit_custom_box",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "action",
  "description": "Fires once for each column in Bulk Edit mode."
 },
 {
  "name": "change_locale",
  "file": "wp-includes\/class-wp-locale-switcher.php",
  "type": "action",
  "description": "Fires when the locale is switched to or restored."
 },
 {
  "name": "check_admin_referer",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires once the admin request has been validated or not."
 },
 {
  "name": "check_ajax_referer",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires once the Ajax request has been validated or not."
 },
 {
  "name": "check_comment_flood",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately before a comment is marked approved."
 },
 {
  "name": "check_passwords",
  "file": "wp-admin\/includes\/user.php",
  "type": "action_reference",
  "description": "Fires before the password and confirm password fields are checked for congruity."
 },
 {
  "name": "clean_attachment_cache",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after the given attachment's cache is cleaned."
 },
 {
  "name": "clean_comment_cache",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment has been removed from the object cache."
 },
 {
  "name": "clean_network_cache",
  "file": "wp-includes\/ms-network.php",
  "type": "action",
  "description": "Fires immediately after a network has been removed from the object cache."
 },
 {
  "name": "clean_object_term_cache",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after the object term cache has been cleaned."
 },
 {
  "name": "clean_page_cache",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires immediately after the given page's cache is cleaned."
 },
 {
  "name": "clean_post_cache",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires immediately after the given post's cache is cleaned."
 },
 {
  "name": "clean_site_cache",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires immediately after a site has been removed from the object cache."
 },
 {
  "name": "clean_taxonomy_cache",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a taxonomy's caches have been cleaned."
 },
 {
  "name": "clean_term_cache",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires once after each taxonomy's term cache has been cleaned."
 },
 {
  "name": "clean_user_cache",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires immediately after the given user's cache is cleaned."
 },
 {
  "name": "clear_auth_cookie",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires just before the authentication cookies are cleared."
 },
 {
  "name": "comment_atom_entry",
  "file": "wp-includes\/feed-atom-comments.php",
  "type": "action",
  "description": "Fires at the end of each Atom comment feed item."
 },
 {
  "name": "comment_closed",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when a comment is attempted on a post that has comments closed."
 },
 {
  "name": "comment_duplicate_trigger",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a duplicate comment is detected."
 },
 {
  "name": "comment_flood_trigger",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires before the comment flood message is triggered."
 },
 {
  "name": "comment_form",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires at the bottom of the comment form, inside the closing form tag."
 },
 {
  "name": "comment_form_after",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires after the comment form."
 },
 {
  "name": "comment_form_after_fields",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires after the comment fields in the comment form, excluding the textarea."
 },
 {
  "name": "comment_form_before",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires before the comment form."
 },
 {
  "name": "comment_form_before_fields",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires before the comment fields in the comment form, excluding the textarea."
 },
 {
  "name": "comment_form_comments_closed",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires after the comment form if comments are closed."
 },
 {
  "name": "comment_form_logged_in_after",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires after the is_user_logged_in() check in the comment form."
 },
 {
  "name": "comment_form_must_log_in_after",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires after the HTML-formatted 'must log in after' message in the comment form."
 },
 {
  "name": "comment_form_top",
  "file": "wp-includes\/comment-template.php",
  "type": "action",
  "description": "Fires at the top of the comment form, inside the form tag."
 },
 {
  "name": "comment_id_not_found",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when a comment is attempted on a post that does not exist."
 },
 {
  "name": "comment_loop_start",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action",
  "description": "Fires once the comment loop is started."
 },
 {
  "name": "comment_on_draft",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when a comment is attempted on a post in draft mode."
 },
 {
  "name": "comment_on_password_protected",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when a comment is attempted on a password-protected post."
 },
 {
  "name": "comment_on_trash",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when a comment is attempted on a trashed post."
 },
 {
  "name": "comment_post",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is inserted into the database."
 },
 {
  "name": "comment_{$new_status}_{$comment->comment_type}",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when the status of a specific comment type is in transition."
 },
 {
  "name": "comment_{$old_status}_to_{$new_status}",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when the comment status is in transition from one specific status to another."
 },
 {
  "name": "commentrss2_item",
  "file": "wp-includes\/feed-rss2-comments.php",
  "type": "action",
  "description": "Fires at the end of each RSS2 comment feed item."
 },
 {
  "name": "comments_atom_head",
  "file": "wp-includes\/feed-atom-comments.php",
  "type": "action",
  "description": "Fires at the end of the Atom comment feed header."
 },
 {
  "name": "commentsrss2_head",
  "file": "wp-includes\/feed-rss2-comments.php",
  "type": "action",
  "description": "Fires at the end of the RSS2 comment feed header."
 },
 {
  "name": "core_upgrade_preamble",
  "file": "wp-admin\/update-core.php",
  "type": "action",
  "description": "Fires after the core, plugin, and theme update tables."
 },
 {
  "name": "create_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately after a new term is created, before the term cache is cleaned."
 },
 {
  "name": "create_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a new term is created for a specific taxonomy."
 },
 {
  "name": "created_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a new term is created, and after the term cache has been cleaned."
 },
 {
  "name": "created_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a new term in a specific taxonomy is created, and after the term cache has been cleaned."
 },
 {
  "name": "current_screen",
  "file": "wp-admin\/includes\/class-wp-screen.php",
  "type": "action",
  "description": "Fires after the current screen has been set."
 },
 {
  "name": "custom_header_options",
  "file": "wp-admin\/includes\/class-custom-image-header.php",
  "type": "action",
  "description": "Fires just before the submit button in the custom header options form."
 },
 {
  "name": "customize_controls_enqueue_scripts",
  "file": "wp-admin\/customize.php",
  "type": "action",
  "description": "Enqueue Customizer control scripts."
 },
 {
  "name": "customize_controls_head",
  "file": "wp-admin\/customize.php",
  "type": "action",
  "description": "Fires in head section of Customizer controls."
 },
 {
  "name": "customize_controls_init",
  "file": "wp-admin\/customize.php",
  "type": "action",
  "description": "Fires when Customizer controls are initialized, before scripts are enqueued."
 },
 {
  "name": "customize_controls_print_footer_scripts",
  "file": "wp-admin\/customize.php",
  "type": "action",
  "description": "Prints templates, control scripts, and settings in the footer."
 },
 {
  "name": "customize_controls_print_scripts",
  "file": "wp-admin\/customize.php",
  "type": "action",
  "description": "Fires when Customizer control scripts are printed."
 },
 {
  "name": "customize_controls_print_styles",
  "file": "wp-admin\/customize.php",
  "type": "action",
  "description": "Fires when Customizer control styles are printed."
 },
 {
  "name": "customize_post_value_set",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Announce when any setting's unsanitized post value has been set."
 },
 {
  "name": "customize_post_value_set_{$setting_id}",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Announce when a specific setting's unsanitized post value has been set."
 },
 {
  "name": "customize_preview_init",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Fires once the Customizer preview has initialized and JavaScript settings have been printed."
 },
 {
  "name": "customize_preview_{$this->id}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "action",
  "description": "Fires when the WP_Customize_Setting::preview() method is called for settings not handled as theme_mods or options."
 },
 {
  "name": "customize_preview_{$this->type}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "action",
  "description": "Fires when the WP_Customize_Setting::preview() method is called for settings not handled as theme_mods or options."
 },
 {
  "name": "customize_register",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Fires once WordPress has loaded, allowing scripts and styles to be initialized."
 },
 {
  "name": "customize_render_control",
  "file": "wp-includes\/class-wp-customize-control.php",
  "type": "action",
  "description": "Fires just before the current Customizer control is rendered."
 },
 {
  "name": "customize_render_control_{$this->id}",
  "file": "wp-includes\/class-wp-customize-control.php",
  "type": "action",
  "description": "Fires just before a specific Customizer control is rendered."
 },
 {
  "name": "customize_render_panel",
  "file": "wp-includes\/class-wp-customize-panel.php",
  "type": "action",
  "description": "Fires before rendering a Customizer panel."
 },
 {
  "name": "customize_render_panel_{$this->id}",
  "file": "wp-includes\/class-wp-customize-panel.php",
  "type": "action",
  "description": "Fires before rendering a specific Customizer panel."
 },
 {
  "name": "customize_render_partials_after",
  "file": "wp-includes\/customize\/class-wp-customize-selective-refresh.php",
  "type": "action",
  "description": "Fires immediately after partials are rendered."
 },
 {
  "name": "customize_render_partials_before",
  "file": "wp-includes\/customize\/class-wp-customize-selective-refresh.php",
  "type": "action",
  "description": "Fires immediately before partials are rendered."
 },
 {
  "name": "customize_render_section",
  "file": "wp-includes\/class-wp-customize-section.php",
  "type": "action",
  "description": "Fires before rendering a Customizer section."
 },
 {
  "name": "customize_render_section_{$this->id}",
  "file": "wp-includes\/class-wp-customize-section.php",
  "type": "action",
  "description": "Fires before rendering a specific Customizer section."
 },
 {
  "name": "customize_save",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Fires once the theme has switched in the Customizer, but before settings have been saved."
 },
 {
  "name": "customize_save_after",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Fires after Customize settings have been saved."
 },
 {
  "name": "customize_save_validation_before",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Fires before save validation happens."
 },
 {
  "name": "customize_save_{$id_base}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "action",
  "description": "Fires when the WP_Customize_Setting::save() method is called."
 },
 {
  "name": "customize_update_{$this->type}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "action",
  "description": "Fires when the WP_Customize_Setting::update() method is called for settings not handled as theme_mods or options."
 },
 {
  "name": "dbx_post_sidebar",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires after all meta box sections have been output, before the closing #post-body div."
 },
 {
  "name": "deactivate_blog",
  "file": "wp-admin\/network\/sites.php",
  "type": "action",
  "description": "Fires before a network site is deactivated."
 },
 {
  "name": "deactivate_plugin",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires before a plugin is deactivated."
 },
 {
  "name": "deactivate_{$plugin}",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires as a specific plugin is being deactivated."
 },
 {
  "name": "deactivated_plugin",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires after a plugin is deactivated."
 },
 {
  "name": "delete_attachment",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires before an attachment is deleted, at the start of wp_delete_attachment()."
 },
 {
  "name": "delete_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately before a comment is deleted from the database."
 },
 {
  "name": "delete_link",
  "file": "wp-admin\/includes\/bookmark.php",
  "type": "action",
  "description": "Fires before a link is deleted."
 },
 {
  "name": "delete_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires immediately before an option is deleted."
 },
 {
  "name": "delete_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a specific option has been deleted."
 },
 {
  "name": "delete_plugin",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires immediately before a plugin deletion attempt."
 },
 {
  "name": "delete_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires immediately before a post is deleted from the database."
 },
 {
  "name": "delete_postmeta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately before deleting metadata for a post."
 },
 {
  "name": "delete_site_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a network option has been deleted."
 },
 {
  "name": "delete_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a specific network option has been deleted."
 },
 {
  "name": "delete_site_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires immediately before a specific site transient is deleted."
 },
 {
  "name": "delete_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term is deleted from the database and the cache is cleaned."
 },
 {
  "name": "delete_term_relationships",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately before an object-term relationship is deleted."
 },
 {
  "name": "delete_term_taxonomy",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately before a term taxonomy ID is deleted."
 },
 {
  "name": "delete_theme",
  "file": "wp-admin\/includes\/theme.php",
  "type": "action",
  "description": "Fires immediately before a theme deletion attempt."
 },
 {
  "name": "delete_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires immediately before a specific transient is deleted."
 },
 {
  "name": "delete_user",
  "file": "wp-admin\/includes\/user.php",
  "type": "action",
  "description": "Fires immediately before a user is deleted from the database."
 },
 {
  "name": "delete_user_form",
  "file": "wp-admin\/users.php",
  "type": "action",
  "description": "Fires at the end of the delete users form prior to the confirm button."
 },
 {
  "name": "delete_widget",
  "file": "wp-admin\/widgets-form.php",
  "type": "action",
  "description": "Fires immediately after a widget has been marked for deletion."
 },
 {
  "name": "delete_{$meta_type}_meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately before deleting metadata of a specific type."
 },
 {
  "name": "delete_{$meta_type}meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately before deleting post or comment metadata of a specific type."
 },
 {
  "name": "delete_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term in a specific taxonomy is deleted."
 },
 {
  "name": "deleted_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is deleted from the database."
 },
 {
  "name": "deleted_link",
  "file": "wp-admin\/includes\/bookmark.php",
  "type": "action",
  "description": "Fires after a link has been deleted."
 },
 {
  "name": "deleted_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after an option has been deleted."
 },
 {
  "name": "deleted_plugin",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires immediately after a plugin deletion attempt."
 },
 {
  "name": "deleted_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires immediately after a post is deleted from the database."
 },
 {
  "name": "deleted_postmeta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately after deleting metadata for a post."
 },
 {
  "name": "deleted_site_transient",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a transient is deleted."
 },
 {
  "name": "deleted_term_relationships",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately after an object-term relationship is deleted."
 },
 {
  "name": "deleted_term_taxonomy",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately after a term taxonomy ID is deleted."
 },
 {
  "name": "deleted_theme",
  "file": "wp-admin\/includes\/theme.php",
  "type": "action",
  "description": "Fires immediately after a theme deletion attempt."
 },
 {
  "name": "deleted_transient",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after a transient is deleted."
 },
 {
  "name": "deleted_user",
  "file": "wp-admin\/includes\/user.php",
  "type": "action",
  "description": "Fires immediately after a user is deleted from the database."
 },
 {
  "name": "deleted_{$meta_type}_meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately after deleting metadata of a specific type."
 },
 {
  "name": "deleted_{$meta_type}meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately after deleting post or comment metadata of a specific type."
 },
 {
  "name": "deprecated_argument_run",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when a deprecated argument is called."
 },
 {
  "name": "deprecated_constructor_run",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when a deprecated constructor is called."
 },
 {
  "name": "deprecated_file_included",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when a deprecated file is called."
 },
 {
  "name": "deprecated_function_run",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when a deprecated function is called."
 },
 {
  "name": "deprecated_hook_run",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when a deprecated hook is called."
 },
 {
  "name": "do_all_pings",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after the `do_pings` event to hook services individually."
 },
 {
  "name": "do_favicon",
  "file": "wp-includes\/template-loader.php",
  "type": "action",
  "description": "Fired when the template loader determines a favicon.ico request."
 },
 {
  "name": "do_faviconico",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when serving the favicon.ico file."
 },
 {
  "name": "do_feed_{$feed}",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires once the given feed is loaded."
 },
 {
  "name": "do_meta_boxes",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires after meta boxes have been added."
 },
 {
  "name": "do_robots",
  "file": "wp-includes\/template-loader.php",
  "type": "action",
  "description": "Fired when the template loader determines a robots.txt request."
 },
 {
  "name": "do_robotstxt",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when displaying the robots.txt file."
 },
 {
  "name": "doing_it_wrong_run",
  "file": "wp-includes\/functions.php",
  "type": "action",
  "description": "Fires when the given function is being used incorrectly."
 },
 {
  "name": "dynamic_sidebar",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires before a widget's display callback is called."
 },
 {
  "name": "dynamic_sidebar_after",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires after widgets are rendered in a dynamic sidebar."
 },
 {
  "name": "dynamic_sidebar_before",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires before widgets are rendered in a dynamic sidebar."
 },
 {
  "name": "edit_attachment",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once an existing attachment has been updated."
 },
 {
  "name": "edit_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is updated in the database."
 },
 {
  "name": "edit_form_advanced",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires after 'normal' context meta boxes have been output for all post types other than 'page'."
 },
 {
  "name": "edit_form_after_editor",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires after the content editor."
 },
 {
  "name": "edit_form_after_title",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires after the title field."
 },
 {
  "name": "edit_form_before_permalink",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires before the permalink field in the edit form."
 },
 {
  "name": "edit_form_top",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires at the beginning of the edit form."
 },
 {
  "name": "edit_link",
  "file": "wp-admin\/includes\/bookmark.php",
  "type": "action",
  "description": "Fires after a link was updated in the database."
 },
 {
  "name": "edit_page_form",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires after 'normal' context meta boxes have been output for the 'page' post type."
 },
 {
  "name": "edit_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once an existing post has been updated."
 },
 {
  "name": "edit_post_{$post->post_type}",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once an existing post has been updated."
 },
 {
  "name": "edit_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term has been updated, but before the term cache has been cleaned."
 },
 {
  "name": "edit_term_taxonomies",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately before a term to delete's children are reassigned a parent."
 },
 {
  "name": "edit_term_taxonomy",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediate before a term-taxonomy relationship is updated."
 },
 {
  "name": "edit_terms",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately before the given terms are edited."
 },
 {
  "name": "edit_user_created_user",
  "file": "wp-admin\/includes\/user.php",
  "type": "action",
  "description": "Fires after a new user has been created."
 },
 {
  "name": "edit_user_profile",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires after the 'About the User' settings table on the 'Edit User' screen."
 },
 {
  "name": "edit_user_profile_update",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires before the page loads on the 'Edit User' screen."
 },
 {
  "name": "edit_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term in a specific taxonomy has been updated, but before the term cache has been cleaned."
 },
 {
  "name": "edited_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term has been updated, and the term cache has been cleaned."
 },
 {
  "name": "edited_term_taxonomies",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately after a term to delete's children are reassigned a parent."
 },
 {
  "name": "edited_term_taxonomy",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately after a term-taxonomy relationship is updated."
 },
 {
  "name": "edited_terms",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires immediately after a term is updated in the database, but before its term-taxonomy relationship is updated."
 },
 {
  "name": "edited_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term for a specific taxonomy has been updated, and the term cache has been cleaned."
 },
 {
  "name": "embed_content",
  "file": "wp-includes\/theme-compat\/embed-content.php",
  "type": "action",
  "description": "Prints additional content after the embed excerpt."
 },
 {
  "name": "embed_content_meta",
  "file": "wp-includes\/theme-compat\/embed-content.php",
  "type": "action",
  "description": "Prints additional meta content in the embed template."
 },
 {
  "name": "embed_footer",
  "file": "wp-includes\/theme-compat\/footer-embed.php",
  "type": "action",
  "description": "Prints scripts or data before the closing body tag in the embed template."
 },
 {
  "name": "embed_head",
  "file": "wp-includes\/theme-compat\/header-embed.php",
  "type": "action",
  "description": "Prints scripts or data in the embed template head tag."
 },
 {
  "name": "end_fetch_post_thumbnail_html",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "action",
  "description": "Fires after fetching the post thumbnail HTML."
 },
 {
  "name": "enqueue_block_assets",
  "file": "wp-includes\/script-loader.php",
  "type": "action",
  "description": "Fires after enqueuing block assets for both editor and front-end."
 },
 {
  "name": "enqueue_block_editor_assets",
  "file": "wp-admin\/edit-form-blocks.php",
  "type": "action",
  "description": "Fires after block assets have been enqueued for the editing interface."
 },
 {
  "name": "enqueue_embed_scripts",
  "file": "wp-includes\/embed.php",
  "type": "action",
  "description": "Fires when scripts and styles are enqueued for the embed iframe."
 },
 {
  "name": "export_filters",
  "file": "wp-admin\/export.php",
  "type": "action",
  "description": "Fires at the end of the export filters form."
 },
 {
  "name": "export_wp",
  "file": "wp-admin\/includes\/export.php",
  "type": "action",
  "description": "Fires at the beginning of an export, before any headers are sent."
 },
 {
  "name": "generate_recovery_mode_key",
  "file": "wp-includes\/class-wp-recovery-mode-key-service.php",
  "type": "action",
  "description": "Fires when a recovery mode key is generated."
 },
 {
  "name": "generate_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "action_reference",
  "description": "Fires after the rewrite rules are generated."
 },
 {
  "name": "get_footer",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires before the footer template file is loaded."
 },
 {
  "name": "get_header",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires before the header template file is loaded."
 },
 {
  "name": "get_sidebar",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires before the sidebar template file is loaded."
 },
 {
  "name": "get_template_part",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires before an attempt is made to locate and load a template part."
 },
 {
  "name": "get_template_part_{$slug}",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires before the specified template part file is loaded."
 },
 {
  "name": "grant_super_admin",
  "file": "wp-includes\/capabilities.php",
  "type": "action",
  "description": "Fires before the user is granted Super Admin privileges."
 },
 {
  "name": "granted_super_admin",
  "file": "wp-includes\/capabilities.php",
  "type": "action",
  "description": "Fires after the user is granted Super Admin privileges."
 },
 {
  "name": "heartbeat_nopriv_tick",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "action",
  "description": "Fires when Heartbeat ticks in no-privilege environments."
 },
 {
  "name": "heartbeat_tick",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "action",
  "description": "Fires when Heartbeat ticks in logged-in environments."
 },
 {
  "name": "http_api_curl",
  "file": "wp-includes\/class-wp-http-curl.php",
  "type": "action_reference",
  "description": "Fires before the cURL request is executed."
 },
 {
  "name": "http_api_debug",
  "file": "wp-includes\/class-wp-http.php",
  "type": "action",
  "description": "Fires after an HTTP API response is received and before the response is returned."
 },
 {
  "name": "in_admin_footer",
  "file": "wp-admin\/admin-footer.php",
  "type": "action",
  "description": "Fires after the opening tag for the admin footer."
 },
 {
  "name": "in_admin_header",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Fires at the beginning of the content section in an admin page."
 },
 {
  "name": "in_plugin_update_message-{$file}",
  "file": "wp-admin\/includes\/update.php",
  "type": "action",
  "description": "Fires at the end of the update message container in each row of the plugins list table."
 },
 {
  "name": "in_theme_update_message-{$theme_key}",
  "file": "wp-admin\/includes\/update.php",
  "type": "action",
  "description": "Fires at the end of the update message container in each row of the themes list table."
 },
 {
  "name": "in_widget_form",
  "file": "wp-includes\/class-wp-widget.php",
  "type": "action_reference",
  "description": "Fires at the end of the widget control form."
 },
 {
  "name": "init",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires after WordPress has finished loading but before any headers are sent."
 },
 {
  "name": "install_plugins_pre_{$tab}",
  "file": "wp-admin\/plugin-install.php",
  "type": "action",
  "description": "Fires before each tab on the Install Plugins screen is loaded."
 },
 {
  "name": "install_plugins_table_header",
  "file": "wp-admin\/includes\/class-wp-plugin-install-list-table.php",
  "type": "action",
  "description": "Fires before the Plugin Install table header pagination is displayed."
 },
 {
  "name": "install_plugins_{$tab}",
  "file": "wp-admin\/plugin-install.php",
  "type": "action",
  "description": "Fires after the plugins list table in each tab of the Install Plugins screen."
 },
 {
  "name": "install_themes_pre_{$tab}",
  "file": "wp-admin\/theme-install.php",
  "type": "action",
  "description": "Fires before each of the tabs are rendered on the Install Themes page."
 },
 {
  "name": "install_themes_table_header",
  "file": "wp-admin\/includes\/class-wp-theme-install-list-table.php",
  "type": "action",
  "description": "Fires in the Install Themes list table header."
 },
 {
  "name": "install_themes_{$tab}",
  "file": "wp-admin\/theme-install.php",
  "type": "action",
  "description": "Fires at the top of each of the tabs on the Install Themes page."
 },
 {
  "name": "invite_user",
  "file": "wp-admin\/user-new.php",
  "type": "action",
  "description": "Fires immediately after an existing user is invited to join the site, but before the notification is sent."
 },
 {
  "name": "is_wp_error_instance",
  "file": "wp-includes\/load.php",
  "type": "action",
  "description": "Fires when `is_wp_error()` is called and its parameter is an instance of `WP_Error`."
 },
 {
  "name": "load-importer-{$importer}",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Fires before an importer screen is loaded."
 },
 {
  "name": "load-widgets.php",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "action",
  "description": "Fires early when editing the widgets displayed in sidebars."
 },
 {
  "name": "load-{$page_hook}",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Fires before a particular screen is loaded."
 },
 {
  "name": "load-{$pagenow}",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Fires before a particular screen is loaded."
 },
 {
  "name": "load-{$plugin_page}",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Fires before a particular screen is loaded."
 },
 {
  "name": "load_feed_engine",
  "file": "wp-includes\/rss.php",
  "type": "action",
  "description": "Fires before MagpieRSS is loaded, to optionally replace it."
 },
 {
  "name": "load_textdomain",
  "file": "wp-includes\/l10n.php",
  "type": "action",
  "description": "Fires before the MO translation file is loaded."
 },
 {
  "name": "login_enqueue_scripts",
  "file": "wp-login.php",
  "type": "action",
  "description": "Enqueue scripts and styles for the login page."
 },
 {
  "name": "login_footer",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires in the login page footer."
 },
 {
  "name": "login_form",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires following the 'Password' field in the login form."
 },
 {
  "name": "login_form_{$action}",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires before a specified login form action."
 },
 {
  "name": "login_head",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires in the login page header after scripts are enqueued."
 },
 {
  "name": "login_header",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires in the login page header after the body tag is opened."
 },
 {
  "name": "login_init",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires when the login form is initialized."
 },
 {
  "name": "loop_end",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action_reference",
  "description": "Fires once the loop has ended."
 },
 {
  "name": "loop_no_results",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action",
  "description": "Fires if no results are found in a post query."
 },
 {
  "name": "loop_start",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action_reference",
  "description": "Fires once the loop is started."
 },
 {
  "name": "lost_password",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires before the lost password form."
 },
 {
  "name": "lostpassword_form",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires inside the lostpassword form tags, before the hidden fields."
 },
 {
  "name": "lostpassword_post",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires before errors are returned from a password reset request."
 },
 {
  "name": "make_delete_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'deleted' status is added to a site."
 },
 {
  "name": "make_ham_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'spam' status is removed from a site."
 },
 {
  "name": "make_ham_user",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires after the user is marked as a HAM user. Opposite of SPAM."
 },
 {
  "name": "make_spam_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'spam' status is added to a site."
 },
 {
  "name": "make_spam_user",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires after the user is marked as a SPAM user."
 },
 {
  "name": "make_undelete_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'deleted' status is removed from a site."
 },
 {
  "name": "manage_comments_custom_column",
  "file": "wp-admin\/includes\/class-wp-comments-list-table.php",
  "type": "action",
  "description": "Fires when the default column output is displayed for a single row."
 },
 {
  "name": "manage_comments_nav",
  "file": "wp-admin\/includes\/class-wp-comments-list-table.php",
  "type": "action",
  "description": "Fires after the Filter submit button for comment types."
 },
 {
  "name": "manage_link_custom_column",
  "file": "wp-admin\/includes\/class-wp-links-list-table.php",
  "type": "action",
  "description": "Fires for each registered custom link column."
 },
 {
  "name": "manage_media_custom_column",
  "file": "wp-admin\/includes\/class-wp-media-list-table.php",
  "type": "action",
  "description": "Fires for each custom column in the Media list table."
 },
 {
  "name": "manage_pages_custom_column",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "action",
  "description": "Fires in each custom column on the Posts list table."
 },
 {
  "name": "manage_plugins_custom_column",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "action",
  "description": "Fires inside each custom column of the Plugins list table."
 },
 {
  "name": "manage_posts_custom_column",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "action",
  "description": "Fires in each custom column in the Posts list table."
 },
 {
  "name": "manage_posts_extra_tablenav",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "action",
  "description": "Fires immediately following the closing \"actions\" div in the tablenav for the posts list table."
 },
 {
  "name": "manage_sites_custom_column",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "action",
  "description": "Fires for each registered custom column in the Sites list table."
 },
 {
  "name": "manage_sites_extra_tablenav",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "action",
  "description": "Fires immediately following the closing \"actions\" div in the tablenav for the MS sites list table."
 },
 {
  "name": "manage_themes_custom_column",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "action",
  "description": "Fires inside each custom column of the Multisite themes list table."
 },
 {
  "name": "manage_users_extra_tablenav",
  "file": "wp-admin\/includes\/class-wp-users-list-table.php",
  "type": "action",
  "description": "Fires immediately following the closing \"actions\" div in the tablenav for the users list table."
 },
 {
  "name": "manage_{$post->post_type}_posts_custom_column",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "action",
  "description": "Fires for each custom column of a specific post type in the Posts list table."
 },
 {
  "name": "manage_{$this->screen->id}_custom_column",
  "file": "wp-admin\/includes\/class-wp-application-passwords-list-table.php",
  "type": "action",
  "description": "Fires for each custom column in the Application Passwords list table."
 },
 {
  "name": "manage_{$this->screen->id}_custom_column_js_template",
  "file": "wp-admin\/includes\/class-wp-application-passwords-list-table.php",
  "type": "action",
  "description": "Fires in the JavaScript row template for each custom column in the Application Passwords list table."
 },
 {
  "name": "mature_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'mature' status is added to a site."
 },
 {
  "name": "media_buttons",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "action",
  "description": "Fires after the default media button(s) are displayed."
 },
 {
  "name": "media_upload_{$tab}",
  "file": "wp-admin\/media-upload.php",
  "type": "action",
  "description": "Fires inside limited and specific upload-tab views in the legacy (pre-3.5.0) media popup."
 },
 {
  "name": "media_upload_{$type}",
  "file": "wp-admin\/media-upload.php",
  "type": "action",
  "description": "Fires inside specific upload-type views in the legacy (pre-3.5.0) media popup based on the current tab."
 },
 {
  "name": "metadata_lazyloader_queued_objects",
  "file": "wp-includes\/class-wp-metadata-lazyloader.php",
  "type": "action",
  "description": "Fires after objects are added to the metadata lazy-load queue."
 },
 {
  "name": "ms_loaded",
  "file": "wp-includes\/ms-settings.php",
  "type": "action",
  "description": "Fires after the current site and network have been detected and loaded in multisite's bootstrap."
 },
 {
  "name": "ms_network_not_found",
  "file": "wp-includes\/ms-load.php",
  "type": "action",
  "description": "Fires when a network cannot be found based on the requested domain and path."
 },
 {
  "name": "ms_site_not_found",
  "file": "wp-includes\/ms-load.php",
  "type": "action",
  "description": "Fires when a network can be determined but a site cannot."
 },
 {
  "name": "mu_activity_box_end",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires at the end of the 'Right Now' widget in the Network Admin dashboard."
 },
 {
  "name": "mu_plugin_loaded",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires once a single must-use plugin has loaded."
 },
 {
  "name": "mu_rightnow_end",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires at the end of the 'Right Now' widget in the Network Admin dashboard."
 },
 {
  "name": "muplugins_loaded",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires once all must-use and network-activated plugins have loaded."
 },
 {
  "name": "myblogs_allblogs_options",
  "file": "wp-admin\/my-sites.php",
  "type": "action",
  "description": "Fires before the sites list on the My Sites screen."
 },
 {
  "name": "network_admin_edit_{$action}",
  "file": "wp-admin\/network\/edit.php",
  "type": "action",
  "description": "Fires the requested handler action."
 },
 {
  "name": "network_admin_menu",
  "file": "wp-admin\/includes\/menu.php",
  "type": "action",
  "description": "Fires before the administration menu loads in the Network Admin."
 },
 {
  "name": "network_admin_notices",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Prints network admin screen notices."
 },
 {
  "name": "network_plugin_loaded",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires once a single network-activated plugin has loaded."
 },
 {
  "name": "network_site_info_form",
  "file": "wp-admin\/network\/site-info.php",
  "type": "action",
  "description": "Fires at the end of the site info form in network admin."
 },
 {
  "name": "network_site_new_created_user",
  "file": "wp-admin\/network\/site-new.php",
  "type": "action",
  "description": "Fires after a new user has been created via the network site-new.php page."
 },
 {
  "name": "network_site_new_form",
  "file": "wp-admin\/network\/site-new.php",
  "type": "action",
  "description": "Fires at the end of the new site form in network admin."
 },
 {
  "name": "network_site_users_after_list_table",
  "file": "wp-admin\/network\/site-users.php",
  "type": "action",
  "description": "Fires after the list table on the Users screen in the Multisite Network Admin."
 },
 {
  "name": "network_site_users_created_user",
  "file": "wp-admin\/network\/site-users.php",
  "type": "action",
  "description": "Fires after a user has been created via the network site-users.php page."
 },
 {
  "name": "network_user_new_created_user",
  "file": "wp-admin\/network\/user-new.php",
  "type": "action",
  "description": "Fires after a new user has been created via the network user-new.php page."
 },
 {
  "name": "network_user_new_form",
  "file": "wp-admin\/network\/user-new.php",
  "type": "action",
  "description": "Fires at the end of the new user form in network admin."
 },
 {
  "name": "opml_head",
  "file": "wp-links-opml.php",
  "type": "action",
  "description": "Fires in the OPML header."
 },
 {
  "name": "page_attributes_meta_box_template",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires immediately after the label inside the 'Template' section of the 'Page Attributes' meta box."
 },
 {
  "name": "page_attributes_misc_attributes",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires before the help hint text in the 'Page Attributes' meta box."
 },
 {
  "name": "parse_comment_query",
  "file": "wp-includes\/class-wp-comment-query.php",
  "type": "action_reference",
  "description": "Fires after the comment query vars have been parsed."
 },
 {
  "name": "parse_network_query",
  "file": "wp-includes\/class-wp-network-query.php",
  "type": "action_reference",
  "description": "Fires after the network query vars have been parsed."
 },
 {
  "name": "parse_query",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action_reference",
  "description": "Fires after the main query vars have been parsed."
 },
 {
  "name": "parse_request",
  "file": "wp-includes\/class-wp.php",
  "type": "action_reference",
  "description": "Fires once all query variables for the current request have been parsed."
 },
 {
  "name": "parse_site_query",
  "file": "wp-includes\/class-wp-site-query.php",
  "type": "action_reference",
  "description": "Fires after the site query vars have been parsed."
 },
 {
  "name": "parse_tax_query",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action",
  "description": "Fires after taxonomy-related query vars have been parsed."
 },
 {
  "name": "parse_term_query",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "action",
  "description": "Fires after term query vars have been parsed."
 },
 {
  "name": "password_reset",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires before the user's password is reset."
 },
 {
  "name": "permalink_structure_changed",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "action",
  "description": "Fires after the permalink structure is updated."
 },
 {
  "name": "personal_options",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires at the end of the 'Personal Options' settings table on the user editing screen."
 },
 {
  "name": "personal_options_update",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires before the page loads on the 'Profile' editing screen."
 },
 {
  "name": "phpmailer_init",
  "file": "wp-includes\/pluggable.php",
  "type": "action_reference",
  "description": "Fires after PHPMailer is initialized."
 },
 {
  "name": "pingback_post",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a post pingback has been sent."
 },
 {
  "name": "plugin_loaded",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires once a single activated plugin has loaded."
 },
 {
  "name": "plugins_loaded",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires once activated plugins have loaded."
 },
 {
  "name": "populate_options",
  "file": "wp-admin\/includes\/schema.php",
  "type": "action",
  "description": "Fires before creating WordPress options and populating their default values."
 },
 {
  "name": "post-html-upload-ui",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires after the upload button in the media upload interface."
 },
 {
  "name": "post-plupload-upload-ui",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires after the upload interface loads."
 },
 {
  "name": "post-upload-ui",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires on the post upload UI screen."
 },
 {
  "name": "post_action_{$action}",
  "file": "wp-admin\/post.php",
  "type": "action",
  "description": "Fires for a given custom post action request."
 },
 {
  "name": "post_comment_status_meta_box-options",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires at the end of the Discussion meta box on the post editing screen."
 },
 {
  "name": "post_edit_form_tag",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires inside the post editor form tag."
 },
 {
  "name": "post_lock_lost_dialog",
  "file": "wp-admin\/includes\/post.php",
  "type": "action",
  "description": "Fires inside the dialog displayed when a user has lost the post lock."
 },
 {
  "name": "post_locked_dialog",
  "file": "wp-admin\/includes\/post.php",
  "type": "action",
  "description": "Fires inside the post locked dialog before the buttons are displayed."
 },
 {
  "name": "post_stuck",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once a post has been added to the sticky list."
 },
 {
  "name": "post_submitbox_minor_actions",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires after the Save Draft (or Save as Pending) and Preview (or Preview Changes) buttons in the Publish meta box."
 },
 {
  "name": "post_submitbox_misc_actions",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires after the post time\/date setting in the Publish meta box."
 },
 {
  "name": "post_submitbox_start",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires at the beginning of the publishing actions section of the Publish meta box."
 },
 {
  "name": "post_unstuck",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once a post has been removed from the sticky list."
 },
 {
  "name": "post_updated",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once an existing post has been updated."
 },
 {
  "name": "posts_selection",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action",
  "description": "Fires to announce the query's current selection parameters."
 },
 {
  "name": "pre-html-upload-ui",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires before the upload button in the media upload interface."
 },
 {
  "name": "pre-plupload-upload-ui",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires before the upload interface loads."
 },
 {
  "name": "pre-upload-ui",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires just before the legacy (pre-3.5.0) upload interface is loaded."
 },
 {
  "name": "pre_auto_update",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "action",
  "description": "Fires immediately prior to an auto-update."
 },
 {
  "name": "pre_comment_on_post",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires before a comment is posted."
 },
 {
  "name": "pre_current_active_plugins",
  "file": "wp-admin\/plugins.php",
  "type": "action",
  "description": "Fires before the plugins list table is rendered."
 },
 {
  "name": "pre_delete_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires immediately before a specific network option is deleted."
 },
 {
  "name": "pre_delete_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires when deleting a term, before any modifications are made to posts or terms."
 },
 {
  "name": "pre_get_comments",
  "file": "wp-includes\/class-wp-comment-query.php",
  "type": "action_reference",
  "description": "Fires before comments are retrieved."
 },
 {
  "name": "pre_get_networks",
  "file": "wp-includes\/class-wp-network-query.php",
  "type": "action_reference",
  "description": "Fires before networks are retrieved."
 },
 {
  "name": "pre_get_posts",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action_reference",
  "description": "Fires after the query variable object is created, but before the actual query is run."
 },
 {
  "name": "pre_get_search_form",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires before the search form is retrieved, at the start of get_search_form()."
 },
 {
  "name": "pre_get_sites",
  "file": "wp-includes\/class-wp-site-query.php",
  "type": "action_reference",
  "description": "Fires before sites are retrieved."
 },
 {
  "name": "pre_get_terms",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "action_reference",
  "description": "Fires before terms are retrieved."
 },
 {
  "name": "pre_get_users",
  "file": "wp-includes\/class-wp-user-query.php",
  "type": "action_reference",
  "description": "Fires before the WP_User_Query has been parsed."
 },
 {
  "name": "pre_network_site_new_created_user",
  "file": "wp-admin\/network\/site-new.php",
  "type": "action",
  "description": "Fires immediately before a new user is created via the network site-new.php page."
 },
 {
  "name": "pre_ping",
  "file": "wp-includes\/comment.php",
  "type": "action_reference",
  "description": "Fires just before pinging back links found in a post."
 },
 {
  "name": "pre_post_update",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires immediately before an existing post is updated in the database."
 },
 {
  "name": "pre_trackback_post",
  "file": "wp-trackback.php",
  "type": "action",
  "description": "Fires before the trackback is added to a post."
 },
 {
  "name": "pre_uninstall_plugin",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires in uninstall_plugin() immediately before the plugin is uninstalled."
 },
 {
  "name": "pre_user_query",
  "file": "wp-includes\/class-wp-user-query.php",
  "type": "action_reference",
  "description": "Fires after the WP_User_Query has been parsed, and before the query is executed."
 },
 {
  "name": "preprocess_signup_form",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires when the site sign-up form is sent."
 },
 {
  "name": "print_default_editor_scripts",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "action",
  "description": "Fires when the editor scripts are loaded for later initialization, after all scripts and settings are printed."
 },
 {
  "name": "print_media_templates",
  "file": "wp-includes\/media-template.php",
  "type": "action",
  "description": "Fires when the custom Backbone media templates are printed."
 },
 {
  "name": "profile_personal_options",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires after the 'Personal Options' settings table on the 'Profile' editing screen."
 },
 {
  "name": "profile_update",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires immediately after an existing user is updated."
 },
 {
  "name": "publish_phone",
  "file": "wp-mail.php",
  "type": "action",
  "description": "Fires after a post submitted by email is published."
 },
 {
  "name": "quick_edit_custom_box",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "action",
  "description": "Fires once for each column in Quick Edit mode."
 },
 {
  "name": "rdf_header",
  "file": "wp-includes\/feed-rdf.php",
  "type": "action",
  "description": "Fires at the end of the RDF feed header."
 },
 {
  "name": "rdf_item",
  "file": "wp-includes\/feed-rdf.php",
  "type": "action",
  "description": "Fires at the end of each RDF feed item."
 },
 {
  "name": "rdf_ns",
  "file": "wp-includes\/feed-rdf.php",
  "type": "action",
  "description": "Fires at the end of the feed root to add namespaces."
 },
 {
  "name": "register_form",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires following the 'Email' field in the user registration form."
 },
 {
  "name": "register_new_user",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires after a new user registration has been recorded."
 },
 {
  "name": "register_post",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires when submitting registration form data, before the user is created."
 },
 {
  "name": "register_setting",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires immediately before the setting is registered but after its filters are in place."
 },
 {
  "name": "register_sidebar",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires once a sidebar has been registered."
 },
 {
  "name": "registered_post_type",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after a post type is registered."
 },
 {
  "name": "registered_taxonomy",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a taxonomy is registered."
 },
 {
  "name": "registered_taxonomy_for_object_type",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a taxonomy is registered for an object type."
 },
 {
  "name": "remove_user_from_blog",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires before a user is removed from a site."
 },
 {
  "name": "remove_user_role",
  "file": "wp-includes\/class-wp-user.php",
  "type": "action",
  "description": "Fires immediately after a role as been removed from a user."
 },
 {
  "name": "render_block_core_template_part_file",
  "file": "wp-includes\/blocks\/template-part.php",
  "type": "action",
  "description": "Fires when a block template part is loaded from a template part in the theme."
 },
 {
  "name": "render_block_core_template_part_none",
  "file": "wp-includes\/blocks\/template-part.php",
  "type": "action",
  "description": "Fires when a requested block template part does not exist in the database nor in the theme."
 },
 {
  "name": "render_block_core_template_part_post",
  "file": "wp-includes\/blocks\/template-part.php",
  "type": "action",
  "description": "Fires when a block template part is loaded from a template post stored in the database."
 },
 {
  "name": "requests-{$hook}",
  "file": "wp-includes\/class-wp-http-requests-hooks.php",
  "type": "action_reference",
  "description": "Transforms a native Request hook to a WordPress action."
 },
 {
  "name": "resetpass_form",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires following the 'Strength indicator' meter in the user password reset form."
 },
 {
  "name": "rest_after_insert_application_password",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-application-passwords-controller.php",
  "type": "action",
  "description": "Fires after a single application password is completely created or updated via the REST API."
 },
 {
  "name": "rest_after_insert_attachment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-attachments-controller.php",
  "type": "action",
  "description": "Fires after a single attachment is completely created or updated via the REST API."
 },
 {
  "name": "rest_after_insert_comment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "action",
  "description": "Fires completely after a comment is created or updated via the REST API."
 },
 {
  "name": "rest_after_insert_nav_menu_item",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-menu-items-controller.php",
  "type": "action",
  "description": "Fires after a single menu item is completely created or updated via the REST API."
 },
 {
  "name": "rest_after_insert_user",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-users-controller.php",
  "type": "action",
  "description": "Fires after a user is completely created or updated via the REST API."
 },
 {
  "name": "rest_after_insert_{$this->post_type}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "action",
  "description": "Fires after a single post is completely created or updated via the REST API."
 },
 {
  "name": "rest_after_insert_{$this->taxonomy}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-terms-controller.php",
  "type": "action",
  "description": "Fires after a single term is completely created or updated via the REST API."
 },
 {
  "name": "rest_after_save_widget",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-widgets-controller.php",
  "type": "action",
  "description": "Fires after a widget is created or updated via the REST API."
 },
 {
  "name": "rest_api_init",
  "file": "wp-includes\/rest-api.php",
  "type": "action",
  "description": "Fires when preparing to serve a REST API request."
 },
 {
  "name": "rest_delete_comment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "action",
  "description": "Fires after a comment is deleted via the REST API."
 },
 {
  "name": "rest_delete_nav_menu_item",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-menu-items-controller.php",
  "type": "action",
  "description": "Fires immediately after a single menu item is deleted via the REST API."
 },
 {
  "name": "rest_delete_revision",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-revisions-controller.php",
  "type": "action",
  "description": "Fires after a revision is deleted via the REST API."
 },
 {
  "name": "rest_delete_user",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-users-controller.php",
  "type": "action",
  "description": "Fires immediately after a user is deleted via the REST API."
 },
 {
  "name": "rest_delete_widget",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-widgets-controller.php",
  "type": "action",
  "description": "Fires after a widget is deleted via the REST API."
 },
 {
  "name": "rest_delete_{$this->post_type}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "action",
  "description": "Fires immediately after a single post is deleted or trashed via the REST API."
 },
 {
  "name": "rest_delete_{$this->taxonomy}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-terms-controller.php",
  "type": "action",
  "description": "Fires after a single term is deleted via the REST API."
 },
 {
  "name": "rest_insert_attachment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-attachments-controller.php",
  "type": "action",
  "description": "Fires after a single attachment is created or updated via the REST API."
 },
 {
  "name": "rest_insert_comment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "action",
  "description": "Fires after a comment is created or updated via the REST API."
 },
 {
  "name": "rest_insert_nav_menu_item",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-menu-items-controller.php",
  "type": "action",
  "description": "Fires after a single menu item is created or updated via the REST API."
 },
 {
  "name": "rest_insert_user",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-users-controller.php",
  "type": "action",
  "description": "Fires immediately after a user is created or updated via the REST API."
 },
 {
  "name": "rest_insert_{$this->post_type}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "action",
  "description": "Fires after a single post is created or updated via the REST API."
 },
 {
  "name": "rest_insert_{$this->taxonomy}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-terms-controller.php",
  "type": "action",
  "description": "Fires after a single term is created or updated via the REST API."
 },
 {
  "name": "rest_save_sidebar",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-sidebars-controller.php",
  "type": "action",
  "description": "Fires after a sidebar is updated via the REST API."
 },
 {
  "name": "restore_previous_locale",
  "file": "wp-includes\/class-wp-locale-switcher.php",
  "type": "action",
  "description": "Fires when the locale is restored to the previous one."
 },
 {
  "name": "restrict_manage_comments",
  "file": "wp-admin\/includes\/class-wp-comments-list-table.php",
  "type": "action",
  "description": "Fires just before the Filter submit button for comment types."
 },
 {
  "name": "restrict_manage_posts",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "action",
  "description": "Fires before the Filter button on the Posts and Pages list tables."
 },
 {
  "name": "restrict_manage_sites",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "action",
  "description": "Fires before the Filter button on the MS sites list table."
 },
 {
  "name": "restrict_manage_users",
  "file": "wp-admin\/includes\/class-wp-users-list-table.php",
  "type": "action",
  "description": "Fires just before the closing div containing the bulk role-change controls in the Users list table."
 },
 {
  "name": "retrieve_password",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires before a new password is retrieved."
 },
 {
  "name": "retrieve_password_key",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires when a password reset key is generated."
 },
 {
  "name": "revoke_super_admin",
  "file": "wp-includes\/capabilities.php",
  "type": "action",
  "description": "Fires before the user's Super Admin privileges are revoked."
 },
 {
  "name": "revoked_super_admin",
  "file": "wp-includes\/capabilities.php",
  "type": "action",
  "description": "Fires after the user's Super Admin privileges are revoked."
 },
 {
  "name": "rightnow_end",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires at the end of the 'At a Glance' dashboard widget."
 },
 {
  "name": "rss2_comments_ns",
  "file": "wp-includes\/feed-rss2-comments.php",
  "type": "action",
  "description": "Fires at the end of the RSS root to add namespaces."
 },
 {
  "name": "rss2_head",
  "file": "wp-includes\/feed-rss2.php",
  "type": "action",
  "description": "Fires at the end of the RSS2 Feed Header."
 },
 {
  "name": "rss2_item",
  "file": "wp-includes\/feed-rss2.php",
  "type": "action",
  "description": "Fires at the end of each RSS2 feed item."
 },
 {
  "name": "rss2_ns",
  "file": "wp-includes\/feed-rss2.php",
  "type": "action",
  "description": "Fires at the end of the RSS root to add namespaces."
 },
 {
  "name": "rss_head",
  "file": "wp-includes\/feed-rss.php",
  "type": "action",
  "description": "Fires at the end of the RSS Feed Header."
 },
 {
  "name": "rss_item",
  "file": "wp-includes\/feed-rss.php",
  "type": "action",
  "description": "Fires at the end of each RSS feed item."
 },
 {
  "name": "rss_tag_pre",
  "file": "wp-includes\/feed-rss2.php",
  "type": "action",
  "description": "Fires between the xml and rss tags in a feed."
 },
 {
  "name": "sanitize_comment_cookies",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires when comment cookies are sanitized."
 },
 {
  "name": "save_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once a post has been saved."
 },
 {
  "name": "save_post_{$post->post_type}",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once a post has been saved."
 },
 {
  "name": "saved_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term has been saved, and the term cache has been cleared."
 },
 {
  "name": "saved_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a term in a specific taxonomy has been saved, and the term cache has been cleared."
 },
 {
  "name": "send_headers",
  "file": "wp-includes\/class-wp.php",
  "type": "action_reference",
  "description": "Fires once the requested HTTP headers for caching, content type, etc. have been sent."
 },
 {
  "name": "set_404",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action_reference",
  "description": "Fires after a 404 is triggered."
 },
 {
  "name": "set_auth_cookie",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires immediately before the authentication cookie is set."
 },
 {
  "name": "set_comment_cookies",
  "file": "wp-comments-post.php",
  "type": "action",
  "description": "Perform other actions when comment cookies are set."
 },
 {
  "name": "set_current_user",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires after the current user is set."
 },
 {
  "name": "set_logged_in_cookie",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires immediately before the logged-in authentication cookie is set."
 },
 {
  "name": "set_object_terms",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after an object's terms have been set."
 },
 {
  "name": "set_site_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value for a specific site transient has been set."
 },
 {
  "name": "set_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value for a specific transient has been set."
 },
 {
  "name": "set_user_role",
  "file": "wp-includes\/class-wp-user.php",
  "type": "action",
  "description": "Fires after the user's role has changed."
 },
 {
  "name": "setted_site_transient",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value for a site transient has been set."
 },
 {
  "name": "setted_transient",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value for a transient has been set."
 },
 {
  "name": "setup_theme",
  "file": "wp-settings.php",
  "type": "action",
  "description": "Fires before the theme is loaded."
 },
 {
  "name": "show_user_profile",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires after the 'About Yourself' settings table on the 'Profile' editing screen."
 },
 {
  "name": "shutdown",
  "file": "wp-includes\/load.php",
  "type": "action",
  "description": "Fires just before PHP shuts down execution."
 },
 {
  "name": "sidebar_admin_page",
  "file": "wp-admin\/widgets-form.php",
  "type": "action",
  "description": "Fires after the available widgets and sidebars have loaded, before the admin footer."
 },
 {
  "name": "sidebar_admin_setup",
  "file": "wp-admin\/widgets-form.php",
  "type": "action",
  "description": "Fires early before the Widgets administration screen loads, after scripts are enqueued."
 },
 {
  "name": "signup_blogform",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires after the site sign-up form."
 },
 {
  "name": "signup_extra_fields",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires at the end of the new user account registration form."
 },
 {
  "name": "signup_finished",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires when the site or user sign-up process is complete."
 },
 {
  "name": "signup_header",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Fires within the head section of the site sign-up screen."
 },
 {
  "name": "signup_hidden_fields",
  "file": "wp-signup.php",
  "type": "action",
  "description": "Hidden sign-up form fields output when creating another site or user."
 },
 {
  "name": "site_health_tab_content",
  "file": "wp-admin\/site-health.php",
  "type": "action",
  "description": "Output content of a custom Site Health tab."
 },
 {
  "name": "spam_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately before a comment is marked as Spam."
 },
 {
  "name": "spammed_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is marked as Spam."
 },
 {
  "name": "split_shared_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a previously shared taxonomy term is split into two separate terms."
 },
 {
  "name": "start_previewing_theme",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Fires once the Customizer theme preview has started."
 },
 {
  "name": "stop_previewing_theme",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "action",
  "description": "Fires once the Customizer theme preview has stopped."
 },
 {
  "name": "submitlink_box",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "action",
  "description": "Fires at the end of the Publish box in the Link editing screen."
 },
 {
  "name": "submitpage_box",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires before meta boxes with 'side' context are output for the 'page' post type."
 },
 {
  "name": "submitpost_box",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "action",
  "description": "Fires before meta boxes with 'side' context are output for all post types other than 'page'."
 },
 {
  "name": "switch_blog",
  "file": "wp-includes\/ms-blogs.php",
  "type": "action",
  "description": "Fires when the blog is switched."
 },
 {
  "name": "switch_locale",
  "file": "wp-includes\/class-wp-locale-switcher.php",
  "type": "action",
  "description": "Fires when the locale is switched."
 },
 {
  "name": "switch_theme",
  "file": "wp-includes\/theme.php",
  "type": "action",
  "description": "Fires after the theme is switched."
 },
 {
  "name": "template_redirect",
  "file": "wp-includes\/template-loader.php",
  "type": "action",
  "description": "Fires before determining which template to load."
 },
 {
  "name": "the_post",
  "file": "wp-includes\/class-wp-query.php",
  "type": "action_reference",
  "description": "Fires once the post data has been set up."
 },
 {
  "name": "the_widget",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires before rendering the requested widget."
 },
 {
  "name": "tool_box",
  "file": "wp-admin\/tools.php",
  "type": "action",
  "description": "Fires at the end of the Tools Administration screen."
 },
 {
  "name": "trackback_post",
  "file": "wp-trackback.php",
  "type": "action",
  "description": "Fires after a trackback is added to a post."
 },
 {
  "name": "transition_comment_status",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires when the comment status is in transition."
 },
 {
  "name": "transition_post_status",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires when a post is transitioned from one status to another."
 },
 {
  "name": "trash_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately before a comment is sent to the Trash."
 },
 {
  "name": "trash_post_comments",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires before comments are sent to the Trash."
 },
 {
  "name": "trashed_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is sent to Trash."
 },
 {
  "name": "trashed_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after a post is sent to the Trash."
 },
 {
  "name": "trashed_post_comments",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after comments are sent to the Trash."
 },
 {
  "name": "unarchive_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'archived' status is removed from a site."
 },
 {
  "name": "uninstall_{$file}",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "action",
  "description": "Fires in uninstall_plugin() once the plugin has been uninstalled."
 },
 {
  "name": "unload_textdomain",
  "file": "wp-includes\/l10n.php",
  "type": "action",
  "description": "Fires before the text domain is unloaded."
 },
 {
  "name": "unmature_blog",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when the 'mature' status is removed from a site."
 },
 {
  "name": "unregister_setting",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires immediately before the setting is unregistered and after its filters have been removed."
 },
 {
  "name": "unregistered_post_type",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after a post type was unregistered."
 },
 {
  "name": "unregistered_taxonomy",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a taxonomy is unregistered."
 },
 {
  "name": "unregistered_taxonomy_for_object_type",
  "file": "wp-includes\/taxonomy.php",
  "type": "action",
  "description": "Fires after a taxonomy is unregistered for an object type."
 },
 {
  "name": "unspam_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately before a comment is unmarked as Spam."
 },
 {
  "name": "unspammed_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is unmarked as Spam."
 },
 {
  "name": "untrash_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately before a comment is restored from the Trash."
 },
 {
  "name": "untrash_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires before a post is restored from the Trash."
 },
 {
  "name": "untrash_post_comments",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires before comments are restored for a post from the Trash."
 },
 {
  "name": "untrashed_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is restored from the Trash."
 },
 {
  "name": "untrashed_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after a post is restored from the Trash."
 },
 {
  "name": "untrashed_post_comments",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires after comments are restored for a post from the Trash."
 },
 {
  "name": "update-core-custom_{$action}",
  "file": "wp-admin\/update-core.php",
  "type": "action",
  "description": "Fires for each custom update action on the WordPress Updates screen."
 },
 {
  "name": "update-custom_{$action}",
  "file": "wp-admin\/update.php",
  "type": "action",
  "description": "Fires when a custom plugin or theme update request is received."
 },
 {
  "name": "update_blog_public",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires after the current blog's 'public' setting is updated."
 },
 {
  "name": "update_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires immediately before an option value is updated."
 },
 {
  "name": "update_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value of a specific option has been successfully updated."
 },
 {
  "name": "update_postmeta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately before updating a post's metadata."
 },
 {
  "name": "update_site_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value of a network option has been successfully updated."
 },
 {
  "name": "update_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value of a specific network option has been successfully updated."
 },
 {
  "name": "update_wpmu_options",
  "file": "wp-admin\/network\/settings.php",
  "type": "action",
  "description": "Fires after the network options are updated."
 },
 {
  "name": "update_{$meta_type}_meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately before updating metadata of a specific type."
 },
 {
  "name": "updated_option",
  "file": "wp-includes\/option.php",
  "type": "action",
  "description": "Fires after the value of an option has been successfully updated."
 },
 {
  "name": "updated_postmeta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately after updating a post's metadata."
 },
 {
  "name": "updated_{$meta_type}_meta",
  "file": "wp-includes\/meta.php",
  "type": "action",
  "description": "Fires immediately after updating metadata of a specific type."
 },
 {
  "name": "upgrader_overwrote_package",
  "file": "wp-admin\/includes\/class-plugin-upgrader.php",
  "type": "action",
  "description": "Fires when the upgrader has successfully overwritten a currently installed plugin or theme with an uploaded zip package."
 },
 {
  "name": "upgrader_process_complete",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "action",
  "description": "Fires when the upgrader process is complete."
 },
 {
  "name": "upload_ui_over_quota",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires when an upload will exceed the defined upload space quota for a network site."
 },
 {
  "name": "user_admin_menu",
  "file": "wp-admin\/includes\/menu.php",
  "type": "action",
  "description": "Fires before the administration menu loads in the User Admin."
 },
 {
  "name": "user_admin_notices",
  "file": "wp-admin\/admin-header.php",
  "type": "action",
  "description": "Prints user admin screen notices."
 },
 {
  "name": "user_edit_form_tag",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires inside the your-profile form tag on the user editing screen."
 },
 {
  "name": "user_new_form",
  "file": "wp-admin\/user-new.php",
  "type": "action",
  "description": "Fires at the end of the new user form."
 },
 {
  "name": "user_new_form_tag",
  "file": "wp-admin\/user-new.php",
  "type": "action",
  "description": "Fires inside the adduser form tag."
 },
 {
  "name": "user_profile_update_errors",
  "file": "wp-admin\/includes\/user.php",
  "type": "action_reference",
  "description": "Fires before user profile update errors are returned."
 },
 {
  "name": "user_register",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires immediately after a new user is registered."
 },
 {
  "name": "user_request_action_confirmed",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires an action hook when the account action has been confirmed by the user."
 },
 {
  "name": "validate_password_reset",
  "file": "wp-login.php",
  "type": "action",
  "description": "Fires before the password reset procedure is validated."
 },
 {
  "name": "welcome_panel",
  "file": "wp-admin\/index.php",
  "type": "action",
  "description": "Add content to the welcome panel on the admin dashboard."
 },
 {
  "name": "widgets.php",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "action",
  "description": "Fires early when editing the widgets displayed in sidebars."
 },
 {
  "name": "widgets_admin_page",
  "file": "wp-admin\/widgets-form.php",
  "type": "action",
  "description": "Fires before the Widgets administration page content loads."
 },
 {
  "name": "widgets_init",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires after all default WordPress widgets have been registered."
 },
 {
  "name": "wp",
  "file": "wp-includes\/class-wp.php",
  "type": "action_reference",
  "description": "Fires once the WordPress environment has been set up."
 },
 {
  "name": "wp-mail.php",
  "file": "wp-mail.php",
  "type": "action",
  "description": "Fires to allow a plugin to do a complete takeover of Post by Email."
 },
 {
  "name": "wp_add_nav_menu_item",
  "file": "wp-includes\/nav-menu.php",
  "type": "action",
  "description": "Fires immediately after a new navigation menu item has been added."
 },
 {
  "name": "wp_after_admin_bar_render",
  "file": "wp-includes\/admin-bar.php",
  "type": "action",
  "description": "Fires after the admin bar is rendered."
 },
 {
  "name": "wp_after_insert_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once a post, its terms and meta data has been saved."
 },
 {
  "name": "wp_ajax_crop_image_pre_save",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "action",
  "description": "Fires before a cropped image is saved."
 },
 {
  "name": "wp_ajax_nopriv_{$action}",
  "file": "wp-admin\/admin-ajax.php",
  "type": "action",
  "description": "Fires non-authenticated Ajax actions for logged-out users."
 },
 {
  "name": "wp_ajax_{$action}",
  "file": "wp-admin\/admin-ajax.php",
  "type": "action",
  "description": "Fires authenticated Ajax actions for logged-in users."
 },
 {
  "name": "wp_authenticate",
  "file": "wp-includes\/user.php",
  "type": "action_reference",
  "description": "Fires before the user is authenticated."
 },
 {
  "name": "wp_authenticate_application_password_errors",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires when an application password has been successfully checked as valid."
 },
 {
  "name": "wp_authorize_application_password_form",
  "file": "wp-admin\/authorize-application.php",
  "type": "action",
  "description": "Fires in the Authorize Application Password form before the submit buttons."
 },
 {
  "name": "wp_authorize_application_password_form_approved_no_js",
  "file": "wp-admin\/authorize-application.php",
  "type": "action",
  "description": "Fires in the Authorize Application Password new password section in the no-JS version."
 },
 {
  "name": "wp_authorize_application_password_request_errors",
  "file": "wp-admin\/includes\/user.php",
  "type": "action",
  "description": "Fires before application password errors are returned."
 },
 {
  "name": "wp_before_admin_bar_render",
  "file": "wp-includes\/admin-bar.php",
  "type": "action",
  "description": "Fires before the admin bar is rendered."
 },
 {
  "name": "wp_body_open",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Triggered after the opening body tag."
 },
 {
  "name": "wp_check_comment_disallowed_list",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires before the comment is tested for disallowed characters or words."
 },
 {
  "name": "wp_create_application_password",
  "file": "wp-includes\/class-wp-application-passwords.php",
  "type": "action",
  "description": "Fires when an application password is created."
 },
 {
  "name": "wp_create_application_password_form",
  "file": "wp-admin\/user-edit.php",
  "type": "action",
  "description": "Fires in the create Application Passwords form."
 },
 {
  "name": "wp_create_file_in_uploads",
  "file": "wp-admin\/includes\/class-custom-image-header.php",
  "type": "action",
  "description": "Fires after the header image is set or an error is returned."
 },
 {
  "name": "wp_create_nav_menu",
  "file": "wp-includes\/nav-menu.php",
  "type": "action",
  "description": "Fires after a navigation menu is successfully created."
 },
 {
  "name": "wp_creating_autosave",
  "file": "wp-admin\/includes\/post.php",
  "type": "action",
  "description": "Fires before an autosave is stored."
 },
 {
  "name": "wp_dashboard_setup",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires after core widgets for the admin dashboard have been registered."
 },
 {
  "name": "wp_default_scripts",
  "file": "wp-includes\/class.wp-scripts.php",
  "type": "action_reference",
  "description": "Fires when the WP_Scripts instance is initialized."
 },
 {
  "name": "wp_default_styles",
  "file": "wp-includes\/class.wp-styles.php",
  "type": "action_reference",
  "description": "Fires when the WP_Styles instance is initialized."
 },
 {
  "name": "wp_delete_application_password",
  "file": "wp-includes\/class-wp-application-passwords.php",
  "type": "action",
  "description": "Fires when an application password is deleted."
 },
 {
  "name": "wp_delete_nav_menu",
  "file": "wp-includes\/nav-menu.php",
  "type": "action",
  "description": "Fires after a navigation menu has been successfully deleted."
 },
 {
  "name": "wp_delete_post_revision",
  "file": "wp-includes\/revision.php",
  "type": "action",
  "description": "Fires once a post revision has been deleted."
 },
 {
  "name": "wp_delete_site",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires once a site has been deleted from the database."
 },
 {
  "name": "wp_edit_form_attachment_display",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires when an attachment type can't be rendered in the edit form."
 },
 {
  "name": "wp_enqueue_code_editor",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires when scripts and styles are enqueued for the code editor."
 },
 {
  "name": "wp_enqueue_editor",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "action",
  "description": "Fires when scripts and styles are enqueued for the editor."
 },
 {
  "name": "wp_enqueue_media",
  "file": "wp-includes\/media.php",
  "type": "action",
  "description": "Fires at the conclusion of wp_enqueue_media()."
 },
 {
  "name": "wp_enqueue_scripts",
  "file": "wp-includes\/script-loader.php",
  "type": "action",
  "description": "Fires when scripts and styles are enqueued."
 },
 {
  "name": "wp_error_added",
  "file": "wp-includes\/class-wp-error.php",
  "type": "action",
  "description": "Fires when an error is added to a WP_Error object."
 },
 {
  "name": "wp_feed_options",
  "file": "wp-includes\/feed.php",
  "type": "action_reference",
  "description": "Fires just before processing the SimplePie feed object."
 },
 {
  "name": "wp_footer",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Prints scripts or data before the closing body tag on the front end."
 },
 {
  "name": "wp_head",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Prints scripts or data in the head tag on the front end."
 },
 {
  "name": "wp_initialize_site",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when a site's initialization routine should be executed."
 },
 {
  "name": "wp_insert_comment",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a comment is inserted into the database."
 },
 {
  "name": "wp_insert_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires once a post has been saved."
 },
 {
  "name": "wp_insert_site",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires once a site has been inserted into the database."
 },
 {
  "name": "wp_install",
  "file": "wp-admin\/includes\/upgrade.php",
  "type": "action",
  "description": "Fires after a site is fully installed."
 },
 {
  "name": "wp_loaded",
  "file": "wp-settings.php",
  "type": "action",
  "description": "This hook is fired once WP, all plugins, and the theme are fully loaded and instantiated."
 },
 {
  "name": "wp_login",
  "file": "wp-includes\/user.php",
  "type": "action",
  "description": "Fires after the user has successfully logged in."
 },
 {
  "name": "wp_login_failed",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires after a user login has failed."
 },
 {
  "name": "wp_logout",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires after a user is logged out."
 },
 {
  "name": "wp_mail_failed",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires after a PHPMailer\\PHPMailer\\Exception is caught."
 },
 {
  "name": "wp_mail_succeeded",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires after PHPMailer has successfully sent a mail."
 },
 {
  "name": "wp_maybe_auto_update",
  "file": "wp-includes\/update.php",
  "type": "action",
  "description": "Fires during wp_cron, starting the auto-update process."
 },
 {
  "name": "wp_media_attach_action",
  "file": "wp-admin\/includes\/media.php",
  "type": "action",
  "description": "Fires when media is attached or detached from a post."
 },
 {
  "name": "wp_meta",
  "file": "wp-includes\/general-template.php",
  "type": "action",
  "description": "Fires before displaying echoed content in the sidebar."
 },
 {
  "name": "wp_nav_menu_item_custom_fields",
  "file": "wp-admin\/includes\/class-walker-nav-menu-edit.php",
  "type": "action",
  "description": "Fires just before the move buttons of a nav menu item in the menu editor."
 },
 {
  "name": "wp_nav_menu_item_custom_fields_customize_template",
  "file": "wp-includes\/customize\/class-wp-customize-nav-menu-item-control.php",
  "type": "action",
  "description": "Fires at the end of the form field template for nav menu items in the customizer."
 },
 {
  "name": "wp_network_dashboard_setup",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires after core widgets for the Network Admin dashboard have been registered."
 },
 {
  "name": "wp_playlist_scripts",
  "file": "wp-includes\/media.php",
  "type": "action",
  "description": "Prints and enqueues playlist scripts, styles, and JavaScript templates."
 },
 {
  "name": "wp_print_footer_scripts",
  "file": "wp-includes\/script-loader.php",
  "type": "action",
  "description": "Fires when footer scripts are printed."
 },
 {
  "name": "wp_print_scripts",
  "file": "wp-includes\/functions.wp-scripts.php",
  "type": "action",
  "description": "Fires before scripts in the $handles queue are printed."
 },
 {
  "name": "wp_print_styles",
  "file": "wp-includes\/functions.wp-styles.php",
  "type": "action",
  "description": "Fires before styles in the $handles queue are printed."
 },
 {
  "name": "wp_privacy_personal_data_erased",
  "file": "wp-admin\/includes\/privacy-tools.php",
  "type": "action",
  "description": "Fires immediately after a personal data erasure request has been marked completed."
 },
 {
  "name": "wp_privacy_personal_data_export_file",
  "file": "wp-admin\/includes\/privacy-tools.php",
  "type": "action",
  "description": "Generate the export file from the collected, grouped personal data."
 },
 {
  "name": "wp_privacy_personal_data_export_file_created",
  "file": "wp-admin\/includes\/privacy-tools.php",
  "type": "action",
  "description": "Fires right after all personal data has been written to the export file."
 },
 {
  "name": "wp_register_sidebar_widget",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires once for each registered widget."
 },
 {
  "name": "wp_restore_post_revision",
  "file": "wp-includes\/revision.php",
  "type": "action",
  "description": "Fires after a post revision has been restored."
 },
 {
  "name": "wp_roles_init",
  "file": "wp-includes\/class-wp-roles.php",
  "type": "action",
  "description": "After the roles have been initialized, allow plugins to add their own roles."
 },
 {
  "name": "wp_set_comment_status",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after transitioning a comment's status from one to another in the database and removing the comment from the object cache, but prior to all status transition hooks."
 },
 {
  "name": "wp_sitemaps_init",
  "file": "wp-includes\/sitemaps.php",
  "type": "action",
  "description": "Fires when initializing the Sitemaps object."
 },
 {
  "name": "wp_tiny_mce_init",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "action",
  "description": "Fires after tinymce.js is loaded, but before any TinyMCE editor instances are created."
 },
 {
  "name": "wp_trash_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires before a post is sent to the Trash."
 },
 {
  "name": "wp_uninitialize_site",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when a site's uninitialization routine should be executed."
 },
 {
  "name": "wp_unregister_sidebar_widget",
  "file": "wp-includes\/widgets.php",
  "type": "action",
  "description": "Fires just before a widget is removed from a sidebar."
 },
 {
  "name": "wp_update_application_password",
  "file": "wp-includes\/class-wp-application-passwords.php",
  "type": "action",
  "description": "Fires when an application password is updated."
 },
 {
  "name": "wp_update_comment_count",
  "file": "wp-includes\/comment.php",
  "type": "action",
  "description": "Fires immediately after a post's comment count is updated in the database."
 },
 {
  "name": "wp_update_nav_menu",
  "file": "wp-includes\/nav-menu.php",
  "type": "action",
  "description": "Fires after a navigation menu has been successfully updated."
 },
 {
  "name": "wp_update_nav_menu_item",
  "file": "wp-includes\/nav-menu.php",
  "type": "action",
  "description": "Fires after a navigation menu item has been updated."
 },
 {
  "name": "wp_update_site",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires once a site has been updated in the database."
 },
 {
  "name": "wp_upgrade",
  "file": "wp-admin\/includes\/upgrade.php",
  "type": "action",
  "description": "Fires after a site is fully upgraded."
 },
 {
  "name": "wp_user_dashboard_setup",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires after core widgets for the User Admin dashboard have been registered."
 },
 {
  "name": "wp_validate_site_data",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires when data should be validated for a site prior to inserting or updating in the database."
 },
 {
  "name": "wp_validate_site_deletion",
  "file": "wp-includes\/ms-site.php",
  "type": "action",
  "description": "Fires before a site should be deleted from the database."
 },
 {
  "name": "wp_verify_nonce_failed",
  "file": "wp-includes\/pluggable.php",
  "type": "action",
  "description": "Fires when nonce verification fails."
 },
 {
  "name": "wpmu_activate_blog",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires immediately after a site is activated."
 },
 {
  "name": "wpmu_activate_user",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires immediately after a new user is activated."
 },
 {
  "name": "wpmu_blog_updated",
  "file": "wp-includes\/ms-blogs.php",
  "type": "action",
  "description": "Fires after the blog details are updated."
 },
 {
  "name": "wpmu_delete_user",
  "file": "wp-admin\/includes\/ms.php",
  "type": "action",
  "description": "Fires before a user is deleted from the network."
 },
 {
  "name": "wpmu_new_user",
  "file": "wp-includes\/ms-functions.php",
  "type": "action",
  "description": "Fires immediately after a new user is created."
 },
 {
  "name": "wpmu_options",
  "file": "wp-admin\/network\/settings.php",
  "type": "action",
  "description": "Fires at the end of the Network Settings form, before the submit button."
 },
 {
  "name": "wpmu_update_blog_options",
  "file": "wp-admin\/network\/site-settings.php",
  "type": "action",
  "description": "Fires after the site options are updated."
 },
 {
  "name": "wpmu_upgrade_page",
  "file": "wp-admin\/network\/upgrade.php",
  "type": "action",
  "description": "Fires before the footer on the network upgrade screen."
 },
 {
  "name": "wpmu_upgrade_site",
  "file": "wp-admin\/network\/upgrade.php",
  "type": "action",
  "description": "Fires after each site has been upgraded."
 },
 {
  "name": "wpmuadminedit",
  "file": "wp-admin\/network\/edit.php",
  "type": "action",
  "description": "Fires just before the action handler in several Network Admin screens."
 },
 {
  "name": "wpmuadminresult",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "action",
  "description": "Fires in the Network Admin 'Right Now' dashboard widget just before the user and site search form fields."
 },
 {
  "name": "wpmublogsaction",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "action",
  "description": "Fires inside the auxiliary 'Actions' column of the Sites list table."
 },
 {
  "name": "wpmueditblogaction",
  "file": "wp-admin\/network\/site-settings.php",
  "type": "action",
  "description": "Fires at the end of the Edit Site form, before the submit button."
 },
 {
  "name": "xmlrpc_call",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after the XML-RPC user has been authenticated but before the rest of the method logic begins."
 },
 {
  "name": "xmlrpc_call_success_blogger_deletePost",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a post has been successfully deleted via the XML-RPC Blogger API."
 },
 {
  "name": "xmlrpc_call_success_blogger_editPost",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a post has been successfully updated via the XML-RPC Blogger API."
 },
 {
  "name": "xmlrpc_call_success_blogger_newPost",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a new post has been successfully created via the XML-RPC Blogger API."
 },
 {
  "name": "xmlrpc_call_success_mw_editPost",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a post has been successfully updated via the XML-RPC MovableType API."
 },
 {
  "name": "xmlrpc_call_success_mw_newMediaObject",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a new attachment has been added via the XML-RPC MovableType API."
 },
 {
  "name": "xmlrpc_call_success_mw_newPost",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a new post has been successfully created via the XML-RPC MovableType API."
 },
 {
  "name": "xmlrpc_call_success_wp_deleteCategory",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a category has been successfully deleted via XML-RPC."
 },
 {
  "name": "xmlrpc_call_success_wp_deleteComment",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a comment has been successfully deleted via XML-RPC."
 },
 {
  "name": "xmlrpc_call_success_wp_deletePage",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a page has been successfully deleted via XML-RPC."
 },
 {
  "name": "xmlrpc_call_success_wp_editComment",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a comment has been successfully updated via XML-RPC."
 },
 {
  "name": "xmlrpc_call_success_wp_newCategory",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a new category has been successfully created via XML-RPC."
 },
 {
  "name": "xmlrpc_call_success_wp_newComment",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "action",
  "description": "Fires after a new comment has been successfully created via XML-RPC."
 },
 {
  "name": "xmlrpc_publish_post",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires when _publish_post_hook() is called during an XML-RPC request."
 },
 {
  "name": "xmlrpc_rsd_apis",
  "file": "xmlrpc.php",
  "type": "action",
  "description": "Add additional APIs to the Really Simple Discovery (RSD) endpoint."
 },
 {
  "name": "{$new_status}_{$post->post_type}",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires when a post is transitioned from one status to another."
 },
 {
  "name": "{$old_status}_to_{$new_status}",
  "file": "wp-includes\/post.php",
  "type": "action",
  "description": "Fires when a post is transitioned from one status to another."
 },
 {
  "name": "{$page_hook}",
  "file": "wp-admin\/admin.php",
  "type": "action",
  "description": "Used to call the registered callback for a plugin screen."
 },
 {
  "name": "{$taxonomy}_add_form",
  "file": "wp-admin\/edit-tags.php",
  "type": "action",
  "description": "Fires at the end of the Add Term form for all taxonomies."
 },
 {
  "name": "{$taxonomy}_add_form_fields",
  "file": "wp-admin\/edit-tags.php",
  "type": "action",
  "description": "Fires after the Add Term form fields."
 },
 {
  "name": "{$taxonomy}_edit_form",
  "file": "wp-admin\/edit-tag-form.php",
  "type": "action",
  "description": "Fires at the end of the Edit Term form for all taxonomies."
 },
 {
  "name": "{$taxonomy}_edit_form_fields",
  "file": "wp-admin\/edit-tag-form.php",
  "type": "action",
  "description": "Fires after the Edit Term form fields are displayed."
 },
 {
  "name": "{$taxonomy}_pre_add_form",
  "file": "wp-admin\/edit-tags.php",
  "type": "action",
  "description": "Fires before the Add Term form for all taxonomies."
 },
 {
  "name": "{$taxonomy}_pre_edit_form",
  "file": "wp-admin\/edit-tag-form.php",
  "type": "action",
  "description": "Fires before the Edit Term form for all taxonomies."
 },
 {
  "name": "{$taxonomy}_term_edit_form_tag",
  "file": "wp-admin\/edit-tag-form.php",
  "type": "action",
  "description": "Fires inside the Edit Term form tag."
 },
 {
  "name": "{$taxonomy}_term_edit_form_top",
  "file": "wp-admin\/edit-tag-form.php",
  "type": "action",
  "description": "Fires at the beginning of the Edit Term form."
 },
 {
  "name": "{$taxonomy}_term_new_form_tag",
  "file": "wp-admin\/edit-tags.php",
  "type": "action",
  "description": "Fires inside the Add Tag form tag."
 },
 {
  "name": "_get_page_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the permalink for a non-page_on_front page."
 },
 {
  "name": "_wp_post_revision_field_{$field}",
  "file": "wp-admin\/includes\/revision.php",
  "type": "filter",
  "description": "Contextually filter a post revision field."
 },
 {
  "name": "_wp_post_revision_fields",
  "file": "wp-includes\/revision.php",
  "type": "filter",
  "description": "Filters the list of fields saved in post revisions."
 },
 {
  "name": "_wp_relative_upload_path",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the relative path to an uploaded file."
 },
 {
  "name": "add_menu_classes",
  "file": "wp-admin\/includes\/menu.php",
  "type": "filter",
  "description": "Filters administration menus array with classes added for top-level items."
 },
 {
  "name": "add_ping",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the new ping URL to add for the given post."
 },
 {
  "name": "add_signup_meta",
  "file": "wp-signup.php",
  "type": "filter",
  "description": "Filters the new default site meta variables."
 },
 {
  "name": "add_trashed_suffix_to_trashed_posts",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether or not to add a `__trashed` suffix to trashed posts that match the name of the updated post."
 },
 {
  "name": "add_{$meta_type}_metadata",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits adding metadata of a specific type."
 },
 {
  "name": "additional_capabilities_display",
  "file": "wp-admin\/user-edit.php",
  "type": "filter",
  "description": "Filters whether to display additional capabilities for the user."
 },
 {
  "name": "admin_body_class",
  "file": "wp-admin\/admin-header.php",
  "type": "filter",
  "description": "Filters the CSS classes for the body tag in the admin."
 },
 {
  "name": "admin_comment_types_dropdown",
  "file": "wp-admin\/includes\/class-wp-comments-list-table.php",
  "type": "filter",
  "description": "Filters the comment types shown in the drop-down menu on the Comments list table."
 },
 {
  "name": "admin_email_check_interval",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the interval for redirecting the user to the admin email confirmation screen."
 },
 {
  "name": "admin_email_remind_interval",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the interval for dismissing the admin email confirmation screen."
 },
 {
  "name": "admin_footer_text",
  "file": "wp-admin\/admin-footer.php",
  "type": "filter",
  "description": "Filters the \"Thank you\" text displayed in the admin footer."
 },
 {
  "name": "admin_memory_limit",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the maximum memory limit available for administration screens."
 },
 {
  "name": "admin_post_thumbnail_html",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the admin post thumbnail HTML markup to return."
 },
 {
  "name": "admin_post_thumbnail_size",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the size used to display the post thumbnail image in the 'Featured image' meta box."
 },
 {
  "name": "admin_referrer_policy",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters the admin referrer policy header value."
 },
 {
  "name": "admin_title",
  "file": "wp-admin\/admin-header.php",
  "type": "filter",
  "description": "Filters the title tag content for an admin page."
 },
 {
  "name": "admin_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the admin area URL."
 },
 {
  "name": "admin_viewport_meta",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters the viewport meta in the admin."
 },
 {
  "name": "ajax_query_attachments_args",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the arguments passed to WP_Query during an Ajax call for querying attachments."
 },
 {
  "name": "all_plugins",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters the full array of plugins to list in the Plugins list table."
 },
 {
  "name": "all_themes",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "filter",
  "description": "Filters the full array of WP_Theme objects to list in the Multisite themes list table."
 },
 {
  "name": "alloptions",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters all options after retrieving them."
 },
 {
  "name": "allow_dev_auto_core_updates",
  "file": "wp-admin\/includes\/class-core-upgrader.php",
  "type": "filter",
  "description": "Filters whether to enable automatic core updates for development versions."
 },
 {
  "name": "allow_empty_comment",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters whether an empty comment should be allowed."
 },
 {
  "name": "allow_major_auto_core_updates",
  "file": "wp-admin\/includes\/class-core-upgrader.php",
  "type": "filter",
  "description": "Filters whether to enable major automatic core updates."
 },
 {
  "name": "allow_minor_auto_core_updates",
  "file": "wp-admin\/includes\/class-core-upgrader.php",
  "type": "filter",
  "description": "Filters whether to enable minor automatic core updates."
 },
 {
  "name": "allow_password_reset",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether to allow a password to be reset."
 },
 {
  "name": "allow_subdirectory_install",
  "file": "wp-admin\/includes\/network.php",
  "type": "filter",
  "description": "Filters whether to enable the subdirectory installation feature in Multisite."
 },
 {
  "name": "allowed_block_types_all",
  "file": "wp-includes\/block-editor.php",
  "type": "filter",
  "description": "Filters the allowed block types for all editor types."
 },
 {
  "name": "allowed_http_origin",
  "file": "wp-includes\/http.php",
  "type": "filter",
  "description": "Change the allowed HTTP origin result."
 },
 {
  "name": "allowed_http_origins",
  "file": "wp-includes\/http.php",
  "type": "filter",
  "description": "Change the origin types allowed for HTTP requests."
 },
 {
  "name": "allowed_options",
  "file": "wp-admin\/options.php",
  "type": "filter",
  "description": "Filters the allowed options list."
 },
 {
  "name": "allowed_redirect_hosts",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the list of allowed hosts to redirect to."
 },
 {
  "name": "allowed_themes",
  "file": "wp-includes\/class-wp-theme.php",
  "type": "filter",
  "description": "Filters the array of themes allowed on the network."
 },
 {
  "name": "application_password_is_api_request",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether this is an API request that Application Passwords can be used on."
 },
 {
  "name": "async_update_translation",
  "file": "wp-admin\/includes\/class-language-pack-upgrader.php",
  "type": "filter",
  "description": "Filters whether to asynchronously update translation for core, a plugin, or a theme."
 },
 {
  "name": "async_upload_{$type}",
  "file": "wp-admin\/async-upload.php",
  "type": "filter",
  "description": "Filters the returned ID of an uploaded attachment."
 },
 {
  "name": "atom_enclosure",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the atom enclosure HTML link tag for the current post."
 },
 {
  "name": "attach_session_information",
  "file": "wp-includes\/class-wp-session-tokens.php",
  "type": "filter",
  "description": "Filters the information attached to the newly created session."
 },
 {
  "name": "attachment_fields_to_edit",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the attachment fields to edit."
 },
 {
  "name": "attachment_fields_to_save",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the attachment fields to be saved."
 },
 {
  "name": "attachment_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the permalink for an attachment."
 },
 {
  "name": "attachment_thumbnail_args",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the parameters for the attachment thumbnail creation."
 },
 {
  "name": "attachment_url_to_postid",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters an attachment ID found by URL."
 },
 {
  "name": "attribute_escape",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a string cleaned and escaped for output in an HTML attribute."
 },
 {
  "name": "audio_submitbox_misc_sections",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the audio attachment metadata fields to be shown in the publish meta box."
 },
 {
  "name": "auth_cookie",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the authentication cookie."
 },
 {
  "name": "auth_cookie_expiration",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the duration of the authentication cookie expiration period."
 },
 {
  "name": "auth_redirect_scheme",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the authentication redirect scheme."
 },
 {
  "name": "auth_{$object_type}_meta_{$meta_key}",
  "file": "wp-includes\/capabilities.php",
  "type": "filter",
  "description": "Filters whether the user is allowed to edit a specific meta key of a specific object type."
 },
 {
  "name": "auth_{$object_type}_meta_{$meta_key}_for_{$object_subtype}",
  "file": "wp-includes\/capabilities.php",
  "type": "filter",
  "description": "Filters whether the user is allowed to edit a specific meta key of a specific object type and subtype."
 },
 {
  "name": "authenticate",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether a set of user login credentials are valid."
 },
 {
  "name": "author_email",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's email for display."
 },
 {
  "name": "author_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the feed link for a given author."
 },
 {
  "name": "author_link",
  "file": "wp-includes\/author-template.php",
  "type": "filter",
  "description": "Filters the URL to the author's page."
 },
 {
  "name": "author_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for author archives."
 },
 {
  "name": "auto_core_update_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters the email sent following an automatic background core update."
 },
 {
  "name": "auto_core_update_send_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether to send an email following an automatic background core update."
 },
 {
  "name": "auto_plugin_theme_update_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters the email sent following an automatic background update for plugins and themes."
 },
 {
  "name": "auto_plugin_update_send_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether to send an email following an automatic background plugin update."
 },
 {
  "name": "auto_theme_update_send_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether to send an email following an automatic background theme update."
 },
 {
  "name": "auto_update_{$type}",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether to automatically update core, a plugin, a theme, or a language."
 },
 {
  "name": "autocomplete_users_for_site_admins",
  "file": "wp-admin\/user-new.php",
  "type": "filter",
  "description": "Filters whether to enable user auto-complete for non-super admins in Multisite."
 },
 {
  "name": "automatic_updater_disabled",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether to entirely disable background updates."
 },
 {
  "name": "automatic_updates_debug_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters the debug email that can be sent following an automatic background core update."
 },
 {
  "name": "automatic_updates_is_vcs_checkout",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether the automatic updater should consider a filesystem location to be potentially managed by a version control system."
 },
 {
  "name": "automatic_updates_send_debug_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether to send a debugging email for each automatic background update."
 },
 {
  "name": "available_permalink_structure_tags",
  "file": "wp-admin\/options-permalink.php",
  "type": "filter",
  "description": "Filters the list of available permalink structure tags on the Permalinks settings page."
 },
 {
  "name": "avatar_defaults",
  "file": "wp-admin\/options-discussion.php",
  "type": "filter",
  "description": "Filters the default avatars."
 },
 {
  "name": "big_image_size_threshold",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the \"BIG image\" threshold value."
 },
 {
  "name": "block_categories_all",
  "file": "wp-includes\/block-editor.php",
  "type": "filter",
  "description": "Filters the default array of categories for block types."
 },
 {
  "name": "block_core_navigation_render_fallback",
  "file": "wp-includes\/blocks\/navigation.php",
  "type": "filter",
  "description": "Filters the fallback experience for the Navigation block."
 },
 {
  "name": "block_default_classname",
  "file": "wp-includes\/block-supports\/generated-classname.php",
  "type": "filter",
  "description": "Filters the default block className for server rendered blocks."
 },
 {
  "name": "block_editor_no_javascript_message",
  "file": "wp-admin\/edit-form-blocks.php",
  "type": "filter",
  "description": "Filters the message displayed in the block editor interface when JavaScript is not enabled in the browser."
 },
 {
  "name": "block_editor_rest_api_preload_paths",
  "file": "wp-includes\/block-editor.php",
  "type": "filter",
  "description": "Filters the array of REST API paths that will be used to preloaded common data for the block editor."
 },
 {
  "name": "block_editor_settings_all",
  "file": "wp-includes\/block-editor.php",
  "type": "filter",
  "description": "Filters the settings to pass to the block editor for all editor type."
 },
 {
  "name": "block_local_requests",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters whether to block local HTTP API requests."
 },
 {
  "name": "block_parser_class",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Filter to allow plugins to replace the server-side block parser"
 },
 {
  "name": "block_type_metadata",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Filters the metadata provided for registering a block type."
 },
 {
  "name": "block_type_metadata_settings",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Filters the settings determined from the block type metadata."
 },
 {
  "name": "blog_option_{$option}",
  "file": "wp-includes\/ms-blogs.php",
  "type": "filter",
  "description": "Filters a blog option value."
 },
 {
  "name": "blog_redirect_404",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the redirect URL for 404s on the main site."
 },
 {
  "name": "bloginfo",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the site information returned by get_bloginfo()."
 },
 {
  "name": "bloginfo_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the bloginfo for display in RSS feeds."
 },
 {
  "name": "bloginfo_url",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the URL returned by get_bloginfo()."
 },
 {
  "name": "body_class",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the list of CSS body class names for the current post or page."
 },
 {
  "name": "browse-happy-notice",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the notice output for the 'Browse Happy' nag meta box."
 },
 {
  "name": "bulk_actions-{$this->screen->id}",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters the items in the bulk actions menu of the list table."
 },
 {
  "name": "bulk_post_updated_messages",
  "file": "wp-admin\/edit.php",
  "type": "filter",
  "description": "Filters the bulk action updated messages."
 },
 {
  "name": "can_add_user_to_blog",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether a user should be added to a site."
 },
 {
  "name": "can_edit_network",
  "file": "wp-admin\/includes\/ms.php",
  "type": "filter",
  "description": "Filters whether this network can be edited from this page."
 },
 {
  "name": "cancel_comment_reply_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the cancel comment reply link HTML."
 },
 {
  "name": "category_css_class",
  "file": "wp-includes\/class-walker-category.php",
  "type": "filter",
  "description": "Filters the list of CSS classes to include with each category in the list."
 },
 {
  "name": "category_description",
  "file": "wp-includes\/class-walker-category.php",
  "type": "filter",
  "description": "Filters the category description for display."
 },
 {
  "name": "category_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the category feed link."
 },
 {
  "name": "category_link",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the category link."
 },
 {
  "name": "category_list_link_attributes",
  "file": "wp-includes\/class-walker-category.php",
  "type": "filter",
  "description": "Filters the HTML attributes applied to a category list item's anchor element."
 },
 {
  "name": "check_is_user_spammed",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether the user has been marked as a spammer."
 },
 {
  "name": "check_password",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether the plaintext password matches the encrypted password."
 },
 {
  "name": "clean_url",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a string cleaned and escaped for output as a URL."
 },
 {
  "name": "close_comments_for_post_types",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the list of post types to automatically close comments for."
 },
 {
  "name": "comment_author",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's name for display."
 },
 {
  "name": "comment_author_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the current comment author for use in a feed."
 },
 {
  "name": "comment_class",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned CSS classes for the current comment."
 },
 {
  "name": "comment_cookie_lifetime",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the lifetime of the comment cookie in seconds."
 },
 {
  "name": "comment_duplicate_message",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters duplicate comment error message."
 },
 {
  "name": "comment_edit_pre",
  "file": "wp-admin\/includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment content before editing."
 },
 {
  "name": "comment_edit_redirect",
  "file": "wp-admin\/comment.php",
  "type": "filter",
  "description": "Filters the URI the user is redirected to after editing a comment in the admin."
 },
 {
  "name": "comment_email",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's email for display."
 },
 {
  "name": "comment_excerpt",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment excerpt for display."
 },
 {
  "name": "comment_excerpt_length",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the maximum number of words used in the comment excerpt."
 },
 {
  "name": "comment_feed_groupby",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the GROUP BY clause of the comments feed query before sending."
 },
 {
  "name": "comment_feed_join",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the JOIN clause of the comments feed query before sending."
 },
 {
  "name": "comment_feed_limits",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the LIMIT clause of the comments feed query before sending."
 },
 {
  "name": "comment_feed_orderby",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the ORDER BY clause of the comments feed query before sending."
 },
 {
  "name": "comment_feed_where",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the WHERE clause of the comments feed query before sending."
 },
 {
  "name": "comment_flood_filter",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment flood status."
 },
 {
  "name": "comment_flood_message",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment flood error message."
 },
 {
  "name": "comment_form_default_fields",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the default comment form fields."
 },
 {
  "name": "comment_form_defaults",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment form default arguments."
 },
 {
  "name": "comment_form_field_comment",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the content of the comment textarea field for display."
 },
 {
  "name": "comment_form_field_{$name}",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters a comment form field for display."
 },
 {
  "name": "comment_form_fields",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment form fields, including the textarea."
 },
 {
  "name": "comment_form_logged_in",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the 'logged in' message for the comment form for display."
 },
 {
  "name": "comment_form_submit_button",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the submit button for the comment form to display."
 },
 {
  "name": "comment_form_submit_field",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the submit field for the comment form to display."
 },
 {
  "name": "comment_id_fields",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned comment ID fields."
 },
 {
  "name": "comment_link",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the current comment's permalink."
 },
 {
  "name": "comment_max_links_url",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the number of links found in a comment."
 },
 {
  "name": "comment_moderation_headers",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the comment moderation email headers."
 },
 {
  "name": "comment_moderation_recipients",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the list of recipients for comment moderation emails."
 },
 {
  "name": "comment_moderation_subject",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the comment moderation email subject."
 },
 {
  "name": "comment_moderation_text",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the comment moderation email text."
 },
 {
  "name": "comment_notification_headers",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the comment notification email headers."
 },
 {
  "name": "comment_notification_notify_author",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether to notify comment authors of their comments on their own posts."
 },
 {
  "name": "comment_notification_recipients",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the list of email addresses to receive a comment notification."
 },
 {
  "name": "comment_notification_subject",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the comment notification email subject."
 },
 {
  "name": "comment_notification_text",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the comment notification email text."
 },
 {
  "name": "comment_post_redirect",
  "file": "wp-comments-post.php",
  "type": "filter",
  "description": "Filters the location URI to send the commenter after posting."
 },
 {
  "name": "comment_reply_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment reply link."
 },
 {
  "name": "comment_reply_link_args",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment reply link arguments."
 },
 {
  "name": "comment_row_actions",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the action links displayed for each comment in the 'Recent Comments' dashboard widget."
 },
 {
  "name": "comment_save_pre",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment content before it is updated in the database."
 },
 {
  "name": "comment_status_links",
  "file": "wp-admin\/includes\/class-wp-comments-list-table.php",
  "type": "filter",
  "description": "Filters the comment status links."
 },
 {
  "name": "comment_text",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the text of a comment to be displayed."
 },
 {
  "name": "comment_text_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the current comment content for use in a feed."
 },
 {
  "name": "comment_url",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's URL for display."
 },
 {
  "name": "comments_array",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comments array."
 },
 {
  "name": "comments_clauses",
  "file": "wp-includes\/class-wp-comment-query.php",
  "type": "filter_reference",
  "description": "Filters the comment query clauses."
 },
 {
  "name": "comments_link_feed",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the comments permalink for the current post."
 },
 {
  "name": "comments_list_table_query_args",
  "file": "wp-admin\/includes\/class-wp-comments-list-table.php",
  "type": "filter",
  "description": "Filters the arguments for the comment query in the comments list table."
 },
 {
  "name": "comments_number",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comments count for display."
 },
 {
  "name": "comments_open",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters whether the current post is open for comments."
 },
 {
  "name": "comments_per_page",
  "file": "wp-admin\/includes\/class-wp-comments-list-table.php",
  "type": "filter",
  "description": "Filters the number of comments listed per page in the comments list table."
 },
 {
  "name": "comments_popup_link_attributes",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comments link attributes for display."
 },
 {
  "name": "comments_pre_query",
  "file": "wp-includes\/class-wp-comment-query.php",
  "type": "filter_reference",
  "description": "Filters the comments data before the query takes place."
 },
 {
  "name": "comments_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for comment feed archives."
 },
 {
  "name": "comments_template",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the path to the theme template file used for the comments template."
 },
 {
  "name": "comments_template_query_args",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the arguments used to query comments in comments_template()."
 },
 {
  "name": "comments_template_top_level_query_args",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the arguments used in the top level comments query."
 },
 {
  "name": "content_pagination",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter",
  "description": "Filters the \"pages\" derived from splitting the post content."
 },
 {
  "name": "content_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL to the content directory."
 },
 {
  "name": "core_version_check_locale",
  "file": "wp-includes\/update.php",
  "type": "filter",
  "description": "Filters the locale requested for WordPress core translations."
 },
 {
  "name": "core_version_check_query_args",
  "file": "wp-includes\/update.php",
  "type": "filter",
  "description": "Filters the query arguments sent as part of the core version check."
 },
 {
  "name": "cron_request",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filters the cron request arguments."
 },
 {
  "name": "cron_schedules",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filters the non-default cron schedules."
 },
 {
  "name": "current_theme_supports-{$feature}",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters whether the active theme supports a specific feature."
 },
 {
  "name": "custom_menu_order",
  "file": "wp-admin\/includes\/menu.php",
  "type": "filter",
  "description": "Filters whether to enable custom ordering of the administration menu."
 },
 {
  "name": "customize_allowed_urls",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters the list of URLs allowed to be clicked and followed in the Customizer preview."
 },
 {
  "name": "customize_changeset_branching",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters whether or not changeset branching is allowed."
 },
 {
  "name": "customize_changeset_save_data",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters the settings' data that will be persisted into the changeset."
 },
 {
  "name": "customize_control_active",
  "file": "wp-includes\/class-wp-customize-control.php",
  "type": "filter",
  "description": "Filters response of WP_Customize_Control::active()."
 },
 {
  "name": "customize_dynamic_partial_args",
  "file": "wp-includes\/customize\/class-wp-customize-selective-refresh.php",
  "type": "filter",
  "description": "Filters a dynamic partial's constructor arguments."
 },
 {
  "name": "customize_dynamic_partial_class",
  "file": "wp-includes\/customize\/class-wp-customize-selective-refresh.php",
  "type": "filter",
  "description": "Filters the class used to construct partials."
 },
 {
  "name": "customize_dynamic_setting_args",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters a dynamic setting's constructor args."
 },
 {
  "name": "customize_dynamic_setting_class",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Allow non-statically created settings to be constructed with custom WP_Customize_Setting subclass."
 },
 {
  "name": "customize_load_themes",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters the theme data loaded in the customizer."
 },
 {
  "name": "customize_loaded_components",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters the core Customizer components to load."
 },
 {
  "name": "customize_nav_menu_available_item_types",
  "file": "wp-includes\/class-wp-customize-nav-menus.php",
  "type": "filter",
  "description": "Filters the available menu item types."
 },
 {
  "name": "customize_nav_menu_available_items",
  "file": "wp-includes\/class-wp-customize-nav-menus.php",
  "type": "filter",
  "description": "Filters the available menu items."
 },
 {
  "name": "customize_nav_menu_searched_items",
  "file": "wp-includes\/class-wp-customize-nav-menus.php",
  "type": "filter",
  "description": "Filters the available menu items during a search request."
 },
 {
  "name": "customize_panel_active",
  "file": "wp-includes\/class-wp-customize-panel.php",
  "type": "filter",
  "description": "Filters response of WP_Customize_Panel::active()."
 },
 {
  "name": "customize_partial_render",
  "file": "wp-includes\/customize\/class-wp-customize-partial.php",
  "type": "filter",
  "description": "Filters partial rendering."
 },
 {
  "name": "customize_partial_render_{$partial->id}",
  "file": "wp-includes\/customize\/class-wp-customize-partial.php",
  "type": "filter",
  "description": "Filters partial rendering for a specific partial."
 },
 {
  "name": "customize_previewable_devices",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters the available devices to allow previewing in the Customizer."
 },
 {
  "name": "customize_refresh_nonces",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters nonces for Customizer."
 },
 {
  "name": "customize_render_partials_response",
  "file": "wp-includes\/customize\/class-wp-customize-selective-refresh.php",
  "type": "filter",
  "description": "Filters the response from rendering the partials."
 },
 {
  "name": "customize_sanitize_js_{$this->id}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "filter",
  "description": "Filters a Customize setting value for use in JavaScript."
 },
 {
  "name": "customize_sanitize_{$this->id}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "filter",
  "description": "Filters a Customize setting value in un-slashed form."
 },
 {
  "name": "customize_save_response",
  "file": "wp-includes\/class-wp-customize-manager.php",
  "type": "filter",
  "description": "Filters response data for a successful customize_save Ajax request."
 },
 {
  "name": "customize_section_active",
  "file": "wp-includes\/class-wp-customize-section.php",
  "type": "filter",
  "description": "Filters response of WP_Customize_Section::active()."
 },
 {
  "name": "customize_validate_{$this->id}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "filter",
  "description": "Validates a Customize setting value."
 },
 {
  "name": "customize_value_{$id_base}",
  "file": "wp-includes\/class-wp-customize-setting.php",
  "type": "filter",
  "description": "Filters a Customize setting value not handled as a theme_mod or option."
 },
 {
  "name": "customizer_widgets_section_args",
  "file": "wp-includes\/class-wp-customize-widgets.php",
  "type": "filter",
  "description": "Filters Customizer widget section arguments for a given sidebar."
 },
 {
  "name": "dashboard_glance_items",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the array of extra elements to list in the 'At a Glance' dashboard widget."
 },
 {
  "name": "dashboard_primary_feed",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the primary feed URL for the 'WordPress Events and News' dashboard widget."
 },
 {
  "name": "dashboard_primary_link",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the primary link URL for the 'WordPress Events and News' dashboard widget."
 },
 {
  "name": "dashboard_primary_title",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the primary link title for the 'WordPress Events and News' dashboard widget."
 },
 {
  "name": "dashboard_recent_drafts_query_args",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the post query arguments for the 'Recent Drafts' dashboard widget."
 },
 {
  "name": "dashboard_recent_posts_query_args",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the query arguments used for the Recent Posts widget."
 },
 {
  "name": "dashboard_secondary_feed",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the secondary feed URL for the 'WordPress Events and News' dashboard widget."
 },
 {
  "name": "dashboard_secondary_items",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the number of secondary link items for the 'WordPress Events and News' dashboard widget."
 },
 {
  "name": "dashboard_secondary_link",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the secondary link URL for the 'WordPress Events and News' dashboard widget."
 },
 {
  "name": "dashboard_secondary_title",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the secondary link title for the 'WordPress Events and News' dashboard widget."
 },
 {
  "name": "date_formats",
  "file": "wp-admin\/options-general.php",
  "type": "filter",
  "description": "Filters the default date formats."
 },
 {
  "name": "date_i18n",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the date formatted based on the locale."
 },
 {
  "name": "date_query_valid_columns",
  "file": "wp-includes\/class-wp-date-query.php",
  "type": "filter",
  "description": "Filters the list of valid date query columns."
 },
 {
  "name": "date_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for date archives."
 },
 {
  "name": "day_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the day archive permalink."
 },
 {
  "name": "dbdelta_create_queries",
  "file": "wp-admin\/includes\/upgrade.php",
  "type": "filter",
  "description": "Filters the dbDelta SQL queries for creating tables and\/or databases."
 },
 {
  "name": "dbdelta_insert_queries",
  "file": "wp-admin\/includes\/upgrade.php",
  "type": "filter",
  "description": "Filters the dbDelta SQL queries for inserting or updating."
 },
 {
  "name": "dbdelta_queries",
  "file": "wp-admin\/includes\/upgrade.php",
  "type": "filter",
  "description": "Filters the dbDelta SQL queries."
 },
 {
  "name": "debug_information",
  "file": "wp-admin\/includes\/class-wp-debug-data.php",
  "type": "filter",
  "description": "Add to or modify the debug information shown on the Tools -> Site Health -> Info screen."
 },
 {
  "name": "default_avatar_select",
  "file": "wp-admin\/options-discussion.php",
  "type": "filter",
  "description": "Filters the HTML output of the default avatar list."
 },
 {
  "name": "default_category_post_types",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters post types (in addition to 'post') that require a default category."
 },
 {
  "name": "default_content",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the default post content initially used in the \"Write Post\" form."
 },
 {
  "name": "default_excerpt",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the default post excerpt initially used in the \"Write Post\" form."
 },
 {
  "name": "default_feed",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the default feed type."
 },
 {
  "name": "default_hidden_columns",
  "file": "wp-admin\/includes\/screen.php",
  "type": "filter",
  "description": "Filters the default list of hidden columns."
 },
 {
  "name": "default_hidden_meta_boxes",
  "file": "wp-admin\/includes\/screen.php",
  "type": "filter",
  "description": "Filters the default list of hidden meta boxes."
 },
 {
  "name": "default_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the default value for an option."
 },
 {
  "name": "default_page_template_title",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "filter",
  "description": "Filters the title of the default page template displayed in the drop-down."
 },
 {
  "name": "default_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters a specific default network option."
 },
 {
  "name": "default_template_types",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the list of template types."
 },
 {
  "name": "default_title",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the default post title initially used in the \"Write Post\" form."
 },
 {
  "name": "default_wp_template_part_areas",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the list of allowed template part area values."
 },
 {
  "name": "default_{$meta_type}_metadata",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Filters the default metadata value for a specified meta key and object."
 },
 {
  "name": "delete_site_email_content",
  "file": "wp-admin\/ms-delete-site.php",
  "type": "filter",
  "description": "Filters the text for the email sent to the site admin when a request to delete a site in a Multisite network is submitted."
 },
 {
  "name": "delete_{$meta_type}_metadata",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits deleting metadata of a specific type."
 },
 {
  "name": "delete_{$meta_type}_metadata_by_mid",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits deleting metadata of a specific type by meta ID."
 },
 {
  "name": "deprecated_argument_trigger_error",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to trigger an error for deprecated arguments."
 },
 {
  "name": "deprecated_constructor_trigger_error",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to trigger an error for deprecated functions."
 },
 {
  "name": "deprecated_file_trigger_error",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to trigger an error for deprecated files."
 },
 {
  "name": "deprecated_function_trigger_error",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to trigger an error for deprecated functions."
 },
 {
  "name": "deprecated_hook_trigger_error",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to trigger deprecated hook errors."
 },
 {
  "name": "determine_current_user",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the current user."
 },
 {
  "name": "determine_locale",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the locale for the current request."
 },
 {
  "name": "disable_captions",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters whether to disable captions."
 },
 {
  "name": "disable_categories_dropdown",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters whether to remove the 'Categories' drop-down from the post list table."
 },
 {
  "name": "disable_formats_dropdown",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters whether to remove the 'Formats' drop-down from the post list table."
 },
 {
  "name": "disable_months_dropdown",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters whether to remove the 'Months' drop-down from the post list table."
 },
 {
  "name": "display_media_states",
  "file": "wp-admin\/includes\/template.php",
  "type": "filter",
  "description": "Filters the default media display states for items in the Media list table."
 },
 {
  "name": "display_post_states",
  "file": "wp-admin\/includes\/template.php",
  "type": "filter",
  "description": "Filters the default post display states used in the posts list table."
 },
 {
  "name": "display_site_states",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "filter",
  "description": "Filters the default site display states for items in the Sites list table."
 },
 {
  "name": "do_mu_upgrade",
  "file": "wp-admin\/admin.php",
  "type": "filter",
  "description": "Filters whether to attempt to perform the multisite DB upgrade routine."
 },
 {
  "name": "do_parse_request",
  "file": "wp-includes\/class-wp.php",
  "type": "filter",
  "description": "Filters whether to parse the request."
 },
 {
  "name": "do_redirect_guess_404_permalink",
  "file": "wp-includes\/canonical.php",
  "type": "filter",
  "description": "Filters whether to attempt to guess a redirect URL for a 404 request."
 },
 {
  "name": "do_shortcode_tag",
  "file": "wp-includes\/shortcodes.php",
  "type": "filter",
  "description": "Filters the output created by a shortcode callback."
 },
 {
  "name": "document_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the document title."
 },
 {
  "name": "document_title_parts",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the parts of the document title."
 },
 {
  "name": "document_title_separator",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the separator for the document title."
 },
 {
  "name": "documentation_ignore_functions",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters the list of functions and classes to be ignored from the documentation lookup."
 },
 {
  "name": "doing_it_wrong_trigger_error",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to trigger an error for _doing_it_wrong() calls."
 },
 {
  "name": "domain_exists",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether a site name is taken."
 },
 {
  "name": "download_url_error_max_body_size",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the maximum error response body size in `download_url()`."
 },
 {
  "name": "duplicate_comment_id",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the ID, if any, of the duplicate comment found when creating a new comment."
 },
 {
  "name": "dynamic_sidebar_has_widgets",
  "file": "wp-includes\/widgets.php",
  "type": "filter",
  "description": "Filters whether a sidebar has widgets."
 },
 {
  "name": "dynamic_sidebar_params",
  "file": "wp-includes\/widgets.php",
  "type": "filter",
  "description": "Filters the parameters passed to a widget's display callback."
 },
 {
  "name": "edit_bookmark_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the bookmark edit link anchor tag."
 },
 {
  "name": "edit_categories_per_page",
  "file": "wp-admin\/includes\/class-wp-terms-list-table.php",
  "type": "filter",
  "description": "Filters the number of terms displayed per page for the Categories list table."
 },
 {
  "name": "edit_comment_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the comment edit link anchor tag."
 },
 {
  "name": "edit_comment_misc_actions",
  "file": "wp-admin\/edit-form-comment.php",
  "type": "filter",
  "description": "Filters miscellaneous actions for the edit comment form sidebar."
 },
 {
  "name": "edit_post_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post edit link anchor tag."
 },
 {
  "name": "edit_posts_per_page",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the number of posts displayed per page when specifically listing \"posts\"."
 },
 {
  "name": "edit_profile_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL for a user's profile editor."
 },
 {
  "name": "edit_tag_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the anchor tag for the edit link for a tag (or term in another taxonomy)."
 },
 {
  "name": "edit_tags_per_page",
  "file": "wp-admin\/includes\/class-wp-terms-list-table.php",
  "type": "filter",
  "description": "Filters the number of terms displayed per page for the Tags list table."
 },
 {
  "name": "edit_term_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the anchor tag for the edit link of a term."
 },
 {
  "name": "edit_term_{$field}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters a term field to edit before it is sanitized."
 },
 {
  "name": "edit_user_{$field}",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user field value in the 'edit' context."
 },
 {
  "name": "edit_{$field}",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the value of a specific post field to edit."
 },
 {
  "name": "edit_{$post_type}_per_page",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the number of items per page to show for a specific 'per_page' type."
 },
 {
  "name": "edit_{$taxonomy}_{$field}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the taxonomy field to edit before it is sanitized."
 },
 {
  "name": "editable_extensions",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the list of file types allowed for editing in the plugin file editor."
 },
 {
  "name": "editable_roles",
  "file": "wp-admin\/includes\/user.php",
  "type": "filter",
  "description": "Filters the list of editable roles."
 },
 {
  "name": "editable_slug",
  "file": "wp-admin\/edit-tag-form.php",
  "type": "filter",
  "description": "Filters the editable slug for a post or term."
 },
 {
  "name": "editor_max_image_size",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the maximum image size dimensions for the editor."
 },
 {
  "name": "editor_stylesheets",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the array of URLs of stylesheets applied to the editor."
 },
 {
  "name": "email_change_email",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the contents of the email sent when the user's email is changed."
 },
 {
  "name": "email_exists",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether the given email exists."
 },
 {
  "name": "embed_cache_oembed_types",
  "file": "wp-includes\/class-wp-embed.php",
  "type": "filter",
  "description": "Filters the array of post types to cache oEmbed results for."
 },
 {
  "name": "embed_defaults",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the default array of embed dimensions."
 },
 {
  "name": "embed_handler_html",
  "file": "wp-includes\/class-wp-embed.php",
  "type": "filter",
  "description": "Filters the returned embed HTML."
 },
 {
  "name": "embed_html",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the embed HTML output for a given post."
 },
 {
  "name": "embed_maybe_make_link",
  "file": "wp-includes\/class-wp-embed.php",
  "type": "filter",
  "description": "Filters the returned, maybe-linked embed URL."
 },
 {
  "name": "embed_oembed_discover",
  "file": "wp-includes\/class-wp-embed.php",
  "type": "filter",
  "description": "Filters whether to inspect the given URL for discoverable link tags."
 },
 {
  "name": "embed_oembed_html",
  "file": "wp-includes\/class-wp-embed.php",
  "type": "filter",
  "description": "Filters the cached oEmbed HTML."
 },
 {
  "name": "embed_site_title_html",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the site title HTML in the embed footer."
 },
 {
  "name": "embed_thumbnail_id",
  "file": "wp-includes\/theme-compat\/embed-content.php",
  "type": "filter",
  "description": "Filters the thumbnail image ID for use in the embed template."
 },
 {
  "name": "embed_thumbnail_image_shape",
  "file": "wp-includes\/theme-compat\/embed-content.php",
  "type": "filter",
  "description": "Filters the thumbnail shape for use in the embed template."
 },
 {
  "name": "embed_thumbnail_image_size",
  "file": "wp-includes\/theme-compat\/embed-content.php",
  "type": "filter",
  "description": "Filters the thumbnail image size for use in the embed template."
 },
 {
  "name": "emoji_ext",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the extension of the emoji png files."
 },
 {
  "name": "emoji_svg_ext",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the extension of the emoji SVG files."
 },
 {
  "name": "emoji_svg_url",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the URL where emoji SVG images are hosted."
 },
 {
  "name": "emoji_url",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the URL where emoji png images are hosted."
 },
 {
  "name": "enable_edit_any_user_configuration",
  "file": "wp-admin\/user-edit.php",
  "type": "filter",
  "description": "Filters whether to allow administrators on Multisite to edit every user."
 },
 {
  "name": "enable_live_network_counts",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether to update network site or user counts when a new site is created."
 },
 {
  "name": "enable_loading_advanced_cache_dropin",
  "file": "wp-settings.php",
  "type": "filter",
  "description": "Filters whether to enable loading of the advanced-cache.php drop-in."
 },
 {
  "name": "enable_loading_object_cache_dropin",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether to enable loading of the object-cache.php drop-in."
 },
 {
  "name": "enable_login_autofocus",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters whether to print the call to `wp_attempt_focus()` on the login screen."
 },
 {
  "name": "enable_maintenance_mode",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether to enable maintenance mode."
 },
 {
  "name": "enable_post_by_email_configuration",
  "file": "wp-admin\/options.php",
  "type": "filter",
  "description": "Filters whether the post-by-email functionality is enabled."
 },
 {
  "name": "enable_update_services_configuration",
  "file": "wp-admin\/options-writing.php",
  "type": "filter",
  "description": "Filters whether to enable the Update Services section in the Writing settings screen."
 },
 {
  "name": "enable_wp_debug_mode_checks",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether to allow the debug mode check to occur."
 },
 {
  "name": "enclosure_links",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the list of enclosure links before querying the database."
 },
 {
  "name": "enter_title_here",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "filter",
  "description": "Filters the title field placeholder text."
 },
 {
  "name": "esc_html",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a string cleaned and escaped for output in HTML."
 },
 {
  "name": "esc_textarea",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a string cleaned and escaped for output in a textarea element."
 },
 {
  "name": "esc_xml",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a string cleaned and escaped for output in XML."
 },
 {
  "name": "excerpt_allowed_blocks",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Filters the list of blocks that can contribute to the excerpt."
 },
 {
  "name": "excerpt_allowed_wrapper_blocks",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Filters the list of blocks that can be used as wrapper blocks, allowing excerpts to be generated from the `innerBlocks` of these wrappers."
 },
 {
  "name": "excerpt_length",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the maximum number of words in a post excerpt."
 },
 {
  "name": "excerpt_more",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the string in the \"more\" link displayed after a trimmed excerpt."
 },
 {
  "name": "exit_on_http_head",
  "file": "wp-includes\/template-loader.php",
  "type": "filter",
  "description": "Filters whether to allow 'HEAD' requests to generate content."
 },
 {
  "name": "expiration_of_site_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the expiration for a site transient before its value is set."
 },
 {
  "name": "expiration_of_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the expiration for a transient before its value is set."
 },
 {
  "name": "export_args",
  "file": "wp-admin\/export.php",
  "type": "filter",
  "description": "Filters the export args."
 },
 {
  "name": "export_wp_filename",
  "file": "wp-admin\/includes\/export.php",
  "type": "filter",
  "description": "Filters the export filename."
 },
 {
  "name": "ext2type",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters file type based on the extension name."
 },
 {
  "name": "extra_{$context}_headers",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters extra file headers by context."
 },
 {
  "name": "fallback_intermediate_image_sizes",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the image sizes generated for non-image mime types."
 },
 {
  "name": "feed_content_type",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the content type for a specific feed type."
 },
 {
  "name": "feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the feed type permalink."
 },
 {
  "name": "feed_links_show_comments_feed",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters whether to display the comments feed link."
 },
 {
  "name": "feed_links_show_posts_feed",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters whether to display the posts feed link."
 },
 {
  "name": "file_is_displayable_image",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters whether the current image is displayable in the browser."
 },
 {
  "name": "file_mod_allowed",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether file modifications are allowed."
 },
 {
  "name": "filesystem_method",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the filesystem method to use."
 },
 {
  "name": "filesystem_method_file",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the path for a specific filesystem method class file."
 },
 {
  "name": "filter_block_editor_meta_boxes",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Fires right before the meta boxes are rendered."
 },
 {
  "name": "flush_rewrite_rules_hard",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters whether a \"hard\" rewrite rule flush should be performed when requested."
 },
 {
  "name": "force_filtered_html_on_import",
  "file": "wp-admin\/admin.php",
  "type": "filter",
  "description": "Whether to filter imported data through kses on import."
 },
 {
  "name": "format_for_editor",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the text after it is formatted for the editor."
 },
 {
  "name": "format_to_edit",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the text to be formatted for editing."
 },
 {
  "name": "found_comments_query",
  "file": "wp-includes\/class-wp-comment-query.php",
  "type": "filter",
  "description": "Filters the query used to retrieve found comment count."
 },
 {
  "name": "found_networks_query",
  "file": "wp-includes\/class-wp-network-query.php",
  "type": "filter",
  "description": "Filters the query used to retrieve found network count."
 },
 {
  "name": "found_posts",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the number of found posts for the query."
 },
 {
  "name": "found_posts_query",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the query to run for retrieving the found posts."
 },
 {
  "name": "found_sites_query",
  "file": "wp-includes\/class-wp-site-query.php",
  "type": "filter",
  "description": "Filters the query used to retrieve found site count."
 },
 {
  "name": "found_users_query",
  "file": "wp-includes\/class-wp-user-query.php",
  "type": "filter",
  "description": "Filters SELECT FOUND_ROWS() query for the current WP_User_Query instance."
 },
 {
  "name": "fs_ftp_connection_types",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the connection types to output to the filesystem credentials form."
 },
 {
  "name": "gallery_style",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the default gallery shortcode CSS styles."
 },
 {
  "name": "get_ancestors",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters a given object's ancestors."
 },
 {
  "name": "get_archives_link",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the archive link content."
 },
 {
  "name": "get_attached_file",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the attached file based on the given ID."
 },
 {
  "name": "get_attached_media",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the list of media attached to the given post."
 },
 {
  "name": "get_attached_media_args",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters arguments used to retrieve media attached to the given post."
 },
 {
  "name": "get_available_languages",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the list of available language codes."
 },
 {
  "name": "get_avatar",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the HTML for a user's avatar."
 },
 {
  "name": "get_avatar_comment_types",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the list of allowed comment types for retrieving avatars."
 },
 {
  "name": "get_avatar_data",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the avatar data."
 },
 {
  "name": "get_avatar_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the avatar URL."
 },
 {
  "name": "get_block_file_template",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the array of queried block templates array after they've been fetched."
 },
 {
  "name": "get_block_template",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the queried block template object after it's been fetched."
 },
 {
  "name": "get_block_templates",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the array of queried block templates array after they've been fetched."
 },
 {
  "name": "get_bloginfo_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the bloginfo for use in RSS feeds."
 },
 {
  "name": "get_blogs_of_user",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the list of sites a user belongs to."
 },
 {
  "name": "get_bookmarks",
  "file": "wp-includes\/bookmark.php",
  "type": "filter",
  "description": "Filters the returned list of bookmarks."
 },
 {
  "name": "get_calendar",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the HTML calendar output."
 },
 {
  "name": "get_canonical_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the canonical URL for a post."
 },
 {
  "name": "get_categories_taxonomy",
  "file": "wp-includes\/category.php",
  "type": "filter",
  "description": "Filters the taxonomy used to retrieve terms when calling get_categories()."
 },
 {
  "name": "get_comment",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Fires after a comment is retrieved."
 },
 {
  "name": "get_comment_ID",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned comment ID."
 },
 {
  "name": "get_comment_author",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned comment author name."
 },
 {
  "name": "get_comment_author_IP",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's returned IP address."
 },
 {
  "name": "get_comment_author_email",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's returned email address."
 },
 {
  "name": "get_comment_author_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's link for display."
 },
 {
  "name": "get_comment_author_url",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's URL."
 },
 {
  "name": "get_comment_author_url_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the comment author's returned URL link."
 },
 {
  "name": "get_comment_date",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned comment date."
 },
 {
  "name": "get_comment_excerpt",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the retrieved comment excerpt."
 },
 {
  "name": "get_comment_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned single comment permalink."
 },
 {
  "name": "get_comment_text",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the text of a comment."
 },
 {
  "name": "get_comment_time",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned comment time."
 },
 {
  "name": "get_comment_type",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned comment type."
 },
 {
  "name": "get_comments_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned post comments permalink."
 },
 {
  "name": "get_comments_number",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned comment count for a post."
 },
 {
  "name": "get_comments_pagenum_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the comments page number link for the current request."
 },
 {
  "name": "get_custom_logo",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the custom logo output."
 },
 {
  "name": "get_custom_logo_image_attributes",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the list of custom logo image attributes."
 },
 {
  "name": "get_date_sql",
  "file": "wp-includes\/class-wp-date-query.php",
  "type": "filter",
  "description": "Filters the date query WHERE clause."
 },
 {
  "name": "get_default_comment_status",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the default comment status for the given post type."
 },
 {
  "name": "get_delete_post_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post delete link."
 },
 {
  "name": "get_edit_bookmark_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the bookmark edit link."
 },
 {
  "name": "get_edit_comment_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the comment edit link."
 },
 {
  "name": "get_edit_post_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post edit link."
 },
 {
  "name": "get_edit_tag_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the edit link for a tag (or term in another taxonomy)."
 },
 {
  "name": "get_edit_term_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the edit link for a term."
 },
 {
  "name": "get_edit_user_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the user edit link."
 },
 {
  "name": "get_enclosed",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the list of enclosures already enclosed for the given post."
 },
 {
  "name": "get_feed_build_date",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the date the last post or comment in the query was modified."
 },
 {
  "name": "get_header_image_tag",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the markup of header images."
 },
 {
  "name": "get_header_image_tag_attributes",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the list of header image attributes."
 },
 {
  "name": "get_header_video_url",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the header video URL."
 },
 {
  "name": "get_image_tag",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the HTML content for the image tag."
 },
 {
  "name": "get_image_tag_class",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the value of the attachment's image tag class attribute."
 },
 {
  "name": "get_lastpostdate",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the most recent time that a post on the site was published."
 },
 {
  "name": "get_lastpostmodified",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the most recent time that a post on the site was modified."
 },
 {
  "name": "get_main_network_id",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the main network ID."
 },
 {
  "name": "get_media_item_args",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the arguments used to retrieve an image for the edit image form."
 },
 {
  "name": "get_meta_sql",
  "file": "wp-includes\/class-wp-meta-query.php",
  "type": "filter_reference",
  "description": "Filters the meta query's generated SQL."
 },
 {
  "name": "get_network",
  "file": "wp-includes\/ms-network.php",
  "type": "filter",
  "description": "Fires after a network is retrieved."
 },
 {
  "name": "get_object_subtype_{$object_type}",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Filters the object subtype identifier for a non-standard object type."
 },
 {
  "name": "get_object_terms",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the terms for a given object or objects."
 },
 {
  "name": "get_page_of_comment",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the calculated page on which a comment appears."
 },
 {
  "name": "get_page_of_comment_query_args",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the arguments used to query comments in get_page_of_comment()."
 },
 {
  "name": "get_page_uri",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the URI for a page."
 },
 {
  "name": "get_pagenum_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the page number link for the current request."
 },
 {
  "name": "get_pages",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the retrieved list of pages."
 },
 {
  "name": "get_post_galleries",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the list of all found galleries in the given post."
 },
 {
  "name": "get_post_gallery",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the first-found post gallery."
 },
 {
  "name": "get_post_modified_time",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the localized time a post was last modified."
 },
 {
  "name": "get_post_status",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the post status."
 },
 {
  "name": "get_post_time",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the localized time a post was written."
 },
 {
  "name": "get_pung",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the list of already-pinged URLs for the given post."
 },
 {
  "name": "get_role_list",
  "file": "wp-admin\/includes\/class-wp-users-list-table.php",
  "type": "filter",
  "description": "Filters the returned array of translated role names for a user."
 },
 {
  "name": "get_sample_permalink",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the sample permalink."
 },
 {
  "name": "get_sample_permalink_html",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the sample permalink HTML markup."
 },
 {
  "name": "get_schedule",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filters the schedule for a hook."
 },
 {
  "name": "get_search_form",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the HTML output of the search form."
 },
 {
  "name": "get_search_query",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the contents of the search query variable."
 },
 {
  "name": "get_shortlink",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the shortlink for a post."
 },
 {
  "name": "get_site",
  "file": "wp-includes\/ms-site.php",
  "type": "filter",
  "description": "Fires after a site is retrieved."
 },
 {
  "name": "get_site_icon_url",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the site icon URL."
 },
 {
  "name": "get_space_allowed",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the upload quota for the current site."
 },
 {
  "name": "get_tags",
  "file": "wp-includes\/category.php",
  "type": "filter",
  "description": "Filters the array of term objects returned for the 'post_tag' taxonomy."
 },
 {
  "name": "get_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters a taxonomy term object."
 },
 {
  "name": "get_terms",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the found terms."
 },
 {
  "name": "get_terms_args",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "filter",
  "description": "Filters the terms query arguments."
 },
 {
  "name": "get_terms_defaults",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "filter",
  "description": "Filters the terms query default arguments."
 },
 {
  "name": "get_terms_fields",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "filter",
  "description": "Filters the fields to select in the terms query."
 },
 {
  "name": "get_terms_orderby",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "filter",
  "description": "Filters the ORDERBY clause of the terms query."
 },
 {
  "name": "get_the_archive_description",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the archive description."
 },
 {
  "name": "get_the_archive_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the archive title."
 },
 {
  "name": "get_the_archive_title_prefix",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the archive title prefix."
 },
 {
  "name": "get_the_author_{$field}",
  "file": "wp-includes\/author-template.php",
  "type": "filter",
  "description": "Filters the value of the requested user metadata."
 },
 {
  "name": "get_the_categories",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the array of categories to return for a post."
 },
 {
  "name": "get_the_date",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the date a post was published."
 },
 {
  "name": "get_the_excerpt",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the retrieved post excerpt."
 },
 {
  "name": "get_the_generator_{$type}",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the HTML for the retrieved generator type."
 },
 {
  "name": "get_the_guid",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the Global Unique Identifier (guid) of the post."
 },
 {
  "name": "get_the_modified_date",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the date a post was last modified."
 },
 {
  "name": "get_the_modified_time",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the localized time a post was last modified."
 },
 {
  "name": "get_the_post_type_description",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the description for a post type archive."
 },
 {
  "name": "get_the_tags",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the array of tags for the given post."
 },
 {
  "name": "get_the_terms",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the list of terms attached to the given post."
 },
 {
  "name": "get_the_time",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the time a post was written."
 },
 {
  "name": "get_theme_starter_content",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the expanded array of starter content."
 },
 {
  "name": "get_to_ping",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the list of URLs yet to ping for the given post."
 },
 {
  "name": "get_user_option_{$option}",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a specific user option value."
 },
 {
  "name": "get_usernumposts",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the number of posts a user has written."
 },
 {
  "name": "get_users_drafts",
  "file": "wp-admin\/includes\/user.php",
  "type": "filter",
  "description": "Filters the user's drafts query string."
 },
 {
  "name": "get_wp_title_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the blog title for use as the feed title."
 },
 {
  "name": "get_{$adjacent}_post_excluded_terms",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the IDs of terms excluded from adjacent post queries."
 },
 {
  "name": "get_{$adjacent}_post_join",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the JOIN clause in the SQL for an adjacent post query."
 },
 {
  "name": "get_{$adjacent}_post_sort",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the ORDER BY clause in the SQL for an adjacent post query."
 },
 {
  "name": "get_{$adjacent}_post_where",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the WHERE clause in the SQL for an adjacent post query."
 },
 {
  "name": "get_{$meta_type}_metadata",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits the return value of a meta field."
 },
 {
  "name": "get_{$meta_type}_metadata_by_mid",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits the return value when fetching a meta field by meta ID."
 },
 {
  "name": "get_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters a taxonomy term object."
 },
 {
  "name": "getarchives_join",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the SQL JOIN clause for retrieving archives."
 },
 {
  "name": "getarchives_where",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the SQL WHERE clause for retrieving archives."
 },
 {
  "name": "getimagesize_mimes_to_exts",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the list mapping image mime types to their respective extensions."
 },
 {
  "name": "gettext",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters text with its translation."
 },
 {
  "name": "gettext_with_context",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters text with its translation based on context information."
 },
 {
  "name": "gettext_with_context_{$domain}",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters text with its translation based on context information for a domain."
 },
 {
  "name": "gettext_{$domain}",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters text with its translation for a domain."
 },
 {
  "name": "global_terms_enabled",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether global terms are enabled."
 },
 {
  "name": "got_rewrite",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters whether Apache and mod_rewrite are present."
 },
 {
  "name": "got_url_rewrite",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters whether URL rewriting is available."
 },
 {
  "name": "handle_bulk_actions-{$screen}",
  "file": "wp-admin\/edit.php",
  "type": "filter",
  "description": "Fires when a custom bulk action should be handled."
 },
 {
  "name": "handle_network_bulk_actions-{$screen}",
  "file": "wp-admin\/network\/site-themes.php",
  "type": "filter",
  "description": "Fires when a custom bulk action should be handled."
 },
 {
  "name": "has_nav_menu",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters whether a nav menu is assigned to the specified location."
 },
 {
  "name": "has_post_thumbnail",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "filter",
  "description": "Filters whether a post has a post thumbnail."
 },
 {
  "name": "header_video_settings",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters header video settings."
 },
 {
  "name": "heartbeat_nopriv_received",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters Heartbeat Ajax response in no-privilege environments."
 },
 {
  "name": "heartbeat_nopriv_send",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters Heartbeat Ajax response in no-privilege environments when no data is passed."
 },
 {
  "name": "heartbeat_received",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the Heartbeat response received."
 },
 {
  "name": "heartbeat_send",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the Heartbeat response sent."
 },
 {
  "name": "heartbeat_settings",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters the Heartbeat settings."
 },
 {
  "name": "hidden_columns",
  "file": "wp-admin\/includes\/screen.php",
  "type": "filter",
  "description": "Filters the list of hidden columns."
 },
 {
  "name": "hidden_meta_boxes",
  "file": "wp-admin\/includes\/screen.php",
  "type": "filter",
  "description": "Filters the list of hidden meta boxes."
 },
 {
  "name": "home_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the home URL."
 },
 {
  "name": "http_allowed_safe_ports",
  "file": "wp-includes\/http.php",
  "type": "filter",
  "description": "Controls the list of ports considered safe in HTTP API."
 },
 {
  "name": "http_api_transports",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters which HTTP transports are available and in what order."
 },
 {
  "name": "http_headers_useragent",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters the user agent value sent with an HTTP request."
 },
 {
  "name": "http_origin",
  "file": "wp-includes\/http.php",
  "type": "filter",
  "description": "Change the origin of an HTTP request."
 },
 {
  "name": "http_request_args",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters the arguments used in an HTTP request."
 },
 {
  "name": "http_request_host_is_external",
  "file": "wp-includes\/http.php",
  "type": "filter",
  "description": "Check if HTTP request is external or not."
 },
 {
  "name": "http_request_redirection_count",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters the number of redirects allowed during an HTTP request."
 },
 {
  "name": "http_request_reject_unsafe_urls",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters whether to pass URLs through wp_http_validate_url() in an HTTP request."
 },
 {
  "name": "http_request_timeout",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters the timeout value for an HTTP request."
 },
 {
  "name": "http_request_version",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters the version of the HTTP protocol used in a request."
 },
 {
  "name": "http_response",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters a successful HTTP API response immediately before the response is returned."
 },
 {
  "name": "https_local_ssl_verify",
  "file": "wp-includes\/class-wp-http-streams.php",
  "type": "filter",
  "description": "Filters whether SSL should be verified for local HTTP API requests."
 },
 {
  "name": "https_ssl_verify",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters whether SSL should be verified for non-local requests."
 },
 {
  "name": "human_time_diff",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the human readable difference between two timestamps."
 },
 {
  "name": "icon_dir",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the icon directory path."
 },
 {
  "name": "icon_dir_uri",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the icon directory URI."
 },
 {
  "name": "icon_dirs",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the array of icon directory URIs."
 },
 {
  "name": "iis7_supports_permalinks",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether IIS 7+ supports pretty permalinks."
 },
 {
  "name": "iis7_url_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters the list of rewrite rules formatted for output to a web.config."
 },
 {
  "name": "illegal_user_logins",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the list of disallowed usernames."
 },
 {
  "name": "image_add_caption_shortcode",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the image HTML markup including the caption shortcode."
 },
 {
  "name": "image_add_caption_text",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the caption text."
 },
 {
  "name": "image_downsize",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether to preempt the output of image_downsize()."
 },
 {
  "name": "image_editor_default_mime_type",
  "file": "wp-includes\/class-wp-image-editor.php",
  "type": "filter",
  "description": "Filters default mime type prior to getting the file extension."
 },
 {
  "name": "image_editor_output_format",
  "file": "wp-includes\/class-wp-image-editor.php",
  "type": "filter",
  "description": "Filters the image editor output format mapping."
 },
 {
  "name": "image_editor_save_pre",
  "file": "wp-admin\/includes\/image-edit.php",
  "type": "filter",
  "description": "Filters the WP_Image_Editor instance for the image to be streamed to the browser."
 },
 {
  "name": "image_get_intermediate_size",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the output of image_get_intermediate_size()"
 },
 {
  "name": "image_make_intermediate_size",
  "file": "wp-includes\/class-wp-image-editor-gd.php",
  "type": "filter",
  "description": "Filters the name of the saved image file."
 },
 {
  "name": "image_memory_limit",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the memory limit allocated for image manipulation."
 },
 {
  "name": "image_resize_dimensions",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether to preempt calculating the image resize dimensions."
 },
 {
  "name": "image_send_to_editor",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the image HTML markup to send to the editor when inserting an image."
 },
 {
  "name": "image_send_to_editor_url",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the image URL sent to the editor."
 },
 {
  "name": "image_sideload_extensions",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the list of allowed file extensions when sideloading an image from a URL."
 },
 {
  "name": "image_size_names_choose",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the names and labels of the default image sizes."
 },
 {
  "name": "image_strip_meta",
  "file": "wp-includes\/class-wp-image-editor-imagick.php",
  "type": "filter",
  "description": "Filters whether to strip metadata from images when they're resized."
 },
 {
  "name": "img_caption_shortcode",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the default caption shortcode output."
 },
 {
  "name": "img_caption_shortcode_width",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the width of an image's caption."
 },
 {
  "name": "import_upload_size_limit",
  "file": "wp-admin\/includes\/template.php",
  "type": "filter",
  "description": "Filters the maximum allowed upload size for import files."
 },
 {
  "name": "includes_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL to the includes directory."
 },
 {
  "name": "incompatible_sql_modes",
  "file": "wp-includes\/wp-db.php",
  "type": "filter",
  "description": "Filters the list of incompatible SQL modes to exclude."
 },
 {
  "name": "insert_custom_user_meta",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's custom meta values and keys immediately after the user is created or updated and before any user meta is inserted or updated."
 },
 {
  "name": "insert_user_meta",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's meta values and keys immediately after the user is created or updated and before any user meta is inserted or updated."
 },
 {
  "name": "insert_with_markers_inline_instructions",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters the inline instructions inserted before the dynamically generated content."
 },
 {
  "name": "install_plugin_complete_actions",
  "file": "wp-admin\/includes\/class-plugin-installer-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following a single plugin installation."
 },
 {
  "name": "install_plugin_overwrite_actions",
  "file": "wp-admin\/includes\/class-plugin-installer-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following a single plugin installation failure when overwriting is allowed."
 },
 {
  "name": "install_plugin_overwrite_comparison",
  "file": "wp-admin\/includes\/class-plugin-installer-skin.php",
  "type": "filter",
  "description": "Filters the compare table output for overwriting a plugin package on upload."
 },
 {
  "name": "install_plugins_nonmenu_tabs",
  "file": "wp-admin\/includes\/class-wp-plugin-install-list-table.php",
  "type": "filter",
  "description": "Filters tabs not associated with a menu item on the Add Plugins screen."
 },
 {
  "name": "install_plugins_table_api_args_{$tab}",
  "file": "wp-admin\/includes\/class-wp-plugin-install-list-table.php",
  "type": "filter",
  "description": "Filters API request arguments for each Add Plugins screen tab."
 },
 {
  "name": "install_plugins_tabs",
  "file": "wp-admin\/includes\/class-wp-plugin-install-list-table.php",
  "type": "filter",
  "description": "Filters the tabs shown on the Add Plugins screen."
 },
 {
  "name": "install_theme_complete_actions",
  "file": "wp-admin\/includes\/class-theme-installer-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following a single theme installation."
 },
 {
  "name": "install_theme_overwrite_actions",
  "file": "wp-admin\/includes\/class-theme-installer-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following a single theme installation failure when overwriting is allowed."
 },
 {
  "name": "install_theme_overwrite_comparison",
  "file": "wp-admin\/includes\/class-theme-installer-skin.php",
  "type": "filter",
  "description": "Filters the compare table output for overwriting a theme package on upload."
 },
 {
  "name": "install_themes_nonmenu_tabs",
  "file": "wp-admin\/includes\/class-wp-theme-install-list-table.php",
  "type": "filter",
  "description": "Filters tabs not associated with a menu item on the Install Themes screen."
 },
 {
  "name": "install_themes_table_api_args_{$tab}",
  "file": "wp-admin\/includes\/class-wp-theme-install-list-table.php",
  "type": "filter",
  "description": "Filters API request arguments for each Install Themes screen tab."
 },
 {
  "name": "install_themes_tabs",
  "file": "wp-admin\/theme-install.php",
  "type": "filter",
  "description": "Filters the tabs shown on the Add Themes screen."
 },
 {
  "name": "intermediate_image_sizes",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the list of intermediate image sizes."
 },
 {
  "name": "intermediate_image_sizes_advanced",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the image sizes automatically generated when uploading an image."
 },
 {
  "name": "invited_user_email",
  "file": "wp-admin\/user-new.php",
  "type": "filter",
  "description": "Filters the contents of the email sent when an existing user is invited to join the site."
 },
 {
  "name": "is_active_sidebar",
  "file": "wp-includes\/widgets.php",
  "type": "filter",
  "description": "Filters whether a dynamic sidebar is considered \"active\"."
 },
 {
  "name": "is_email",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters whether an email address is valid."
 },
 {
  "name": "is_email_address_unsafe",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether an email address is unsafe."
 },
 {
  "name": "is_header_video_active",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters whether the custom header video is eligible to show on the current page."
 },
 {
  "name": "is_multi_author",
  "file": "wp-includes\/author-template.php",
  "type": "filter",
  "description": "Filters whether the site has more than one author with published posts."
 },
 {
  "name": "is_post_status_viewable",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post status is considered \"viewable\"."
 },
 {
  "name": "is_post_type_viewable",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post type is considered \"viewable\"."
 },
 {
  "name": "is_protected_endpoint",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether the current request is against a protected endpoint."
 },
 {
  "name": "is_protected_meta",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Filters whether a meta key is considered protected."
 },
 {
  "name": "is_sticky",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post is sticky."
 },
 {
  "name": "is_wide_widget_in_customizer",
  "file": "wp-includes\/class-wp-customize-widgets.php",
  "type": "filter",
  "description": "Filters whether the given widget is considered \"wide\"."
 },
 {
  "name": "jpeg_quality",
  "file": "wp-includes\/class-wp-image-editor.php",
  "type": "filter",
  "description": "Filters the JPEG compression quality for backward-compatibility."
 },
 {
  "name": "js_escape",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a string cleaned and escaped for output in JavaScript."
 },
 {
  "name": "kses_allowed_protocols",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the list of protocols allowed in HTML attributes."
 },
 {
  "name": "lang_codes",
  "file": "wp-admin\/includes\/ms.php",
  "type": "filter",
  "description": "Filters the language codes."
 },
 {
  "name": "language_attributes",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the language attributes for display in the 'html' tag."
 },
 {
  "name": "link_category",
  "file": "wp-includes\/bookmark-template.php",
  "type": "filter",
  "description": "Filters the category name."
 },
 {
  "name": "link_title",
  "file": "wp-links-opml.php",
  "type": "filter",
  "description": "Filters the OPML outline link title text."
 },
 {
  "name": "list_cats",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters a taxonomy drop-down display element."
 },
 {
  "name": "list_pages",
  "file": "wp-includes\/class-walker-page-dropdown.php",
  "type": "filter",
  "description": "Filters the page title when creating an HTML drop-down list of pages."
 },
 {
  "name": "list_table_primary_column",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters the name of the primary column for the current list table."
 },
 {
  "name": "list_terms_exclusions",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "filter",
  "description": "Filters the terms to exclude from the terms query."
 },
 {
  "name": "load_default_embeds",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters whether to load the default embed handlers."
 },
 {
  "name": "load_default_widgets",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to load the Widgets library."
 },
 {
  "name": "load_image_to_edit",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the current image being loaded for editing."
 },
 {
  "name": "load_image_to_edit_attachmenturl",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the path to an attachment's URL when editing the image."
 },
 {
  "name": "load_image_to_edit_filesystempath",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the path to an attachment's file when editing the image."
 },
 {
  "name": "load_image_to_edit_path",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the returned path or URL of the current image."
 },
 {
  "name": "load_script_textdomain_relative_path",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the relative path of scripts used for finding translation files."
 },
 {
  "name": "load_script_translation_file",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the file path for loading script translations for the given script handle and text domain."
 },
 {
  "name": "load_script_translations",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters script translations for the given file, script handle and text domain."
 },
 {
  "name": "load_textdomain_mofile",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters MO file path for loading translations for a specific text domain."
 },
 {
  "name": "locale",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the locale ID of the WordPress installation."
 },
 {
  "name": "locale_stylesheet_uri",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the localized stylesheet URI."
 },
 {
  "name": "log_query_custom_data",
  "file": "wp-includes\/wp-db.php",
  "type": "filter",
  "description": "Filters the custom data to log alongside a query."
 },
 {
  "name": "login_body_class",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the login page body classes."
 },
 {
  "name": "login_display_language_dropdown",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the Languages select input activation on the login screen."
 },
 {
  "name": "login_errors",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the error messages displayed above the login form."
 },
 {
  "name": "login_form_bottom",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters content to display at the bottom of the login form."
 },
 {
  "name": "login_form_defaults",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the default login form output arguments."
 },
 {
  "name": "login_form_middle",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters content to display in the middle of the login form."
 },
 {
  "name": "login_form_top",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters content to display at the top of the login form."
 },
 {
  "name": "login_headertext",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the link text of the header logo above the login form."
 },
 {
  "name": "login_headerurl",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters link URL of the header logo above login form."
 },
 {
  "name": "login_language_dropdown_args",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters default arguments for the Languages select input on the login screen."
 },
 {
  "name": "login_link_separator",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the separator used between login form navigation links."
 },
 {
  "name": "login_message",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the message to display above the login form."
 },
 {
  "name": "login_messages",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters instructional messages displayed above the login form."
 },
 {
  "name": "login_redirect",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the login redirect URL."
 },
 {
  "name": "login_site_html_link",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filter the \"Go to site\" link displayed in the login page footer."
 },
 {
  "name": "login_title",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the title tag content for login page."
 },
 {
  "name": "login_url",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the login URL."
 },
 {
  "name": "loginout",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the HTML output for the Log In\/Log Out link."
 },
 {
  "name": "logout_redirect",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the log out redirect URL."
 },
 {
  "name": "logout_url",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the logout URL."
 },
 {
  "name": "lostpassword_errors",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the errors encountered on a password reset request."
 },
 {
  "name": "lostpassword_redirect",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the URL redirected to after submitting the lostpassword\/retrievepassword form."
 },
 {
  "name": "lostpassword_url",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the Lost Password URL."
 },
 {
  "name": "lostpassword_user_data",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the user data during a password reset request."
 },
 {
  "name": "make_clickable_rel",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the rel value that is added to URL matches converted to links."
 },
 {
  "name": "manage_media_columns",
  "file": "wp-admin\/includes\/class-wp-media-list-table.php",
  "type": "filter",
  "description": "Filters the Media list table columns."
 },
 {
  "name": "manage_pages_columns",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the columns displayed in the Pages list table."
 },
 {
  "name": "manage_posts_columns",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the columns displayed in the Posts list table."
 },
 {
  "name": "manage_sites_action_links",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed for each site in the Sites list table."
 },
 {
  "name": "manage_taxonomies_for_attachment_columns",
  "file": "wp-admin\/includes\/class-wp-media-list-table.php",
  "type": "filter",
  "description": "Filters the taxonomy columns for attachments in the Media list table."
 },
 {
  "name": "manage_taxonomies_for_{$post_type}_columns",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the taxonomy columns in the Posts list table."
 },
 {
  "name": "manage_users_custom_column",
  "file": "wp-admin\/includes\/class-wp-users-list-table.php",
  "type": "filter",
  "description": "Filters the display output of custom columns in the Users list table."
 },
 {
  "name": "manage_{$post_type}_posts_columns",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the columns displayed in the Posts list table for a specific post type."
 },
 {
  "name": "manage_{$screen->id}_columns",
  "file": "wp-admin\/includes\/screen.php",
  "type": "filter",
  "description": "Filters the column headers for a list table on a specific screen."
 },
 {
  "name": "manage_{$this->screen->id}_sortable_columns",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters the list table sortable columns for a specific screen."
 },
 {
  "name": "manage_{$this->screen->taxonomy}_custom_column",
  "file": "wp-admin\/includes\/class-wp-terms-list-table.php",
  "type": "filter",
  "description": "Filters the displayed columns in the terms list table."
 },
 {
  "name": "map_meta_cap",
  "file": "wp-includes\/capabilities.php",
  "type": "filter",
  "description": "Filters the primitive capabilities required of the given user to satisfy the capability being checked."
 },
 {
  "name": "max_srcset_image_width",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the maximum image width to be included in a 'srcset' attribute."
 },
 {
  "name": "mce_buttons",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the first-row list of TinyMCE buttons (Visual tab)."
 },
 {
  "name": "mce_buttons_2",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the second-row list of TinyMCE buttons (Visual tab)."
 },
 {
  "name": "mce_buttons_3",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the third-row list of TinyMCE buttons (Visual tab)."
 },
 {
  "name": "mce_buttons_4",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the fourth-row list of TinyMCE buttons (Visual tab)."
 },
 {
  "name": "mce_css",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the comma-delimited list of stylesheets to load in TinyMCE."
 },
 {
  "name": "mce_external_languages",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the translations loaded for external TinyMCE 3.x plugins."
 },
 {
  "name": "mce_external_plugins",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the list of TinyMCE external plugins."
 },
 {
  "name": "media_embedded_in_content_allowed_types",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the embedded media types that are allowed to be returned from the content blob."
 },
 {
  "name": "media_library_infinite_scrolling",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether the Media Library grid has infinite scrolling. Default `false`."
 },
 {
  "name": "media_library_months_with_files",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Allows overriding the list of months displayed in the media library."
 },
 {
  "name": "media_library_show_audio_playlist",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Allows showing or hiding the \"Create Audio Playlist\" button in the media library."
 },
 {
  "name": "media_library_show_video_playlist",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Allows showing or hiding the \"Create Video Playlist\" button in the media library."
 },
 {
  "name": "media_meta",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the media metadata."
 },
 {
  "name": "media_row_actions",
  "file": "wp-admin\/includes\/class-wp-media-list-table.php",
  "type": "filter",
  "description": "Filters the action links for each attachment in the Media list table."
 },
 {
  "name": "media_send_to_editor",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the HTML markup for a media item sent to the editor."
 },
 {
  "name": "media_submitbox_misc_sections",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the audio and video metadata fields to be shown in the publish meta box."
 },
 {
  "name": "media_upload_default_tab",
  "file": "wp-admin\/media-upload.php",
  "type": "filter",
  "description": "Filters the default tab in the legacy (pre-3.5.0) media popup."
 },
 {
  "name": "media_upload_default_type",
  "file": "wp-admin\/media-upload.php",
  "type": "filter",
  "description": "Filters the default media upload type in the legacy (pre-3.5.0) media popup."
 },
 {
  "name": "media_upload_form_url",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the media upload form action URL."
 },
 {
  "name": "media_upload_mime_type_links",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the media upload mime type list items."
 },
 {
  "name": "media_upload_tabs",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the available tabs in the legacy (pre-3.5.0) media popup."
 },
 {
  "name": "media_view_settings",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the media view settings."
 },
 {
  "name": "media_view_strings",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the media view strings."
 },
 {
  "name": "mejs_settings",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters the MediaElement configuration settings."
 },
 {
  "name": "menu_order",
  "file": "wp-admin\/includes\/menu.php",
  "type": "filter",
  "description": "Filters the order of administration menu items."
 },
 {
  "name": "meta_query_find_compatible_table_alias",
  "file": "wp-includes\/class-wp-meta-query.php",
  "type": "filter",
  "description": "Filters the table alias identified as compatible with the current clause."
 },
 {
  "name": "mime_types",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the list of mime types and file extensions."
 },
 {
  "name": "minimum_site_name_length",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the minimum site name length required when validating a site signup."
 },
 {
  "name": "mod_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters the list of rewrite rules formatted for output to an .htaccess file."
 },
 {
  "name": "month_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the month archive permalink."
 },
 {
  "name": "months_dropdown_results",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters the 'Months' drop-down results."
 },
 {
  "name": "ms_site_check",
  "file": "wp-includes\/ms-load.php",
  "type": "filter",
  "description": "Filters checking the status of the current blog."
 },
 {
  "name": "ms_sites_list_table_query_args",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "filter",
  "description": "Filters the arguments for the site query in the sites list table."
 },
 {
  "name": "ms_user_list_site_actions",
  "file": "wp-admin\/includes\/class-wp-ms-users-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed next the sites a user belongs to in the Network Admin Users list table."
 },
 {
  "name": "ms_user_list_site_class",
  "file": "wp-admin\/includes\/class-wp-ms-users-list-table.php",
  "type": "filter",
  "description": "Filters the span class for a site listing on the mulisite user list table."
 },
 {
  "name": "ms_user_row_actions",
  "file": "wp-admin\/includes\/class-wp-ms-users-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed under each user in the Network Admin Users list table."
 },
 {
  "name": "mu_dropdown_languages",
  "file": "wp-admin\/includes\/ms.php",
  "type": "filter",
  "description": "Filters the languages available in the dropdown."
 },
 {
  "name": "mu_menu_items",
  "file": "wp-admin\/network\/settings.php",
  "type": "filter",
  "description": "Filters available network-wide administration menu options."
 },
 {
  "name": "myblogs_blog_actions",
  "file": "wp-admin\/my-sites.php",
  "type": "filter",
  "description": "Filters the row links displayed for each site on the My Sites screen."
 },
 {
  "name": "myblogs_options",
  "file": "wp-admin\/my-sites.php",
  "type": "filter",
  "description": "Enable the Global Settings section on the My Sites screen."
 },
 {
  "name": "nav_menu_attr_title",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters a navigation menu item's title attribute."
 },
 {
  "name": "nav_menu_css_class",
  "file": "wp-includes\/class-walker-nav-menu.php",
  "type": "filter",
  "description": "Filters the CSS classes applied to a menu item's list item element."
 },
 {
  "name": "nav_menu_description",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters a navigation menu item's description."
 },
 {
  "name": "nav_menu_item_args",
  "file": "wp-includes\/class-walker-nav-menu.php",
  "type": "filter",
  "description": "Filters the arguments for a single nav menu item."
 },
 {
  "name": "nav_menu_item_id",
  "file": "wp-includes\/class-walker-nav-menu.php",
  "type": "filter",
  "description": "Filters the ID applied to a menu item's list item element."
 },
 {
  "name": "nav_menu_item_title",
  "file": "wp-includes\/class-walker-nav-menu.php",
  "type": "filter",
  "description": "Filters a menu item's title."
 },
 {
  "name": "nav_menu_items_{$post_type_name}",
  "file": "wp-admin\/includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters the posts displayed in the 'View All' tab of the current post type's menu items meta box."
 },
 {
  "name": "nav_menu_items_{$post_type_name}_recent",
  "file": "wp-admin\/includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters the posts displayed in the 'Most Recent' tab of the current post type's menu items meta box."
 },
 {
  "name": "nav_menu_link_attributes",
  "file": "wp-includes\/class-walker-nav-menu.php",
  "type": "filter",
  "description": "Filters the HTML attributes applied to a menu item's anchor element."
 },
 {
  "name": "nav_menu_meta_box_object",
  "file": "wp-admin\/includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters whether a menu items meta box will be added for the current object type."
 },
 {
  "name": "nav_menu_submenu_css_class",
  "file": "wp-includes\/class-walker-nav-menu.php",
  "type": "filter",
  "description": "Filters the CSS class(es) applied to a menu list element."
 },
 {
  "name": "navigation_markup_template",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the navigation markup template."
 },
 {
  "name": "navigation_widgets_format",
  "file": "wp-includes\/widgets\/class-wp-nav-menu-widget.php",
  "type": "filter",
  "description": "Filters the HTML format of widgets with navigation links."
 },
 {
  "name": "network_admin_email_change_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the contents of the email notification sent when the network admin email address is changed."
 },
 {
  "name": "network_admin_plugin_action_links",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed for each plugin in the Network Admin Plugins list table."
 },
 {
  "name": "network_admin_plugin_action_links_{$plugin_file}",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters the list of action links displayed for a specific plugin in the Network Admin Plugins list table."
 },
 {
  "name": "network_admin_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the network admin URL."
 },
 {
  "name": "network_allowed_themes",
  "file": "wp-includes\/class-wp-theme.php",
  "type": "filter",
  "description": "Filters the array of themes allowed on the network."
 },
 {
  "name": "network_by_path_segments_count",
  "file": "wp-includes\/class-wp-network.php",
  "type": "filter",
  "description": "Filters the number of path segments to consider when searching for a site."
 },
 {
  "name": "network_edit_site_nav_links",
  "file": "wp-admin\/includes\/ms.php",
  "type": "filter",
  "description": "Filters the links that appear on site-editing network pages."
 },
 {
  "name": "network_home_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the network home URL."
 },
 {
  "name": "network_site_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the network site URL."
 },
 {
  "name": "network_sites_updated_message_{$action}",
  "file": "wp-admin\/network\/sites.php",
  "type": "filter",
  "description": "Filters a specific, non-default, site-updated message in the Network admin."
 },
 {
  "name": "networks_clauses",
  "file": "wp-includes\/class-wp-network-query.php",
  "type": "filter_reference",
  "description": "Filters the network query clauses."
 },
 {
  "name": "networks_pre_query",
  "file": "wp-includes\/class-wp-network-query.php",
  "type": "filter_reference",
  "description": "Filters the network data before the query takes place."
 },
 {
  "name": "new_admin_email_content",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters the text of the email sent when a change of site admin email address is attempted."
 },
 {
  "name": "new_network_admin_email_content",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the text of the email sent when a change of network admin email address is attempted."
 },
 {
  "name": "new_site_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the content of the email sent to the Multisite network administrator when a new site is created."
 },
 {
  "name": "new_user_email_content",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the text of the email sent when a change of user email address is attempted."
 },
 {
  "name": "newblog_notify_siteadmin",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the message body of the new site activation email sent to the network administrator."
 },
 {
  "name": "newblogname",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the new site name during registration."
 },
 {
  "name": "newuser_notify_siteadmin",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the message body of the new user activation email sent to the network administrator."
 },
 {
  "name": "next_comments_link_attributes",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the anchor tag attributes for the next comments page link."
 },
 {
  "name": "next_posts_link_attributes",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the anchor tag attributes for the next posts page link."
 },
 {
  "name": "ngettext",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the singular or plural form of a string."
 },
 {
  "name": "ngettext_with_context",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the singular or plural form of a string with gettext context."
 },
 {
  "name": "ngettext_with_context_{$domain}",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the singular or plural form of a string with gettext context for a domain."
 },
 {
  "name": "ngettext_{$domain}",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the singular or plural form of a string for a domain."
 },
 {
  "name": "no_texturize_shortcodes",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the list of shortcodes not to texturize."
 },
 {
  "name": "no_texturize_tags",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the list of HTML elements not to texturize."
 },
 {
  "name": "nocache_headers",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the cache-controlling headers."
 },
 {
  "name": "nonce_life",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the lifespan of nonces in seconds."
 },
 {
  "name": "nonce_user_logged_out",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether the user who generated the nonce is logged out."
 },
 {
  "name": "notify_moderator",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether to send the site moderator email notifications, overriding the site setting."
 },
 {
  "name": "notify_post_author",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters whether to send the post author new comment notification emails, overriding the site setting."
 },
 {
  "name": "number_format_i18n",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the number formatted based on the locale."
 },
 {
  "name": "oembed_dataparse",
  "file": "wp-includes\/class-wp-oembed.php",
  "type": "filter",
  "description": "Filters the returned oEmbed HTML."
 },
 {
  "name": "oembed_default_width",
  "file": "wp-includes\/class-wp-oembed-controller.php",
  "type": "filter",
  "description": "Filters the maxwidth oEmbed parameter."
 },
 {
  "name": "oembed_discovery_links",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the oEmbed discovery links HTML."
 },
 {
  "name": "oembed_endpoint_url",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the oEmbed endpoint URL."
 },
 {
  "name": "oembed_fetch_url",
  "file": "wp-includes\/class-wp-oembed.php",
  "type": "filter",
  "description": "Filters the oEmbed URL to be fetched."
 },
 {
  "name": "oembed_iframe_title_attribute",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the title attribute of the given oEmbed HTML iframe."
 },
 {
  "name": "oembed_linktypes",
  "file": "wp-includes\/class-wp-oembed.php",
  "type": "filter",
  "description": "Filters the link types that contain oEmbed provider URLs."
 },
 {
  "name": "oembed_min_max_width",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the allowed minimum and maximum widths for the oEmbed response."
 },
 {
  "name": "oembed_providers",
  "file": "wp-includes\/class-wp-oembed.php",
  "type": "filter",
  "description": "Filters the list of sanctioned oEmbed providers."
 },
 {
  "name": "oembed_remote_get_args",
  "file": "wp-includes\/class-wp-oembed.php",
  "type": "filter",
  "description": "Filters oEmbed remote get arguments."
 },
 {
  "name": "oembed_request_post_id",
  "file": "wp-includes\/class-wp-oembed-controller.php",
  "type": "filter",
  "description": "Filters the determined post ID."
 },
 {
  "name": "oembed_response_data",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the oEmbed response data."
 },
 {
  "name": "oembed_result",
  "file": "wp-includes\/class-wp-oembed.php",
  "type": "filter",
  "description": "Filters the HTML returned by the oEmbed provider."
 },
 {
  "name": "oembed_ttl",
  "file": "wp-includes\/class-wp-embed.php",
  "type": "filter",
  "description": "Filters the oEmbed TTL value (time to live)."
 },
 {
  "name": "old_slug_redirect_post_id",
  "file": "wp-includes\/query.php",
  "type": "filter",
  "description": "Filters the old slug redirect post ID."
 },
 {
  "name": "old_slug_redirect_url",
  "file": "wp-includes\/query.php",
  "type": "filter",
  "description": "Filters the old slug redirect URL."
 },
 {
  "name": "option_page_capability_{$option_page}",
  "file": "wp-admin\/options.php",
  "type": "filter",
  "description": "Filters the capability required when using the Settings API."
 },
 {
  "name": "option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of an existing option."
 },
 {
  "name": "override_load_textdomain",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters whether to override the .mo file loading."
 },
 {
  "name": "override_post_lock",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters whether to allow the post lock to be overridden."
 },
 {
  "name": "override_unload_textdomain",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters whether to override the text domain unloading."
 },
 {
  "name": "page_attributes_dropdown_pages_args",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "filter",
  "description": "Filters the arguments used to generate a Pages drop-down element."
 },
 {
  "name": "page_css_class",
  "file": "wp-includes\/class-walker-page.php",
  "type": "filter",
  "description": "Filters the list of CSS classes to include with each page item in the list."
 },
 {
  "name": "page_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the permalink for a page."
 },
 {
  "name": "page_menu_link_attributes",
  "file": "wp-includes\/class-walker-page.php",
  "type": "filter",
  "description": "Filters the HTML attributes applied to a page menu item's anchor element."
 },
 {
  "name": "page_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for \"page\" post type archives."
 },
 {
  "name": "page_row_actions",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the array of row action links on the Pages list table."
 },
 {
  "name": "paginate_links",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the paginated links for the given archive pages."
 },
 {
  "name": "paginate_links_output",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the HTML output of paginated links for archives."
 },
 {
  "name": "parent_file",
  "file": "wp-admin\/menu-header.php",
  "type": "filter",
  "description": "Filters the parent file of an admin menu sub-menu item."
 },
 {
  "name": "parent_theme_file_path",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the path to a file in the parent theme."
 },
 {
  "name": "parent_theme_file_uri",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL to a file in the parent theme."
 },
 {
  "name": "password_change_email",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the contents of the email sent when the user's password is changed."
 },
 {
  "name": "password_hint",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the text describing the site's password complexity policy."
 },
 {
  "name": "password_reset_expiration",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the expiration time of password reset keys."
 },
 {
  "name": "password_reset_key_expired",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the return value of check_password_reset_key() when an old-style key is used."
 },
 {
  "name": "phone_content",
  "file": "wp-mail.php",
  "type": "filter",
  "description": "Filters the content of the post submitted by email before saving."
 },
 {
  "name": "pingback_ping_source_uri",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the pingback source URI."
 },
 {
  "name": "pingback_useragent",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the user agent sent when pinging-back a URL."
 },
 {
  "name": "pings_open",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters whether the current post is open for pings."
 },
 {
  "name": "plugin_action_links",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed for each plugin in the Plugins list table."
 },
 {
  "name": "plugin_action_links_{$plugin_file}",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters the list of action links displayed for a specific plugin in the Plugins list table."
 },
 {
  "name": "plugin_auto_update_debug_string",
  "file": "wp-admin\/includes\/class-wp-debug-data.php",
  "type": "filter",
  "description": "Filters the text string of the auto-updates setting for each plugin in the Site Health debug data."
 },
 {
  "name": "plugin_auto_update_setting_html",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters the HTML of the auto-updates setting for each plugin in the Plugins list table."
 },
 {
  "name": "plugin_files_exclusions",
  "file": "wp-admin\/includes\/plugin.php",
  "type": "filter",
  "description": "Filters the array of excluded directories and files while scanning the folder."
 },
 {
  "name": "plugin_install_action_links",
  "file": "wp-admin\/includes\/class-wp-plugin-install-list-table.php",
  "type": "filter",
  "description": "Filters the install action links for a plugin."
 },
 {
  "name": "plugin_locale",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters a plugin's locale."
 },
 {
  "name": "plugin_row_meta",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters the array of row meta for each plugin in the Plugins list table."
 },
 {
  "name": "plugins_api",
  "file": "wp-admin\/includes\/plugin-install.php",
  "type": "filter",
  "description": "Filters the response for the current WordPress.org Plugin Installation API request."
 },
 {
  "name": "plugins_api_args",
  "file": "wp-admin\/includes\/plugin-install.php",
  "type": "filter",
  "description": "Filters the WordPress.org Plugin Installation API arguments."
 },
 {
  "name": "plugins_api_result",
  "file": "wp-admin\/includes\/plugin-install.php",
  "type": "filter",
  "description": "Filters the Plugin Installation API response results."
 },
 {
  "name": "plugins_auto_update_enabled",
  "file": "wp-admin\/includes\/update.php",
  "type": "filter",
  "description": "Filters whether plugins auto-update is enabled."
 },
 {
  "name": "plugins_update_check_locales",
  "file": "wp-includes\/update.php",
  "type": "filter",
  "description": "Filters the locales requested for plugin translations."
 },
 {
  "name": "plugins_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL to the plugins directory."
 },
 {
  "name": "plupload_default_params",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the Plupload default parameters."
 },
 {
  "name": "plupload_default_settings",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the Plupload default settings."
 },
 {
  "name": "plupload_init",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the default Plupload settings."
 },
 {
  "name": "populate_network_meta",
  "file": "wp-admin\/includes\/schema.php",
  "type": "filter",
  "description": "Filters meta for a network on creation."
 },
 {
  "name": "populate_site_meta",
  "file": "wp-admin\/includes\/schema.php",
  "type": "filter",
  "description": "Filters meta for a site on creation."
 },
 {
  "name": "post_class",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the list of CSS class names for the current post."
 },
 {
  "name": "post_column_taxonomy_links",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the links in `$taxonomy` column of edit.php."
 },
 {
  "name": "post_comments_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post comments feed permalink."
 },
 {
  "name": "post_comments_feed_link_html",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post comment feed link anchor tag."
 },
 {
  "name": "post_comments_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the formatted post comments link HTML."
 },
 {
  "name": "post_date_column_status",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the status text of the post."
 },
 {
  "name": "post_date_column_time",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the published time of the post."
 },
 {
  "name": "post_edit_category_parent_dropdown_args",
  "file": "wp-admin\/includes\/meta-boxes.php",
  "type": "filter",
  "description": "Filters the arguments for the taxonomy parent dropdown on the Post Edit page."
 },
 {
  "name": "post_embed_url",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the URL to embed a specific post."
 },
 {
  "name": "post_format_rewrite_base",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the post formats rewrite base."
 },
 {
  "name": "post_gallery",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the default gallery shortcode output."
 },
 {
  "name": "post_limits",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the LIMIT clause of the query."
 },
 {
  "name": "post_limits_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the LIMIT clause of the query."
 },
 {
  "name": "post_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the permalink for a post."
 },
 {
  "name": "post_link_category",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the category that gets used in the %category% permalink token."
 },
 {
  "name": "post_mime_types",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the default list of post mime types."
 },
 {
  "name": "post_password_expires",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the life span of the post password cookie."
 },
 {
  "name": "post_password_required",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters whether a post requires the user to supply a password."
 },
 {
  "name": "post_playlist",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the playlist output."
 },
 {
  "name": "post_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for \"post\" archives."
 },
 {
  "name": "post_row_actions",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the array of row action links on the Posts list table."
 },
 {
  "name": "post_thumbnail_html",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "filter",
  "description": "Filters the post thumbnail HTML."
 },
 {
  "name": "post_thumbnail_id",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "filter",
  "description": "Filters post thumbnail ID."
 },
 {
  "name": "post_thumbnail_size",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "filter",
  "description": "Filters the post thumbnail size."
 },
 {
  "name": "post_thumbnail_url",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "filter",
  "description": "Filters the post thumbnail URL."
 },
 {
  "name": "post_type_archive_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post type archive feed link."
 },
 {
  "name": "post_type_archive_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post type archive permalink."
 },
 {
  "name": "post_type_archive_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the post type archive title."
 },
 {
  "name": "post_type_labels_{$post_type}",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the labels of a specific post type."
 },
 {
  "name": "post_type_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the permalink for a post of a custom post type."
 },
 {
  "name": "post_types_to_delete_with_user",
  "file": "wp-admin\/includes\/user.php",
  "type": "filter",
  "description": "Filters the list of post types to delete with a user."
 },
 {
  "name": "post_updated_messages",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "filter",
  "description": "Filters the post updated messages."
 },
 {
  "name": "postbox_classes_{$screen_id}_{$box_id}",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the postbox classes for a specific screen and box ID combo."
 },
 {
  "name": "postmeta_form_keys",
  "file": "wp-admin\/includes\/template.php",
  "type": "filter",
  "description": "Filters values for the meta key dropdown in the Custom Fields meta box."
 },
 {
  "name": "postmeta_form_limit",
  "file": "wp-admin\/includes\/template.php",
  "type": "filter",
  "description": "Filters the number of custom fields to retrieve for the drop-down in the Custom Fields meta box."
 },
 {
  "name": "posts_clauses",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters all query clauses at once, for convenience."
 },
 {
  "name": "posts_clauses_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters all query clauses at once, for convenience."
 },
 {
  "name": "posts_distinct",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the DISTINCT clause of the query."
 },
 {
  "name": "posts_distinct_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the DISTINCT clause of the query."
 },
 {
  "name": "posts_fields",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the SELECT clause of the query."
 },
 {
  "name": "posts_fields_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the SELECT clause of the query."
 },
 {
  "name": "posts_groupby",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the GROUP BY clause of the query."
 },
 {
  "name": "posts_groupby_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the GROUP BY clause of the query."
 },
 {
  "name": "posts_join",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the JOIN clause of the query."
 },
 {
  "name": "posts_join_paged",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the JOIN clause of the query."
 },
 {
  "name": "posts_join_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the JOIN clause of the query."
 },
 {
  "name": "posts_orderby",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the ORDER BY clause of the query."
 },
 {
  "name": "posts_orderby_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the ORDER BY clause of the query."
 },
 {
  "name": "posts_pre_query",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the posts array before the query takes place."
 },
 {
  "name": "posts_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the completed SQL query before sending."
 },
 {
  "name": "posts_request_ids",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter",
  "description": "Filters the Post IDs SQL request before sending."
 },
 {
  "name": "posts_results",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the raw post results array, prior to status checks."
 },
 {
  "name": "posts_search",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the search SQL that is used in the WHERE clause of WP_Query."
 },
 {
  "name": "posts_search_orderby",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter",
  "description": "Filters the ORDER BY used when ordering search results."
 },
 {
  "name": "posts_where",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the WHERE clause of the query."
 },
 {
  "name": "posts_where_paged",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the WHERE clause of the query."
 },
 {
  "name": "posts_where_request",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the WHERE clause of the query."
 },
 {
  "name": "pre_add_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of a specific network option before it is added."
 },
 {
  "name": "pre_cache_alloptions",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters all options before caching them."
 },
 {
  "name": "pre_category_nicename",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the category nicename before it is sanitized."
 },
 {
  "name": "pre_clear_scheduled_hook",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filter to preflight or hijack clearing a scheduled hook."
 },
 {
  "name": "pre_comment_approved",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters a comment's approval status before it is set."
 },
 {
  "name": "pre_comment_author_email",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment author's email cookie before it is set."
 },
 {
  "name": "pre_comment_author_name",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment author's name cookie before it is set."
 },
 {
  "name": "pre_comment_author_url",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment author's URL cookie before it is set."
 },
 {
  "name": "pre_comment_content",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment content before it is set."
 },
 {
  "name": "pre_comment_user_agent",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment author's browser user agent before it is set."
 },
 {
  "name": "pre_comment_user_ip",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment author's IP address before it is set."
 },
 {
  "name": "pre_count_users",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the user count before queries are run."
 },
 {
  "name": "pre_delete_attachment",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether an attachment deletion should take place."
 },
 {
  "name": "pre_delete_post",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post deletion should take place."
 },
 {
  "name": "pre_determine_locale",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters the locale for the current request prior to the default determination process."
 },
 {
  "name": "pre_do_shortcode_tag",
  "file": "wp-includes\/shortcodes.php",
  "type": "filter",
  "description": "Filters whether to call a shortcode callback."
 },
 {
  "name": "pre_ent2ncr",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters text before named entities are converted into numbered entities."
 },
 {
  "name": "pre_get_avatar",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Allows the HTML for a user's avatar to be returned early."
 },
 {
  "name": "pre_get_avatar_data",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters whether to retrieve the avatar URL early."
 },
 {
  "name": "pre_get_block_file_template",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the block templates array before the query takes place."
 },
 {
  "name": "pre_get_block_template",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the block template object before the query takes place."
 },
 {
  "name": "pre_get_block_templates",
  "file": "wp-includes\/block-template-utils.php",
  "type": "filter",
  "description": "Filters the block templates array before the query takes place."
 },
 {
  "name": "pre_get_blogs_of_user",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the list of a user's sites before it is populated."
 },
 {
  "name": "pre_get_col_charset",
  "file": "wp-includes\/wp-db.php",
  "type": "filter",
  "description": "Filters the column charset value before the DB is checked."
 },
 {
  "name": "pre_get_document_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the document title before it is generated."
 },
 {
  "name": "pre_get_lastpostmodified",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Pre-filter the return value of get_lastpostmodified() before the query is run."
 },
 {
  "name": "pre_get_main_site_id",
  "file": "wp-includes\/class-wp-network.php",
  "type": "filter",
  "description": "Filters the main site ID."
 },
 {
  "name": "pre_get_network_by_path",
  "file": "wp-includes\/class-wp-network.php",
  "type": "filter",
  "description": "Determine a network by its domain and path."
 },
 {
  "name": "pre_get_ready_cron_jobs",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filter to preflight or hijack retrieving ready cron jobs."
 },
 {
  "name": "pre_get_scheduled_event",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filter to preflight or hijack retrieving a scheduled event."
 },
 {
  "name": "pre_get_shortlink",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters whether to preempt generating a shortlink for the given post."
 },
 {
  "name": "pre_get_site_by_path",
  "file": "wp-includes\/ms-load.php",
  "type": "filter",
  "description": "Determine a site by its domain and path."
 },
 {
  "name": "pre_get_space_used",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the amount of storage space used by the current site, in megabytes."
 },
 {
  "name": "pre_get_table_charset",
  "file": "wp-includes\/wp-db.php",
  "type": "filter",
  "description": "Filters the table charset value before the DB is checked."
 },
 {
  "name": "pre_handle_404",
  "file": "wp-includes\/class-wp.php",
  "type": "filter",
  "description": "Filters whether to short-circuit default header status handling."
 },
 {
  "name": "pre_http_request",
  "file": "wp-includes\/class-wp-http.php",
  "type": "filter",
  "description": "Filters the preemptive return value of an HTTP request."
 },
 {
  "name": "pre_http_send_through_proxy",
  "file": "wp-includes\/class-wp-http-proxy.php",
  "type": "filter",
  "description": "Filters whether to preempt sending the request through the proxy."
 },
 {
  "name": "pre_insert_term",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters a term before it is sanitized and inserted into the database."
 },
 {
  "name": "pre_kses",
  "file": "wp-includes\/kses.php",
  "type": "filter",
  "description": "Filters content to be run through KSES."
 },
 {
  "name": "pre_load_script_translations",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Pre-filters script translations for the given file, script handle and text domain."
 },
 {
  "name": "pre_months_dropdown_query",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters to short-circuit performing the months dropdown query."
 },
 {
  "name": "pre_move_uploaded_file",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters whether to short-circuit moving the uploaded file after passing all checks."
 },
 {
  "name": "pre_oembed_result",
  "file": "wp-includes\/class-wp-oembed.php",
  "type": "filter",
  "description": "Filters the oEmbed result before any HTTP requests are made."
 },
 {
  "name": "pre_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of an existing option before it is retrieved."
 },
 {
  "name": "pre_post_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the permalink structure for a post before token replacement occurs."
 },
 {
  "name": "pre_prepare_themes_for_js",
  "file": "wp-admin\/includes\/theme.php",
  "type": "filter",
  "description": "Filters theme data before it is prepared for JavaScript."
 },
 {
  "name": "pre_recurse_dirsize",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the amount of storage space used by one directory and all its children, in megabytes."
 },
 {
  "name": "pre_redirect_guess_404_permalink",
  "file": "wp-includes\/canonical.php",
  "type": "filter",
  "description": "Short-circuits the redirect URL guessing for 404 requests."
 },
 {
  "name": "pre_remote_source",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the pingback remote source."
 },
 {
  "name": "pre_render_block",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Allows render_block() to be short-circuited, by returning a non-null value."
 },
 {
  "name": "pre_reschedule_event",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filter to preflight or hijack rescheduling of events."
 },
 {
  "name": "pre_schedule_event",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filter to preflight or hijack scheduling an event."
 },
 {
  "name": "pre_set_site_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of a specific site transient before it is set."
 },
 {
  "name": "pre_set_theme_mod_{$name}",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the theme modification, or 'theme_mod', value on save."
 },
 {
  "name": "pre_set_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters a specific transient before its value is set."
 },
 {
  "name": "pre_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of an existing network option before it is retrieved."
 },
 {
  "name": "pre_site_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of an existing site transient before it is retrieved."
 },
 {
  "name": "pre_term_link",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the permalink structure for a term before token replacement occurs."
 },
 {
  "name": "pre_term_{$field}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters a term field value before it is sanitized."
 },
 {
  "name": "pre_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of an existing transient before it is retrieved."
 },
 {
  "name": "pre_trash_post",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post trashing should take place."
 },
 {
  "name": "pre_unschedule_event",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filter to preflight or hijack unscheduling of events."
 },
 {
  "name": "pre_unschedule_hook",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Filter to preflight or hijack clearing all events attached to the hook."
 },
 {
  "name": "pre_untrash_post",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post untrashing should take place."
 },
 {
  "name": "pre_update_option",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters an option before its value is (maybe) serialized and updated."
 },
 {
  "name": "pre_update_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters a specific option before its value is (maybe) serialized and updated."
 },
 {
  "name": "pre_update_site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters a specific network option before its value is updated."
 },
 {
  "name": "pre_upload_error",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters whether to preempt the XML-RPC media upload."
 },
 {
  "name": "pre_user_description",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's description before the user is created or updated."
 },
 {
  "name": "pre_user_display_name",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's display name before the user is created or updated."
 },
 {
  "name": "pre_user_email",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's email before the user is created or updated."
 },
 {
  "name": "pre_user_first_name",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's first name before the user is created or updated."
 },
 {
  "name": "pre_user_id",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment author's user ID before it is set."
 },
 {
  "name": "pre_user_last_name",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's last name before the user is created or updated."
 },
 {
  "name": "pre_user_login",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a username after it has been sanitized."
 },
 {
  "name": "pre_user_nicename",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's nicename before the user is created or updated."
 },
 {
  "name": "pre_user_nickname",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's nickname before the user is created or updated."
 },
 {
  "name": "pre_user_url",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters a user's URL before the user is created or updated."
 },
 {
  "name": "pre_user_{$field}",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the value of a user field in the 'db' context."
 },
 {
  "name": "pre_wp_is_site_initialized",
  "file": "wp-includes\/ms-site.php",
  "type": "filter",
  "description": "Filters the check for whether a site is initialized before the database is accessed."
 },
 {
  "name": "pre_wp_mail",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether to preempt sending an email."
 },
 {
  "name": "pre_wp_nav_menu",
  "file": "wp-includes\/nav-menu-template.php",
  "type": "filter",
  "description": "Filters whether to short-circuit the wp_nav_menu() output."
 },
 {
  "name": "pre_wp_unique_filename_file_list",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the file list used for calculating a unique filename for a newly added file."
 },
 {
  "name": "pre_wp_unique_post_slug",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the post slug before it is generated to be unique."
 },
 {
  "name": "pre_wp_update_comment_count_now",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters a post's comment count before it is updated in the database."
 },
 {
  "name": "pre_wp_update_https_detection_errors",
  "file": "wp-includes\/https-detection.php",
  "type": "filter",
  "description": "Short-circuits the process of detecting errors related to HTTPS support."
 },
 {
  "name": "pre_{$field}",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the value of a specific post field before saving."
 },
 {
  "name": "pre_{$taxonomy}_{$field}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters a taxonomy field before it is sanitized."
 },
 {
  "name": "prepend_attachment",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the attachment markup to be prepended to the post content."
 },
 {
  "name": "preprocess_comment",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters a comment's data before it is sanitized and inserted into the database."
 },
 {
  "name": "preview_post_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL used for a post preview."
 },
 {
  "name": "previous_comments_link_attributes",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the anchor tag attributes for the previous comments page link."
 },
 {
  "name": "previous_posts_link_attributes",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the anchor tag attributes for the previous posts page link."
 },
 {
  "name": "print_admin_styles",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters whether to print the admin styles."
 },
 {
  "name": "print_footer_scripts",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters whether to print the footer scripts."
 },
 {
  "name": "print_head_scripts",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters whether to print the head scripts."
 },
 {
  "name": "print_late_styles",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters whether to print the styles queued too late for the HTML head."
 },
 {
  "name": "print_scripts_array",
  "file": "wp-includes\/class.wp-scripts.php",
  "type": "filter",
  "description": "Filters the list of script dependencies left to print."
 },
 {
  "name": "print_styles_array",
  "file": "wp-includes\/class.wp-styles.php",
  "type": "filter",
  "description": "Filters the array of enqueued styles before processing for output."
 },
 {
  "name": "privacy_on_link_text",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the link label for the 'Search engines discouraged' message displayed in the 'At a Glance' dashboard widget."
 },
 {
  "name": "privacy_on_link_title",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the link title attribute for the 'Search engines discouraged' message displayed in the 'At a Glance' dashboard widget."
 },
 {
  "name": "privacy_policy_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL of the privacy policy page."
 },
 {
  "name": "private_title_format",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the text prepended to the post title of private posts."
 },
 {
  "name": "process_text_diff_html",
  "file": "wp-includes\/class-wp-text-diff-renderer-table.php",
  "type": "filter",
  "description": "Contextually filters a diffed line."
 },
 {
  "name": "protected_title_format",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the text prepended to the post title for protected posts."
 },
 {
  "name": "query",
  "file": "wp-includes\/wp-db.php",
  "type": "filter",
  "description": "Filters the database query."
 },
 {
  "name": "query_vars",
  "file": "wp-includes\/class-wp.php",
  "type": "filter",
  "description": "Filters the query variables allowed before processing."
 },
 {
  "name": "quick_edit_dropdown_authors_args",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the arguments used to generate the Quick Edit authors drop-down."
 },
 {
  "name": "quick_edit_dropdown_pages_args",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters the arguments used to generate the Quick Edit page-parent drop-down."
 },
 {
  "name": "quick_edit_show_taxonomy",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters whether the current taxonomy should be shown in the Quick Edit panel."
 },
 {
  "name": "quicktags_settings",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the Quicktags settings."
 },
 {
  "name": "random_password",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the randomly-generated password."
 },
 {
  "name": "recovery_email_debug_info",
  "file": "wp-includes\/class-wp-recovery-mode-email-service.php",
  "type": "filter",
  "description": "Filters the debug information included in the fatal error protection email."
 },
 {
  "name": "recovery_email_support_info",
  "file": "wp-includes\/class-wp-recovery-mode-email-service.php",
  "type": "filter",
  "description": "Filters the support message sent with the the fatal error protection email."
 },
 {
  "name": "recovery_mode_begin_url",
  "file": "wp-includes\/class-wp-recovery-mode-link-service.php",
  "type": "filter",
  "description": "Filters the URL to begin recovery mode."
 },
 {
  "name": "recovery_mode_cookie_length",
  "file": "wp-includes\/class-wp-recovery-mode-cookie-service.php",
  "type": "filter",
  "description": "Filters the length of time a Recovery Mode cookie is valid for."
 },
 {
  "name": "recovery_mode_email",
  "file": "wp-includes\/class-wp-recovery-mode-email-service.php",
  "type": "filter",
  "description": "Filters the contents of the Recovery Mode email."
 },
 {
  "name": "recovery_mode_email_link_ttl",
  "file": "wp-includes\/class-wp-recovery-mode.php",
  "type": "filter",
  "description": "Filters the amount of time the recovery mode email link is valid for."
 },
 {
  "name": "recovery_mode_email_rate_limit",
  "file": "wp-includes\/class-wp-recovery-mode.php",
  "type": "filter",
  "description": "Filters the rate limit between sending new recovery mode email links."
 },
 {
  "name": "redirect_canonical",
  "file": "wp-includes\/canonical.php",
  "type": "filter",
  "description": "Filters the canonical redirect URL."
 },
 {
  "name": "redirect_network_admin_request",
  "file": "wp-admin\/network\/admin.php",
  "type": "filter",
  "description": "Filters whether to redirect the request to the Network Admin."
 },
 {
  "name": "redirect_post_location",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the post redirect destination URL."
 },
 {
  "name": "redirect_term_location",
  "file": "wp-admin\/edit-tags.php",
  "type": "filter",
  "description": "Filters the taxonomy redirect destination URL."
 },
 {
  "name": "redirect_user_admin_request",
  "file": "wp-admin\/user\/admin.php",
  "type": "filter",
  "description": "Filters whether to redirect the request to the User Admin in Multisite."
 },
 {
  "name": "register",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the HTML link to the Registration or Admin page."
 },
 {
  "name": "register_block_type_args",
  "file": "wp-includes\/class-wp-block-type.php",
  "type": "filter",
  "description": "Filters the arguments for registering a block type."
 },
 {
  "name": "register_meta_args",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Filters the registration arguments when registering meta."
 },
 {
  "name": "register_post_type_args",
  "file": "wp-includes\/class-wp-post-type.php",
  "type": "filter",
  "description": "Filters the arguments for registering a post type."
 },
 {
  "name": "register_setting_args",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the registration arguments when registering a setting."
 },
 {
  "name": "register_sidebar_defaults",
  "file": "wp-includes\/widgets.php",
  "type": "filter",
  "description": "Filters the sidebar default arguments."
 },
 {
  "name": "register_taxonomy_args",
  "file": "wp-includes\/class-wp-taxonomy.php",
  "type": "filter",
  "description": "Filters the arguments for registering a taxonomy."
 },
 {
  "name": "register_url",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the user registration URL."
 },
 {
  "name": "registration_errors",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the errors encountered when a new user is being registered."
 },
 {
  "name": "registration_redirect",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the registration redirect URL."
 },
 {
  "name": "removable_query_args",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the list of query variable names to remove."
 },
 {
  "name": "render_block",
  "file": "wp-includes\/class-wp-block.php",
  "type": "filter",
  "description": "Filters the content of a single block."
 },
 {
  "name": "render_block_context",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Filters the default context provided to a rendered block."
 },
 {
  "name": "render_block_data",
  "file": "wp-includes\/blocks.php",
  "type": "filter",
  "description": "Filters the block being rendered in render_block(), before it's processed."
 },
 {
  "name": "render_block_{$this->name}",
  "file": "wp-includes\/class-wp-block.php",
  "type": "filter",
  "description": "Filters the content of a single block."
 },
 {
  "name": "replace_editor",
  "file": "wp-admin\/post.php",
  "type": "filter",
  "description": "Allows replacement of the editor."
 },
 {
  "name": "request",
  "file": "wp-includes\/class-wp.php",
  "type": "filter",
  "description": "Filters the array of parsed query variables."
 },
 {
  "name": "request_filesystem_credentials",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the filesystem credentials."
 },
 {
  "name": "respond_link",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the respond link when a post has no comments."
 },
 {
  "name": "rest_allow_anonymous_comments",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "filter",
  "description": "Filters whether comments can be created via the REST API without authentication."
 },
 {
  "name": "rest_allowed_cors_headers",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the list of request headers that are allowed for REST API CORS requests."
 },
 {
  "name": "rest_authentication_errors",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters REST API authentication errors."
 },
 {
  "name": "rest_avatar_sizes",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST avatar sizes."
 },
 {
  "name": "rest_block_directory_collection_params",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-block-directory-controller.php",
  "type": "filter",
  "description": "Filters REST API collection parameters for the block directory controller."
 },
 {
  "name": "rest_comment_collection_params",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "filter",
  "description": "Filters REST API collection parameters for the comments controller."
 },
 {
  "name": "rest_comment_query",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "filter",
  "description": "Filters WP_Comment_Query arguments when querying comments via the REST API."
 },
 {
  "name": "rest_comment_trashable",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "filter",
  "description": "Filters whether a comment can be trashed via the REST API."
 },
 {
  "name": "rest_dispatch_request",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the REST API dispatch request result."
 },
 {
  "name": "rest_endpoints",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the array of available REST API endpoints."
 },
 {
  "name": "rest_endpoints_description",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the publicly-visible data for a single REST API route."
 },
 {
  "name": "rest_envelope_response",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the enveloped form of a REST API response."
 },
 {
  "name": "rest_exposed_cors_headers",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the list of response headers that are exposed to REST API CORS requests."
 },
 {
  "name": "rest_get_max_batch_size",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the maximum number of REST API requests that can be included in a batch."
 },
 {
  "name": "rest_index",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the REST API root index data."
 },
 {
  "name": "rest_jsonp_enabled",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters whether JSONP is enabled for the REST API."
 },
 {
  "name": "rest_namespace_index",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the REST API namespace index data."
 },
 {
  "name": "rest_oembed_ttl",
  "file": "wp-includes\/class-wp-oembed-controller.php",
  "type": "filter",
  "description": "Filters the oEmbed TTL value (time to live)."
 },
 {
  "name": "rest_pattern_directory_collection_params",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-pattern-directory-controller.php",
  "type": "filter",
  "description": "Filter collection parameters for the block pattern directory controller."
 },
 {
  "name": "rest_post_dispatch",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the REST API response."
 },
 {
  "name": "rest_post_format_search_query",
  "file": "wp-includes\/rest-api\/search\/class-wp-rest-post-format-search-handler.php",
  "type": "filter",
  "description": "Filters the query arguments for a REST API search request."
 },
 {
  "name": "rest_post_search_query",
  "file": "wp-includes\/rest-api\/search\/class-wp-rest-post-search-handler.php",
  "type": "filter",
  "description": "Filters the query arguments for a REST API search request."
 },
 {
  "name": "rest_pre_dispatch",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the pre-calculated result of a REST API dispatch request."
 },
 {
  "name": "rest_pre_echo_response",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the REST API response."
 },
 {
  "name": "rest_pre_get_setting",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-settings-controller.php",
  "type": "filter",
  "description": "Filters the value of a setting recognized by the REST API."
 },
 {
  "name": "rest_pre_insert_application_password",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-application-passwords-controller.php",
  "type": "filter",
  "description": "Filters an application password before it is inserted via the REST API."
 },
 {
  "name": "rest_pre_insert_comment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "filter",
  "description": "Filters a comment before it is inserted via the REST API."
 },
 {
  "name": "rest_pre_insert_nav_menu_item",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-menu-items-controller.php",
  "type": "filter",
  "description": "Filters a menu item before it is inserted via the REST API."
 },
 {
  "name": "rest_pre_insert_user",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-users-controller.php",
  "type": "filter",
  "description": "Filters user data before insertion via the REST API."
 },
 {
  "name": "rest_pre_insert_{$this->post_type}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "filter",
  "description": "Filters a post before it is inserted via the REST API."
 },
 {
  "name": "rest_pre_insert_{$this->taxonomy}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-terms-controller.php",
  "type": "filter",
  "description": "Filters term data before inserting term via the REST API."
 },
 {
  "name": "rest_pre_serve_request",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters whether the REST API request has already been served."
 },
 {
  "name": "rest_pre_update_setting",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-settings-controller.php",
  "type": "filter",
  "description": "Filters whether to preempt a setting value update via the REST API."
 },
 {
  "name": "rest_prepare_application_password",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-application-passwords-controller.php",
  "type": "filter",
  "description": "Filters the REST API response for an application password."
 },
 {
  "name": "rest_prepare_attachment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-attachments-controller.php",
  "type": "filter",
  "description": "Filters an attachment returned from the REST API."
 },
 {
  "name": "rest_prepare_autosave",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-autosaves-controller.php",
  "type": "filter",
  "description": "Filters a revision returned from the REST API."
 },
 {
  "name": "rest_prepare_block_pattern",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-pattern-directory-controller.php",
  "type": "filter",
  "description": "Filters the REST API response for a block pattern."
 },
 {
  "name": "rest_prepare_block_type",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-block-types-controller.php",
  "type": "filter",
  "description": "Filters a block type returned from the REST API."
 },
 {
  "name": "rest_prepare_comment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "filter",
  "description": "Filters a comment returned from the REST API."
 },
 {
  "name": "rest_prepare_menu_location",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-menu-locations-controller.php",
  "type": "filter",
  "description": "Filters menu location data returned from the REST API."
 },
 {
  "name": "rest_prepare_nav_menu_item",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-menu-items-controller.php",
  "type": "filter",
  "description": "Filters the menu item data for a REST API response."
 },
 {
  "name": "rest_prepare_plugin",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-plugins-controller.php",
  "type": "filter",
  "description": "Filters plugin data for a REST API response."
 },
 {
  "name": "rest_prepare_post_type",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-post-types-controller.php",
  "type": "filter",
  "description": "Filters a post type returned from the REST API."
 },
 {
  "name": "rest_prepare_revision",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-revisions-controller.php",
  "type": "filter",
  "description": "Filters a revision returned from the REST API."
 },
 {
  "name": "rest_prepare_sidebar",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-sidebars-controller.php",
  "type": "filter",
  "description": "Filters the REST API response for a sidebar."
 },
 {
  "name": "rest_prepare_status",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-post-statuses-controller.php",
  "type": "filter",
  "description": "Filters a post status returned from the REST API."
 },
 {
  "name": "rest_prepare_taxonomy",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-taxonomies-controller.php",
  "type": "filter",
  "description": "Filters a taxonomy returned from the REST API."
 },
 {
  "name": "rest_prepare_theme",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-themes-controller.php",
  "type": "filter",
  "description": "Filters theme data returned from the REST API."
 },
 {
  "name": "rest_prepare_url_details",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-url-details-controller.php",
  "type": "filter",
  "description": "Filters the URL data for the response."
 },
 {
  "name": "rest_prepare_user",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-users-controller.php",
  "type": "filter",
  "description": "Filters user data returned from the REST API."
 },
 {
  "name": "rest_prepare_widget",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-widgets-controller.php",
  "type": "filter",
  "description": "Filters the REST API response for a widget."
 },
 {
  "name": "rest_prepare_widget_type",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-widget-types-controller.php",
  "type": "filter",
  "description": "Filters the REST API response for a widget type."
 },
 {
  "name": "rest_prepare_{$this->post_type}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "filter",
  "description": "Filters the post data for a REST API response."
 },
 {
  "name": "rest_prepare_{$this->taxonomy}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-terms-controller.php",
  "type": "filter",
  "description": "Filters the term data for a REST API response."
 },
 {
  "name": "rest_preprocess_comment",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-comments-controller.php",
  "type": "filter",
  "description": "Filters a comment added via the REST API after it is prepared for insertion into the database."
 },
 {
  "name": "rest_queried_resource_route",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST route for the currently queried object."
 },
 {
  "name": "rest_query_var-{$key}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "filter",
  "description": "Filters the query_vars used in get_items() for the constructed query."
 },
 {
  "name": "rest_request_after_callbacks",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the response immediately after executing any REST API callbacks."
 },
 {
  "name": "rest_request_before_callbacks",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the response before executing any REST API callbacks."
 },
 {
  "name": "rest_request_from_url",
  "file": "wp-includes\/rest-api\/class-wp-rest-request.php",
  "type": "filter",
  "description": "Filters the REST API request generated from a URL."
 },
 {
  "name": "rest_request_parameter_order",
  "file": "wp-includes\/rest-api\/class-wp-rest-request.php",
  "type": "filter",
  "description": "Filters the parameter priority order for a REST API request."
 },
 {
  "name": "rest_response_link_curies",
  "file": "wp-includes\/rest-api\/class-wp-rest-response.php",
  "type": "filter",
  "description": "Filters extra CURIEs available on REST API responses."
 },
 {
  "name": "rest_route_data",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters the publicly-visible data for REST API routes."
 },
 {
  "name": "rest_route_for_post",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST API route for a post."
 },
 {
  "name": "rest_route_for_post_type_items",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST API route for a post type."
 },
 {
  "name": "rest_route_for_taxonomy_items",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST API route for a taxonomy."
 },
 {
  "name": "rest_route_for_term",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST API route for a term."
 },
 {
  "name": "rest_send_nocache_headers",
  "file": "wp-includes\/rest-api\/class-wp-rest-server.php",
  "type": "filter",
  "description": "Filters whether to send nocache headers on a REST API request."
 },
 {
  "name": "rest_term_search_query",
  "file": "wp-includes\/rest-api\/search\/class-wp-rest-term-search-handler.php",
  "type": "filter",
  "description": "Filters the query arguments for a REST API search request."
 },
 {
  "name": "rest_themes_collection_params",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-themes-controller.php",
  "type": "filter",
  "description": "Filters REST API collection parameters for the themes controller."
 },
 {
  "name": "rest_url",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST URL."
 },
 {
  "name": "rest_url_details_cache_expiration",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-url-details-controller.php",
  "type": "filter",
  "description": "Filters the cache expiration."
 },
 {
  "name": "rest_url_details_http_request_args",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-url-details-controller.php",
  "type": "filter",
  "description": "Filters the HTTP request args for URL data retrieval."
 },
 {
  "name": "rest_url_prefix",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST URL prefix."
 },
 {
  "name": "rest_user_collection_params",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-users-controller.php",
  "type": "filter",
  "description": "Filters REST API collection parameters for the users controller."
 },
 {
  "name": "rest_user_query",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-users-controller.php",
  "type": "filter",
  "description": "Filters WP_User_Query arguments when querying users via the REST API."
 },
 {
  "name": "rest_{$this->post_type}_collection_params",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "filter",
  "description": "Filters collection parameters for the posts controller."
 },
 {
  "name": "rest_{$this->post_type}_item_schema",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "filter",
  "description": "Filters the post's schema."
 },
 {
  "name": "rest_{$this->post_type}_query",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "filter",
  "description": "Filters WP_Query arguments when querying posts via the REST API."
 },
 {
  "name": "rest_{$this->post_type}_trashable",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-posts-controller.php",
  "type": "filter",
  "description": "Filters whether a post is trashable."
 },
 {
  "name": "rest_{$this->taxonomy}_collection_params",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-terms-controller.php",
  "type": "filter",
  "description": "Filters collection parameters for the terms controller."
 },
 {
  "name": "rest_{$this->taxonomy}_query",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-terms-controller.php",
  "type": "filter",
  "description": "Filters get_terms() arguments when querying terms via the REST API."
 },
 {
  "name": "retrieve_password_message",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the message body of the password reset mail."
 },
 {
  "name": "retrieve_password_title",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the subject of the password reset email."
 },
 {
  "name": "revision_text_diff_options",
  "file": "wp-admin\/includes\/revision.php",
  "type": "filter",
  "description": "Filters revisions text diff options."
 },
 {
  "name": "rewrite_rules_array",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters the full set of generated rewrite rules."
 },
 {
  "name": "robots_txt",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the robots.txt output."
 },
 {
  "name": "role_has_cap",
  "file": "wp-includes\/class-wp-role.php",
  "type": "filter",
  "description": "Filters which capabilities a role has."
 },
 {
  "name": "root_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for root-level archives."
 },
 {
  "name": "rss_enclosure",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the RSS enclosure HTML link tag for the current post."
 },
 {
  "name": "rss_update_frequency",
  "file": "wp-includes\/feed-rss2.php",
  "type": "filter",
  "description": "Filters the RSS update frequency."
 },
 {
  "name": "rss_update_period",
  "file": "wp-includes\/feed-rss2.php",
  "type": "filter",
  "description": "Filters how often to update the RSS feed."
 },
 {
  "name": "rss_widget_feed_link",
  "file": "wp-includes\/widgets\/class-wp-widget-rss.php",
  "type": "filter",
  "description": "Filters the classic RSS widget's feed icon link."
 },
 {
  "name": "run_wptexturize",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters whether to skip running wptexturize()."
 },
 {
  "name": "safe_style_css",
  "file": "wp-includes\/kses.php",
  "type": "filter",
  "description": "Filters the list of allowed CSS attributes."
 },
 {
  "name": "safecss_filter_attr_allow_css",
  "file": "wp-includes\/kses.php",
  "type": "filter",
  "description": "Filters the check for unsafe CSS in `safecss_filter_attr`."
 },
 {
  "name": "salt",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the WordPress salt."
 },
 {
  "name": "sanitize_email",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized email address."
 },
 {
  "name": "sanitize_file_name",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized filename string."
 },
 {
  "name": "sanitize_file_name_chars",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the list of characters to remove from a filename."
 },
 {
  "name": "sanitize_html_class",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized HTML class string."
 },
 {
  "name": "sanitize_key",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized key string."
 },
 {
  "name": "sanitize_mime_type",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a mime type following sanitization."
 },
 {
  "name": "sanitize_option_{$option}",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters an option value following sanitization."
 },
 {
  "name": "sanitize_text_field",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized text field string."
 },
 {
  "name": "sanitize_textarea_field",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized textarea field string."
 },
 {
  "name": "sanitize_title",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized title string."
 },
 {
  "name": "sanitize_trackback_urls",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a list of trackback URLs following sanitization."
 },
 {
  "name": "sanitize_user",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a sanitized username string."
 },
 {
  "name": "sanitize_{$object_type}_meta_{$meta_key}",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Filters the sanitization of a specific meta key of a specific meta type."
 },
 {
  "name": "sanitize_{$object_type}_meta_{$meta_key}_for_{$object_subtype}",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Filters the sanitization of a specific meta key of a specific meta type and subtype."
 },
 {
  "name": "schedule_event",
  "file": "wp-includes\/cron.php",
  "type": "filter",
  "description": "Modify an event before it is scheduled."
 },
 {
  "name": "screen_layout_columns",
  "file": "wp-admin\/includes\/class-wp-screen.php",
  "type": "filter",
  "description": "Filters the array of screen layout columns."
 },
 {
  "name": "screen_options_show_screen",
  "file": "wp-admin\/includes\/class-wp-screen.php",
  "type": "filter",
  "description": "Filters whether to show the Screen Options tab."
 },
 {
  "name": "screen_options_show_submit",
  "file": "wp-admin\/includes\/class-wp-screen.php",
  "type": "filter",
  "description": "Filters whether to show the Screen Options submit button."
 },
 {
  "name": "screen_settings",
  "file": "wp-admin\/includes\/class-wp-screen.php",
  "type": "filter",
  "description": "Filters the screen settings text displayed in the Screen Options tab."
 },
 {
  "name": "script_loader_src",
  "file": "wp-includes\/class.wp-scripts.php",
  "type": "filter",
  "description": "Filters the script loader source."
 },
 {
  "name": "script_loader_tag",
  "file": "wp-includes\/class.wp-scripts.php",
  "type": "filter",
  "description": "Filters the HTML script tag of an enqueued script."
 },
 {
  "name": "search_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the search feed link."
 },
 {
  "name": "search_form_args",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the array of arguments used when generating the search form."
 },
 {
  "name": "search_form_format",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the HTML format of the search form."
 },
 {
  "name": "search_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the search permalink."
 },
 {
  "name": "search_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for search archives."
 },
 {
  "name": "secure_auth_cookie",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether the auth cookie should only be sent over HTTPS."
 },
 {
  "name": "secure_auth_redirect",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether to use a secure authentication redirect."
 },
 {
  "name": "secure_logged_in_cookie",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters whether the logged in cookie should only be sent over HTTPS."
 },
 {
  "name": "secure_signon_cookie",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether to use a secure sign-on cookie."
 },
 {
  "name": "self_admin_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the admin URL for the current site or network depending on context."
 },
 {
  "name": "self_link",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the current feed URL."
 },
 {
  "name": "send_auth_cookies",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Allows preventing auth cookies from actually being sent to the client."
 },
 {
  "name": "send_core_update_notification_email",
  "file": "wp-admin\/includes\/class-wp-automatic-updater.php",
  "type": "filter",
  "description": "Filters whether to notify the site administrator of a new core update."
 },
 {
  "name": "send_email_change_email",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether to send the email change email."
 },
 {
  "name": "send_network_admin_email_change_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether to send the network admin email change notification email."
 },
 {
  "name": "send_new_site_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether to send an email to the Multisite network administrator when a new site is created."
 },
 {
  "name": "send_password_change_email",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether to send the password change email."
 },
 {
  "name": "send_site_admin_email_change_email",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to send the site admin email change notification email."
 },
 {
  "name": "session_token_manager",
  "file": "wp-includes\/class-wp-session-tokens.php",
  "type": "filter",
  "description": "Filters the class name for the session token manager."
 },
 {
  "name": "set-screen-option",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters a screen option value before it is set."
 },
 {
  "name": "set_screen_option_{$option}",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters a screen option value before it is set."
 },
 {
  "name": "set_url_scheme",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the resulting URL after setting the scheme."
 },
 {
  "name": "shake_error_codes",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the error codes array for shaking the login form."
 },
 {
  "name": "shortcode_atts_{$shortcode}",
  "file": "wp-includes\/shortcodes.php",
  "type": "filter",
  "description": "Filters shortcode attributes."
 },
 {
  "name": "should_load_block_editor_scripts_and_styles",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters the flag that decides whether or not block editor scripts and styles are going to be enqueued on the current screen."
 },
 {
  "name": "should_load_remote_block_patterns",
  "file": "wp-includes\/block-patterns.php",
  "type": "filter",
  "description": "Filter to disable remote block patterns."
 },
 {
  "name": "should_load_separate_core_block_assets",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters whether block styles should be loaded separately."
 },
 {
  "name": "show_admin_bar",
  "file": "wp-includes\/admin-bar.php",
  "type": "filter",
  "description": "Filters whether to show the admin bar."
 },
 {
  "name": "show_advanced_plugins",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters whether to display the advanced plugins list table."
 },
 {
  "name": "show_network_active_plugins",
  "file": "wp-admin\/includes\/class-wp-plugins-list-table.php",
  "type": "filter",
  "description": "Filters whether to display network-active plugins alongside plugins active for the current site."
 },
 {
  "name": "show_network_site_users_add_existing_form",
  "file": "wp-admin\/network\/site-users.php",
  "type": "filter",
  "description": "Filters whether to show the Add Existing User form on the Multisite Users screen."
 },
 {
  "name": "show_network_site_users_add_new_form",
  "file": "wp-admin\/network\/site-users.php",
  "type": "filter",
  "description": "Filters whether to show the Add New User form on the Multisite Users screen."
 },
 {
  "name": "show_password_fields",
  "file": "wp-admin\/user-edit.php",
  "type": "filter",
  "description": "Filters the display of the password fields."
 },
 {
  "name": "show_post_locked_dialog",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters whether to show the post locked dialog."
 },
 {
  "name": "show_recent_comments_widget_style",
  "file": "wp-includes\/widgets\/class-wp-widget-recent-comments.php",
  "type": "filter",
  "description": "Filters the Recent Comments default widget styles."
 },
 {
  "name": "sidebars_widgets",
  "file": "wp-includes\/widgets.php",
  "type": "filter",
  "description": "Filters the list of sidebars and their widgets."
 },
 {
  "name": "signup_another_blog_init",
  "file": "wp-signup.php",
  "type": "filter",
  "description": "Filters the default site sign-up variables."
 },
 {
  "name": "signup_blog_init",
  "file": "wp-signup.php",
  "type": "filter",
  "description": "Filters the default site creation variables for the site sign-up form."
 },
 {
  "name": "signup_get_available_languages",
  "file": "wp-signup.php",
  "type": "filter",
  "description": "Filters the list of available languages for front-end site sign-ups."
 },
 {
  "name": "signup_site_meta",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the metadata for a site signup."
 },
 {
  "name": "signup_user_init",
  "file": "wp-signup.php",
  "type": "filter",
  "description": "Filters the default user variables used on the user sign-up form."
 },
 {
  "name": "signup_user_meta",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the metadata for a user signup."
 },
 {
  "name": "single_cat_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the category archive page title."
 },
 {
  "name": "single_post_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the page title for a single post."
 },
 {
  "name": "single_tag_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the tag archive page title."
 },
 {
  "name": "single_term_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the custom taxonomy archive page title."
 },
 {
  "name": "site_admin_email_change_email",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the contents of the email notification sent when the site admin email address is changed."
 },
 {
  "name": "site_allowed_themes",
  "file": "wp-includes\/class-wp-theme.php",
  "type": "filter",
  "description": "Filters the array of themes allowed on the site."
 },
 {
  "name": "site_by_path_segments_count",
  "file": "wp-includes\/ms-load.php",
  "type": "filter",
  "description": "Filters the number of path segments to consider when searching for a site."
 },
 {
  "name": "site_details",
  "file": "wp-includes\/class-wp-site.php",
  "type": "filter",
  "description": "Filters a site's extended properties."
 },
 {
  "name": "site_health_navigation_tabs",
  "file": "wp-admin\/site-health.php",
  "type": "filter",
  "description": "An associative array of extra tabs for the Site Health navigation bar."
 },
 {
  "name": "site_health_test_rest_capability_{$check}",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-site-health-controller.php",
  "type": "filter",
  "description": "Filters the capability needed to run a given Site Health check."
 },
 {
  "name": "site_icon_attachment_metadata",
  "file": "wp-admin\/includes\/class-wp-site-icon.php",
  "type": "filter",
  "description": "Filters the site icon attachment metadata."
 },
 {
  "name": "site_icon_image_sizes",
  "file": "wp-admin\/includes\/class-wp-site-icon.php",
  "type": "filter",
  "description": "Filters the different dimensions that a site icon is saved in."
 },
 {
  "name": "site_icon_meta_tags",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the site icon meta tags, so plugins can add their own."
 },
 {
  "name": "site_option_{$option}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of an existing network option."
 },
 {
  "name": "site_search_columns",
  "file": "wp-includes\/class-wp-site-query.php",
  "type": "filter",
  "description": "Filters the columns to search in a WP_Site_Query search."
 },
 {
  "name": "site_status_test_php_modules",
  "file": "wp-admin\/includes\/class-wp-site-health.php",
  "type": "filter",
  "description": "An array representing all the modules we wish to test for."
 },
 {
  "name": "site_status_test_result",
  "file": "wp-admin\/includes\/class-wp-site-health.php",
  "type": "filter",
  "description": "Filters the output of a finished Site Health test."
 },
 {
  "name": "site_status_tests",
  "file": "wp-admin\/includes\/class-wp-site-health.php",
  "type": "filter",
  "description": "Add or modify which site status tests are run on a site."
 },
 {
  "name": "site_transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters the value of an existing site transient."
 },
 {
  "name": "site_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the site URL."
 },
 {
  "name": "sites_clauses",
  "file": "wp-includes\/class-wp-site-query.php",
  "type": "filter_reference",
  "description": "Filters the site query clauses."
 },
 {
  "name": "sites_pre_query",
  "file": "wp-includes\/class-wp-site-query.php",
  "type": "filter_reference",
  "description": "Filters the site data before the get_sites query takes place."
 },
 {
  "name": "smilies",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters all the smilies."
 },
 {
  "name": "smilies_src",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the Smiley image URL before it's used in the image element."
 },
 {
  "name": "split_the_query",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter",
  "description": "Filters whether to split the query."
 },
 {
  "name": "status_header",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters an HTTP status header."
 },
 {
  "name": "strict_redirect_guess_404_permalink",
  "file": "wp-includes\/canonical.php",
  "type": "filter",
  "description": "Filters whether to perform a strict guess for a 404 redirect."
 },
 {
  "name": "strip_shortcodes_tagnames",
  "file": "wp-includes\/shortcodes.php",
  "type": "filter",
  "description": "Filters the list of shortcode tags to remove from the content."
 },
 {
  "name": "style_loader_src",
  "file": "wp-includes\/class.wp-styles.php",
  "type": "filter",
  "description": "Filters an enqueued style's fully-qualified URL."
 },
 {
  "name": "style_loader_tag",
  "file": "wp-includes\/class.wp-styles.php",
  "type": "filter",
  "description": "Filters the HTML link tag of an enqueued style."
 },
 {
  "name": "styles_inline_size_limit",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "The maximum size of inlined styles in bytes."
 },
 {
  "name": "stylesheet",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the name of current stylesheet."
 },
 {
  "name": "stylesheet_directory",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the stylesheet directory path for the active theme."
 },
 {
  "name": "stylesheet_directory_uri",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the stylesheet directory URI."
 },
 {
  "name": "stylesheet_uri",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the URI of the active theme stylesheet."
 },
 {
  "name": "subdirectory_reserved_names",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters reserved site names on a sub-directory Multisite installation."
 },
 {
  "name": "submenu_file",
  "file": "wp-admin\/menu-header.php",
  "type": "filter",
  "description": "Filters the file of an admin menu sub-menu item."
 },
 {
  "name": "tables_to_repair",
  "file": "wp-admin\/maint\/repair.php",
  "type": "filter",
  "description": "Filters additional database tables to repair."
 },
 {
  "name": "tag_cloud_sort",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters how the items in a tag cloud are sorted."
 },
 {
  "name": "tag_escape",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a string cleaned and escaped for output as an HTML tag."
 },
 {
  "name": "tag_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the post tag feed link."
 },
 {
  "name": "tag_link",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the tag link."
 },
 {
  "name": "tag_row_actions",
  "file": "wp-admin\/includes\/class-wp-terms-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed for each term in the Tags list table."
 },
 {
  "name": "taxonomy_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the feed link for a taxonomy other than 'category' or 'post_tag'."
 },
 {
  "name": "taxonomy_labels_{$taxonomy}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the labels of a specific taxonomy."
 },
 {
  "name": "taxonomy_parent_dropdown_args",
  "file": "wp-admin\/edit-tags.php",
  "type": "filter",
  "description": "Filters the taxonomy parent drop-down on the Edit Term page."
 },
 {
  "name": "teeny_mce_before_init",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the teenyMCE config before init."
 },
 {
  "name": "teeny_mce_buttons",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the list of teenyMCE buttons (Text tab)."
 },
 {
  "name": "teeny_mce_plugins",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the list of teenyMCE plugins."
 },
 {
  "name": "template",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the name of the active theme."
 },
 {
  "name": "template_directory",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the active theme directory path."
 },
 {
  "name": "template_directory_uri",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the active theme directory URI."
 },
 {
  "name": "template_include",
  "file": "wp-includes\/template-loader.php",
  "type": "filter",
  "description": "Filters the path of the current template before including it."
 },
 {
  "name": "term_id_filter",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the term ID after a new term is created."
 },
 {
  "name": "term_link",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the term link."
 },
 {
  "name": "term_links-{$taxonomy}",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the term links for a given taxonomy."
 },
 {
  "name": "term_name",
  "file": "wp-admin\/includes\/class-wp-terms-list-table.php",
  "type": "filter",
  "description": "Filters display of the term name in the terms list table."
 },
 {
  "name": "term_search_min_chars",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the minimum number of characters required to fire a tag search via Ajax."
 },
 {
  "name": "term_updated_messages",
  "file": "wp-admin\/includes\/edit-tag-messages.php",
  "type": "filter",
  "description": "Filters the messages displayed when a tag is updated."
 },
 {
  "name": "term_{$field}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the term field sanitized for display."
 },
 {
  "name": "term_{$field}_rss",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the term field for use in RSS."
 },
 {
  "name": "terms_clauses",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "filter",
  "description": "Filters the terms query SQL clauses."
 },
 {
  "name": "terms_pre_query",
  "file": "wp-includes\/class-wp-term-query.php",
  "type": "filter_reference",
  "description": "Filters the terms array before the query takes place."
 },
 {
  "name": "terms_to_edit",
  "file": "wp-admin\/includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the comma-separated list of terms available to edit."
 },
 {
  "name": "the_author",
  "file": "wp-includes\/author-template.php",
  "type": "filter",
  "description": "Filters the display name of the current post's author."
 },
 {
  "name": "the_author_posts_link",
  "file": "wp-includes\/author-template.php",
  "type": "filter",
  "description": "Filters the link to the author page of the author of the current post."
 },
 {
  "name": "the_author_{$field}",
  "file": "wp-includes\/author-template.php",
  "type": "filter",
  "description": "The value of the requested user metadata."
 },
 {
  "name": "the_category",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the category or list of categories."
 },
 {
  "name": "the_category_list",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the categories before building the category list."
 },
 {
  "name": "the_category_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters all of the post categories for display in a feed."
 },
 {
  "name": "the_comments",
  "file": "wp-includes\/class-wp-comment-query.php",
  "type": "filter_reference",
  "description": "Filters the comment query results."
 },
 {
  "name": "the_content",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the post content."
 },
 {
  "name": "the_content_export",
  "file": "wp-admin\/includes\/export.php",
  "type": "filter",
  "description": "Filters the post content used for WXR exports."
 },
 {
  "name": "the_content_feed",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the post content for use in feeds."
 },
 {
  "name": "the_content_more_link",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the Read More link text."
 },
 {
  "name": "the_date",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the date a post was published for display."
 },
 {
  "name": "the_editor",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the HTML markup output that displays the editor."
 },
 {
  "name": "the_editor_content",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the default editor content."
 },
 {
  "name": "the_excerpt",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the displayed post excerpt."
 },
 {
  "name": "the_excerpt_embed",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the post excerpt for the embed template."
 },
 {
  "name": "the_excerpt_export",
  "file": "wp-admin\/includes\/export.php",
  "type": "filter",
  "description": "Filters the post excerpt used for WXR exports."
 },
 {
  "name": "the_excerpt_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the post excerpt for a feed."
 },
 {
  "name": "the_feed_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the feed link anchor tag."
 },
 {
  "name": "the_generator",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the output of the XHTML generator tag for display."
 },
 {
  "name": "the_guid",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the escaped Global Unique Identifier (guid) of the post."
 },
 {
  "name": "the_meta_key",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the HTML output of the li element in the post custom fields list."
 },
 {
  "name": "the_modified_author",
  "file": "wp-includes\/author-template.php",
  "type": "filter",
  "description": "Filters the display name of the author who last edited the current post."
 },
 {
  "name": "the_modified_date",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the date a post was last modified for display."
 },
 {
  "name": "the_modified_time",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the localized time a post was last modified, for display."
 },
 {
  "name": "the_networks",
  "file": "wp-includes\/class-wp-network-query.php",
  "type": "filter_reference",
  "description": "Filters the network query results."
 },
 {
  "name": "the_password_form",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the HTML output for the protected post password form."
 },
 {
  "name": "the_permalink",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the display of the permalink for the current post."
 },
 {
  "name": "the_permalink_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the permalink to the post for use in feeds."
 },
 {
  "name": "the_post_thumbnail_caption",
  "file": "wp-includes\/post-thumbnail-template.php",
  "type": "filter",
  "description": "Filters the displayed post thumbnail caption."
 },
 {
  "name": "the_posts",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the array of retrieved posts after they've been fetched and internally processed."
 },
 {
  "name": "the_preview",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter_reference",
  "description": "Filters the single post for preview mode."
 },
 {
  "name": "the_privacy_policy_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the privacy policy link."
 },
 {
  "name": "the_search_query",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the contents of the search query variable for display."
 },
 {
  "name": "the_shortlink",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the short link anchor tag for a post."
 },
 {
  "name": "the_sites",
  "file": "wp-includes\/class-wp-site-query.php",
  "type": "filter_reference",
  "description": "Filters the site query results."
 },
 {
  "name": "the_tags",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the tags list for a given post."
 },
 {
  "name": "the_terms",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the list of terms to display."
 },
 {
  "name": "the_time",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the time a post was written for display."
 },
 {
  "name": "the_title",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the post title."
 },
 {
  "name": "the_title_export",
  "file": "wp-admin\/includes\/export.php",
  "type": "filter",
  "description": "Filters the post title used for WXR exports."
 },
 {
  "name": "the_title_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the post title for use in a feed."
 },
 {
  "name": "the_weekday",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the weekday on which the post was written, for display."
 },
 {
  "name": "the_weekday_date",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the localized date on which the post was written, for display."
 },
 {
  "name": "theme_action_links",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed for each theme in the Multisite themes list table."
 },
 {
  "name": "theme_action_links_{$stylesheet}",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "filter",
  "description": "Filters the action links of a specific theme in the Multisite themes list table."
 },
 {
  "name": "theme_auto_update_debug_string",
  "file": "wp-admin\/includes\/class-wp-debug-data.php",
  "type": "filter",
  "description": "Filters the text string of the auto-updates setting for each theme in the Site Health debug data."
 },
 {
  "name": "theme_auto_update_setting_html",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "filter",
  "description": "Filters the HTML of the auto-updates setting for each theme in the Themes list table."
 },
 {
  "name": "theme_auto_update_setting_template",
  "file": "wp-admin\/themes.php",
  "type": "filter",
  "description": "Filters the JavaScript template used to display the auto-update setting for a theme (in the overlay)."
 },
 {
  "name": "theme_file_path",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the path to a file in the theme."
 },
 {
  "name": "theme_file_uri",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the URL to a file in the theme."
 },
 {
  "name": "theme_install_actions",
  "file": "wp-admin\/includes\/class-wp-theme-install-list-table.php",
  "type": "filter",
  "description": "Filters the install action links for a theme in the Install Themes list table."
 },
 {
  "name": "theme_locale",
  "file": "wp-includes\/l10n.php",
  "type": "filter",
  "description": "Filters a theme's locale."
 },
 {
  "name": "theme_mod_{$name}",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the theme modification, or 'theme_mod', value."
 },
 {
  "name": "theme_root",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the absolute path to the themes directory."
 },
 {
  "name": "theme_root_uri",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the URI for themes directory."
 },
 {
  "name": "theme_row_meta",
  "file": "wp-admin\/includes\/class-wp-ms-themes-list-table.php",
  "type": "filter",
  "description": "Filters the array of row meta for each theme in the Multisite themes list table."
 },
 {
  "name": "theme_scandir_exclusions",
  "file": "wp-includes\/class-wp-theme.php",
  "type": "filter",
  "description": "Filters the array of excluded directories and files while scanning theme folder."
 },
 {
  "name": "theme_templates",
  "file": "wp-includes\/class-wp-theme.php",
  "type": "filter",
  "description": "Filters list of page templates for a theme."
 },
 {
  "name": "theme_{$post_type}_templates",
  "file": "wp-includes\/class-wp-theme.php",
  "type": "filter",
  "description": "Filters list of page templates for a theme."
 },
 {
  "name": "themes_api",
  "file": "wp-admin\/includes\/theme.php",
  "type": "filter",
  "description": "Filters whether to override the WordPress.org Themes API."
 },
 {
  "name": "themes_api_args",
  "file": "wp-admin\/includes\/theme.php",
  "type": "filter",
  "description": "Filters arguments used to query for installer pages from the WordPress.org Themes API."
 },
 {
  "name": "themes_api_result",
  "file": "wp-admin\/includes\/theme.php",
  "type": "filter",
  "description": "Filters the returned WordPress.org Themes API response."
 },
 {
  "name": "themes_auto_update_enabled",
  "file": "wp-admin\/includes\/update.php",
  "type": "filter",
  "description": "Filters whether themes auto-update is enabled."
 },
 {
  "name": "themes_update_check_locales",
  "file": "wp-includes\/update.php",
  "type": "filter",
  "description": "Filters the locales requested for theme translations."
 },
 {
  "name": "thread_comments_depth_max",
  "file": "wp-admin\/options-discussion.php",
  "type": "filter",
  "description": "Filters the maximum depth of threaded\/nested comments."
 },
 {
  "name": "time_formats",
  "file": "wp-admin\/options-general.php",
  "type": "filter",
  "description": "Filters the default time formats."
 },
 {
  "name": "tiny_mce_before_init",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the TinyMCE config before init."
 },
 {
  "name": "tiny_mce_plugins",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the list of default TinyMCE plugins."
 },
 {
  "name": "trackback_url",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the returned trackback URL."
 },
 {
  "name": "transient_{$transient}",
  "file": "wp-includes\/option.php",
  "type": "filter",
  "description": "Filters an existing transient's value."
 },
 {
  "name": "translations_api",
  "file": "wp-admin\/includes\/translation-install.php",
  "type": "filter",
  "description": "Allows a plugin to override the WordPress.org Translation Installation API entirely."
 },
 {
  "name": "translations_api_result",
  "file": "wp-admin\/includes\/translation-install.php",
  "type": "filter",
  "description": "Filters the Translation Installation API response results."
 },
 {
  "name": "type_url_form_media",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the insert media from URL form HTML."
 },
 {
  "name": "unzip_file_use_ziparchive",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters whether to use ZipArchive to unzip archives."
 },
 {
  "name": "update_attached_file",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the path to the attached file to update."
 },
 {
  "name": "update_bulk_plugins_complete_actions",
  "file": "wp-admin\/includes\/class-bulk-plugin-upgrader-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following bulk plugin updates."
 },
 {
  "name": "update_bulk_theme_complete_actions",
  "file": "wp-admin\/includes\/class-bulk-theme-upgrader-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following bulk theme updates."
 },
 {
  "name": "update_custom_css_data",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the `css` (`post_content`) and `preprocessed` (`post_content_filtered`) args for a `custom_css` post being updated."
 },
 {
  "name": "update_feedback",
  "file": "wp-admin\/includes\/update-core.php",
  "type": "filter",
  "description": "Filters feedback messages displayed during the core update process."
 },
 {
  "name": "update_footer",
  "file": "wp-admin\/admin-footer.php",
  "type": "filter",
  "description": "Filters the version\/update text displayed in the admin footer."
 },
 {
  "name": "update_plugin_complete_actions",
  "file": "wp-admin\/includes\/class-plugin-upgrader-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following a single plugin update."
 },
 {
  "name": "update_plugins_{$hostname}",
  "file": "wp-includes\/update.php",
  "type": "filter",
  "description": "Filters the update response for a given plugin hostname."
 },
 {
  "name": "update_post_term_count_statuses",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the post statuses for updating the term count."
 },
 {
  "name": "update_right_now_text",
  "file": "wp-admin\/includes\/update.php",
  "type": "filter",
  "description": "Filters the text displayed in the 'At a Glance' dashboard widget."
 },
 {
  "name": "update_theme_complete_actions",
  "file": "wp-admin\/includes\/class-theme-upgrader-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following a single theme update."
 },
 {
  "name": "update_translations_complete_actions",
  "file": "wp-admin\/includes\/class-language-pack-upgrader-skin.php",
  "type": "filter",
  "description": "Filters the list of action links available following a translations update."
 },
 {
  "name": "update_welcome_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the content of the welcome email sent to the site administrator after site activation."
 },
 {
  "name": "update_welcome_subject",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the subject of the welcome email sent to the site administrator after site activation."
 },
 {
  "name": "update_welcome_user_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the content of the welcome email after user activation."
 },
 {
  "name": "update_welcome_user_subject",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the subject of the welcome email after user activation."
 },
 {
  "name": "update_{$meta_type}_metadata",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits updating metadata of a specific type."
 },
 {
  "name": "update_{$meta_type}_metadata_by_mid",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits updating metadata of a specific type by meta ID."
 },
 {
  "name": "update_{$meta_type}_metadata_cache",
  "file": "wp-includes\/meta.php",
  "type": "filter",
  "description": "Short-circuits updating the metadata cache of a specific type."
 },
 {
  "name": "upgrader_clear_destination",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "filter",
  "description": "Filters whether the upgrader cleared the destination."
 },
 {
  "name": "upgrader_install_package_result",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "filter",
  "description": "Filters the result of WP_Upgrader::install_package()."
 },
 {
  "name": "upgrader_package_options",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "filter",
  "description": "Filters the package options before running an update."
 },
 {
  "name": "upgrader_post_install",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "filter",
  "description": "Filters the installation response after the installation has finished."
 },
 {
  "name": "upgrader_pre_download",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "filter",
  "description": "Filters whether to return the package."
 },
 {
  "name": "upgrader_pre_install",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "filter",
  "description": "Filters the install response before the installation has started."
 },
 {
  "name": "upgrader_source_selection",
  "file": "wp-admin\/includes\/class-wp-upgrader.php",
  "type": "filter",
  "description": "Filters the source file location for the upgrade package."
 },
 {
  "name": "upload_dir",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the uploads directory data."
 },
 {
  "name": "upload_mimes",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters list of allowed mime types and file extensions."
 },
 {
  "name": "upload_per_page",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters the number of items to list per page when listing media items."
 },
 {
  "name": "upload_post_params",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the media upload post parameters."
 },
 {
  "name": "upload_size_limit",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the maximum upload size allowed in php.ini."
 },
 {
  "name": "url_to_postid",
  "file": "wp-includes\/rewrite.php",
  "type": "filter",
  "description": "Filters the URL to derive the post ID from."
 },
 {
  "name": "use_block_editor_for_post",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post is able to be edited in the block editor."
 },
 {
  "name": "use_block_editor_for_post_type",
  "file": "wp-admin\/includes\/post.php",
  "type": "filter",
  "description": "Filters whether a post is able to be edited in the block editor."
 },
 {
  "name": "use_curl_transport",
  "file": "wp-includes\/class-wp-http-curl.php",
  "type": "filter",
  "description": "Filters whether cURL can be used as a transport for retrieving a URL."
 },
 {
  "name": "use_default_gallery_style",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether to print default gallery styles."
 },
 {
  "name": "use_google_chrome_frame",
  "file": "wp-includes\/vars.php",
  "type": "filter",
  "description": "Filters whether Google Chrome Frame should be used, if available."
 },
 {
  "name": "use_streams_transport",
  "file": "wp-includes\/class-wp-http-streams.php",
  "type": "filter",
  "description": "Filters whether streams can be used as a transport for retrieving a URL."
 },
 {
  "name": "use_widgets_block_editor",
  "file": "wp-includes\/widgets.php",
  "type": "filter",
  "description": "Filters whether to use the block editor to manage widgets."
 },
 {
  "name": "user_admin_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the user admin URL for the current user."
 },
 {
  "name": "user_can_richedit",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters whether the user can access the visual editor."
 },
 {
  "name": "user_contactmethods",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the user contact methods."
 },
 {
  "name": "user_dashboard_url",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the dashboard URL for a user."
 },
 {
  "name": "user_erasure_fulfillment_email_content",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the body of the data erasure fulfillment notification."
 },
 {
  "name": "user_erasure_fulfillment_email_headers",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the headers of the data erasure fulfillment notification."
 },
 {
  "name": "user_erasure_fulfillment_email_subject",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the subject of the email sent when an erasure request is completed."
 },
 {
  "name": "user_erasure_fulfillment_email_to",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the recipient of the data erasure fulfillment notification."
 },
 {
  "name": "user_has_cap",
  "file": "wp-includes\/class-wp-user.php",
  "type": "filter",
  "description": "Dynamically filter a user's capabilities."
 },
 {
  "name": "user_profile_picture_description",
  "file": "wp-admin\/user-edit.php",
  "type": "filter",
  "description": "Filters the user profile picture description displayed under the Gravatar."
 },
 {
  "name": "user_registration_email",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the email address of a user being registered."
 },
 {
  "name": "user_request_action_confirmed_message",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the message displayed to a user when they confirm a data request."
 },
 {
  "name": "user_request_action_description",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the user action description."
 },
 {
  "name": "user_request_action_email_content",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the text of the email sent when an account action is attempted."
 },
 {
  "name": "user_request_action_email_headers",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the headers of the email sent when an account action is attempted."
 },
 {
  "name": "user_request_action_email_subject",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the subject of the email sent when an account action is attempted."
 },
 {
  "name": "user_request_confirmed_email_content",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the body of the user request confirmation email."
 },
 {
  "name": "user_request_confirmed_email_headers",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the headers of the user request confirmation email."
 },
 {
  "name": "user_request_confirmed_email_subject",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the subject of the user request confirmation email."
 },
 {
  "name": "user_request_confirmed_email_to",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the recipient of the data request confirmation notification."
 },
 {
  "name": "user_request_key_expiration",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the expiration time of confirm keys."
 },
 {
  "name": "user_row_actions",
  "file": "wp-admin\/includes\/class-wp-users-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed under each user in the Users list table."
 },
 {
  "name": "user_search_columns",
  "file": "wp-includes\/class-wp-user-query.php",
  "type": "filter",
  "description": "Filters the columns to search in a WP_User_Query search."
 },
 {
  "name": "user_trailingslashit",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the trailing-slashed string, depending on whether the site is set to use trailing slashes."
 },
 {
  "name": "user_{$field}",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the value of a user field in a standard context."
 },
 {
  "name": "user_{$name}_label",
  "file": "wp-admin\/user-edit.php",
  "type": "filter",
  "description": "Filters a user contactmethod label."
 },
 {
  "name": "username_exists",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether the given username exists."
 },
 {
  "name": "users_have_additional_content",
  "file": "wp-admin\/users.php",
  "type": "filter",
  "description": "Filters whether the users being deleted have additional content associated with them outside of the `post_author` and `link_owner` relationships."
 },
 {
  "name": "users_list_table_query_args",
  "file": "wp-admin\/includes\/class-wp-users-list-table.php",
  "type": "filter",
  "description": "Filters the query arguments used to retrieve users for the current users list table."
 },
 {
  "name": "users_pre_query",
  "file": "wp-includes\/class-wp-user-query.php",
  "type": "filter_reference",
  "description": "Filters the users array before the query takes place."
 },
 {
  "name": "validate_current_theme",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters whether to validate the active theme."
 },
 {
  "name": "validate_username",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether the provided username is valid."
 },
 {
  "name": "view_mode_post_types",
  "file": "wp-admin\/includes\/class-wp-screen.php",
  "type": "filter",
  "description": "Filters the post types that have different view mode options."
 },
 {
  "name": "views_{$this->screen->id}",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters the list of available list table views."
 },
 {
  "name": "walker_nav_menu_start_el",
  "file": "wp-includes\/class-walker-nav-menu.php",
  "type": "filter",
  "description": "Filters a menu item's starting output."
 },
 {
  "name": "widget_archives_args",
  "file": "wp-includes\/widgets\/class-wp-widget-archives.php",
  "type": "filter",
  "description": "Filters the arguments for the Archives widget."
 },
 {
  "name": "widget_archives_dropdown_args",
  "file": "wp-includes\/widgets\/class-wp-widget-archives.php",
  "type": "filter",
  "description": "Filters the arguments for the Archives widget drop-down."
 },
 {
  "name": "widget_block_content",
  "file": "wp-includes\/widgets\/class-wp-widget-block.php",
  "type": "filter",
  "description": "Filters the content of the Block widget before output."
 },
 {
  "name": "widget_block_dynamic_classname",
  "file": "wp-includes\/widgets\/class-wp-widget-block.php",
  "type": "filter",
  "description": "The classname used in the block widget's container HTML."
 },
 {
  "name": "widget_categories_args",
  "file": "wp-includes\/widgets\/class-wp-widget-categories.php",
  "type": "filter",
  "description": "Filters the arguments for the Categories widget."
 },
 {
  "name": "widget_categories_dropdown_args",
  "file": "wp-includes\/widgets\/class-wp-widget-categories.php",
  "type": "filter",
  "description": "Filters the arguments for the Categories widget drop-down."
 },
 {
  "name": "widget_comments_args",
  "file": "wp-includes\/widgets\/class-wp-widget-recent-comments.php",
  "type": "filter",
  "description": "Filters the arguments for the Recent Comments widget."
 },
 {
  "name": "widget_custom_html_content",
  "file": "wp-includes\/widgets\/class-wp-widget-custom-html.php",
  "type": "filter",
  "description": "Filters the content of the Custom HTML widget."
 },
 {
  "name": "widget_customizer_setting_args",
  "file": "wp-includes\/class-wp-customize-widgets.php",
  "type": "filter",
  "description": "Filters the common arguments supplied when constructing a Customizer setting."
 },
 {
  "name": "widget_display_callback",
  "file": "wp-includes\/class-wp-widget.php",
  "type": "filter",
  "description": "Filters the settings for a particular widget instance."
 },
 {
  "name": "widget_form_callback",
  "file": "wp-includes\/class-wp-widget.php",
  "type": "filter",
  "description": "Filters the widget instance's settings before displaying the control form."
 },
 {
  "name": "widget_links_args",
  "file": "wp-includes\/widgets\/class-wp-widget-links.php",
  "type": "filter",
  "description": "Filters the arguments for the Links widget."
 },
 {
  "name": "widget_meta_poweredby",
  "file": "wp-includes\/widgets\/class-wp-widget-meta.php",
  "type": "filter",
  "description": "Filters the \"WordPress.org\" list item HTML in the Meta widget."
 },
 {
  "name": "widget_nav_menu_args",
  "file": "wp-includes\/widgets\/class-wp-nav-menu-widget.php",
  "type": "filter",
  "description": "Filters the arguments for the Navigation Menu widget."
 },
 {
  "name": "widget_pages_args",
  "file": "wp-includes\/widgets\/class-wp-widget-pages.php",
  "type": "filter",
  "description": "Filters the arguments for the Pages widget."
 },
 {
  "name": "widget_posts_args",
  "file": "wp-includes\/widgets\/class-wp-widget-recent-posts.php",
  "type": "filter",
  "description": "Filters the arguments for the Recent Posts widget."
 },
 {
  "name": "widget_tag_cloud_args",
  "file": "wp-includes\/widgets\/class-wp-widget-tag-cloud.php",
  "type": "filter",
  "description": "Filters the taxonomy used in the Tag Cloud widget."
 },
 {
  "name": "widget_text",
  "file": "wp-includes\/widgets\/class-wp-widget-text.php",
  "type": "filter",
  "description": "Filters the content of the Text widget."
 },
 {
  "name": "widget_text_content",
  "file": "wp-includes\/widgets\/class-wp-widget-text.php",
  "type": "filter",
  "description": "Filters the content of the Text widget to apply changes expected from the visual (TinyMCE) editor."
 },
 {
  "name": "widget_title",
  "file": "wp-includes\/widgets\/class-wp-widget-pages.php",
  "type": "filter",
  "description": "Filters the widget title."
 },
 {
  "name": "widget_types_to_hide_from_legacy_widget_block",
  "file": "wp-includes\/block-editor.php",
  "type": "filter",
  "description": "Filters the list of widget-type IDs that should **not** be offered by the Legacy Widget block."
 },
 {
  "name": "widget_update_callback",
  "file": "wp-includes\/class-wp-widget.php",
  "type": "filter",
  "description": "Filters a widget's settings before saving."
 },
 {
  "name": "widget_{$this->id_base}_instance",
  "file": "wp-includes\/widgets\/class-wp-widget-media.php",
  "type": "filter",
  "description": "Filters the media widget instance prior to rendering the media."
 },
 {
  "name": "widget_{$this->id_base}_instance_schema",
  "file": "wp-includes\/widgets\/class-wp-widget-media.php",
  "type": "filter",
  "description": "Filters the media widget instance schema to add additional properties."
 },
 {
  "name": "wp_admin_bar_class",
  "file": "wp-includes\/admin-bar.php",
  "type": "filter",
  "description": "Filters the admin bar class to instantiate."
 },
 {
  "name": "wp_admin_css",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the stylesheet link to the specified CSS file."
 },
 {
  "name": "wp_admin_css_uri",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the URI of a WordPress admin CSS file."
 },
 {
  "name": "wp_ajax_cropped_attachment_id",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the attachment ID for a cropped image."
 },
 {
  "name": "wp_ajax_cropped_attachment_metadata",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the cropped image attachment metadata."
 },
 {
  "name": "wp_anonymize_comment",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters whether to anonymize the comment."
 },
 {
  "name": "wp_audio_embed_handler",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the audio embed handler callback."
 },
 {
  "name": "wp_audio_extensions",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the list of supported audio formats."
 },
 {
  "name": "wp_audio_shortcode",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the audio shortcode output."
 },
 {
  "name": "wp_audio_shortcode_class",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the class attribute for the audio shortcode output container."
 },
 {
  "name": "wp_audio_shortcode_library",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the media library used for the audio shortcode."
 },
 {
  "name": "wp_audio_shortcode_override",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the default audio shortcode output."
 },
 {
  "name": "wp_auth_check_load",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to load the authentication check."
 },
 {
  "name": "wp_auth_check_same_domain",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether the authentication check originated at the same domain."
 },
 {
  "name": "wp_authenticate_user",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether the given user can be authenticated with the provided $password."
 },
 {
  "name": "wp_cache_themes_persistently",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters whether to get the cache of the registered theme directories."
 },
 {
  "name": "wp_calculate_image_sizes",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the output of 'wp_calculate_image_sizes()'."
 },
 {
  "name": "wp_calculate_image_srcset",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters an image's 'srcset' sources."
 },
 {
  "name": "wp_calculate_image_srcset_meta",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Let plugins pre-filter the image meta to be able to fix inconsistencies in the stored data."
 },
 {
  "name": "wp_check_filetype_and_ext",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the \"real\" file type of the given file."
 },
 {
  "name": "wp_check_post_lock_window",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the post lock window duration."
 },
 {
  "name": "wp_checkdate",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether the given date is valid for the Gregorian calendar."
 },
 {
  "name": "wp_code_editor_settings",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters settings that are passed into the code editor."
 },
 {
  "name": "wp_comment_reply",
  "file": "wp-admin\/includes\/template.php",
  "type": "filter",
  "description": "Filters the in-line comment reply-to form output in the Comments list table."
 },
 {
  "name": "wp_constrain_dimensions",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters dimensions to constrain down-sampled images to."
 },
 {
  "name": "wp_count_attachments",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Modify returned attachment counts by mime type."
 },
 {
  "name": "wp_count_comments",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comments count for a given post or the whole site."
 },
 {
  "name": "wp_count_posts",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Modify returned post counts by status for the current post type."
 },
 {
  "name": "wp_dashboard_widgets",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the list of widgets to load for the admin dashboard."
 },
 {
  "name": "wp_date",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the date formatted based on the locale."
 },
 {
  "name": "wp_default_editor",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters which editor should be displayed by default."
 },
 {
  "name": "wp_delete_file",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the path of the file to delete."
 },
 {
  "name": "wp_die_ajax_handler",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the callback for killing WordPress execution for Ajax requests."
 },
 {
  "name": "wp_die_handler",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the callback for killing WordPress execution for all non-Ajax, non-JSON, non-XML requests."
 },
 {
  "name": "wp_die_json_handler",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the callback for killing WordPress execution for JSON requests."
 },
 {
  "name": "wp_die_jsonp_handler",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the callback for killing WordPress execution for JSONP REST requests."
 },
 {
  "name": "wp_die_xml_handler",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the callback for killing WordPress execution for XML requests."
 },
 {
  "name": "wp_die_xmlrpc_handler",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the callback for killing WordPress execution for XML-RPC requests."
 },
 {
  "name": "wp_direct_php_update_url",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the URL for directly updating the PHP version the site is running on from the host."
 },
 {
  "name": "wp_direct_update_https_url",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the URL for directly updating the PHP version the site is running on from the host."
 },
 {
  "name": "wp_doing_ajax",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether the current request is a WordPress Ajax request."
 },
 {
  "name": "wp_doing_cron",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether the current request is a WordPress cron request."
 },
 {
  "name": "wp_dropdown_cats",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the taxonomy drop-down output."
 },
 {
  "name": "wp_dropdown_pages",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the HTML output of a list of pages as a drop down."
 },
 {
  "name": "wp_dropdown_users",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the wp_dropdown_users() HTML output."
 },
 {
  "name": "wp_dropdown_users_args",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters the query arguments for the list of users in the dropdown."
 },
 {
  "name": "wp_edit_nav_menu_walker",
  "file": "wp-admin\/includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters the Walker class used when adding nav menu items."
 },
 {
  "name": "wp_edited_image_metadata",
  "file": "wp-includes\/rest-api\/endpoints\/class-wp-rest-attachments-controller.php",
  "type": "filter",
  "description": "Filters the meta data for the new image created by editing an existing image."
 },
 {
  "name": "wp_editor_expand",
  "file": "wp-admin\/edit-form-advanced.php",
  "type": "filter",
  "description": "Filters whether to enable the 'expand' functionality in the post editor."
 },
 {
  "name": "wp_editor_set_quality",
  "file": "wp-includes\/class-wp-image-editor.php",
  "type": "filter",
  "description": "Filters the default image compression quality setting."
 },
 {
  "name": "wp_editor_settings",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the wp_editor() settings."
 },
 {
  "name": "wp_embed_handler_audio",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the audio embed output."
 },
 {
  "name": "wp_embed_handler_video",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the video embed output."
 },
 {
  "name": "wp_embed_handler_youtube",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the YoutTube embed output."
 },
 {
  "name": "wp_fatal_error_handler_enabled",
  "file": "wp-includes\/error-protection.php",
  "type": "filter",
  "description": "Filters whether the fatal error handler is enabled."
 },
 {
  "name": "wp_feed_cache_transient_lifetime",
  "file": "wp-includes\/class-wp-feed-cache-transient.php",
  "type": "filter",
  "description": "Filters the transient lifetime of the feed cache."
 },
 {
  "name": "wp_generate_attachment_metadata",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the generated attachment meta data."
 },
 {
  "name": "wp_generate_tag_cloud",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the generated output of a tag cloud."
 },
 {
  "name": "wp_generate_tag_cloud_data",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the data used to generate the tag cloud."
 },
 {
  "name": "wp_generator_type",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the output of the XHTML generator tag."
 },
 {
  "name": "wp_get_attachment_caption",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the attachment caption."
 },
 {
  "name": "wp_get_attachment_id3_keys",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the editable list of keys to look up data from an attachment's metadata."
 },
 {
  "name": "wp_get_attachment_image",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "HTML img element representing an image attachment."
 },
 {
  "name": "wp_get_attachment_image_attributes",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the list of attachment image attributes."
 },
 {
  "name": "wp_get_attachment_image_src",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the attachment image source result."
 },
 {
  "name": "wp_get_attachment_link",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters a retrieved attachment page link."
 },
 {
  "name": "wp_get_attachment_metadata",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the attachment meta data."
 },
 {
  "name": "wp_get_attachment_thumb_file",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the attachment thumbnail file path."
 },
 {
  "name": "wp_get_attachment_thumb_url",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the attachment thumbnail URL."
 },
 {
  "name": "wp_get_attachment_url",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the attachment URL."
 },
 {
  "name": "wp_get_comment_fields_max_lengths",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the lengths for the comment form fields."
 },
 {
  "name": "wp_get_current_commenter",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the current commenter's name, email, and URL."
 },
 {
  "name": "wp_get_custom_css",
  "file": "wp-includes\/theme.php",
  "type": "filter",
  "description": "Filters the Custom CSS Output into the <head>."
 },
 {
  "name": "wp_get_missing_image_subsizes",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the array of missing image sub-sizes for an uploaded image."
 },
 {
  "name": "wp_get_nav_menu_items",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters the navigation menu items being returned."
 },
 {
  "name": "wp_get_nav_menu_name",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters the navigation menu name being returned."
 },
 {
  "name": "wp_get_nav_menu_object",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters the nav_menu term retrieved for wp_get_nav_menu_object()."
 },
 {
  "name": "wp_get_nav_menus",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters the navigation menu objects being returned."
 },
 {
  "name": "wp_get_object_terms",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the terms for a given object or objects."
 },
 {
  "name": "wp_get_object_terms_args",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters arguments for retrieving object terms."
 },
 {
  "name": "wp_get_original_image_path",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the path to the original image."
 },
 {
  "name": "wp_get_original_image_url",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the URL to the original attachment image."
 },
 {
  "name": "wp_get_revision_ui_diff",
  "file": "wp-admin\/includes\/revision.php",
  "type": "filter",
  "description": "Filters the fields displayed in the post revision diff UI."
 },
 {
  "name": "wp_get_update_data",
  "file": "wp-includes\/update.php",
  "type": "filter",
  "description": "Filters the returned array of update data for plugins, themes, and WordPress core."
 },
 {
  "name": "wp_handle_upload",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the data array for the uploaded file."
 },
 {
  "name": "wp_header_image_attachment_metadata",
  "file": "wp-admin\/includes\/class-custom-image-header.php",
  "type": "filter",
  "description": "Filters the header image attachment metadata."
 },
 {
  "name": "wp_headers",
  "file": "wp-includes\/class-wp.php",
  "type": "filter",
  "description": "Filters the HTTP headers before they're sent to the browser."
 },
 {
  "name": "wp_http_accept_encoding",
  "file": "wp-includes\/class-wp-http-encoding.php",
  "type": "filter",
  "description": "Filters the allowed encoding types."
 },
 {
  "name": "wp_http_cookie_value",
  "file": "wp-includes\/class-wp-http-cookie.php",
  "type": "filter",
  "description": "Filters the header-encoded cookie value."
 },
 {
  "name": "wp_http_ixr_client_headers",
  "file": "wp-includes\/class-wp-http-ixr-client.php",
  "type": "filter",
  "description": "Filters the headers collection to be sent to the XML-RPC server."
 },
 {
  "name": "wp_iframe_tag_add_loading_attr",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the `loading` attribute value to add to an iframe. Default `lazy`."
 },
 {
  "name": "wp_image_editor_before_change",
  "file": "wp-admin\/includes\/image-edit.php",
  "type": "filter",
  "description": "Filters the WP_Image_Editor instance before applying changes to the image."
 },
 {
  "name": "wp_image_editors",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the list of image editing library classes."
 },
 {
  "name": "wp_image_file_matches_image_meta",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether an image path or URI matches image meta."
 },
 {
  "name": "wp_image_maybe_exif_rotate",
  "file": "wp-includes\/class-wp-image-editor.php",
  "type": "filter",
  "description": "Filters the `$orientation` value to correct it before rotating or to prevent rotating the image."
 },
 {
  "name": "wp_image_resize_identical_dimensions",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether to proceed with making an image sub-size with identical dimensions with the original\/source image. Differences of 1px may be due to rounding and are ignored."
 },
 {
  "name": "wp_image_src_get_dimensions",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the 'wp_image_src_get_dimensions' value."
 },
 {
  "name": "wp_img_tag_add_loading_attr",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the `loading` attribute value to add to an image. Default `lazy`."
 },
 {
  "name": "wp_img_tag_add_srcset_and_sizes_attr",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether to add the `srcset` and `sizes` HTML attributes to the img tag. Default `true`."
 },
 {
  "name": "wp_img_tag_add_width_and_height_attr",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether to add the missing `width` and `height` HTML attributes to the img tag. Default `true`."
 },
 {
  "name": "wp_initialize_site_args",
  "file": "wp-includes\/ms-site.php",
  "type": "filter",
  "description": "Filters the arguments for initializing a site."
 },
 {
  "name": "wp_inline_script_attributes",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters attributes to be added to a script tag."
 },
 {
  "name": "wp_insert_attachment_data",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters attachment post data before it is updated in or added to the database."
 },
 {
  "name": "wp_insert_post_data",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters slashed post data just before it is inserted into the database."
 },
 {
  "name": "wp_insert_post_empty_content",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether the post should be considered \"empty\"."
 },
 {
  "name": "wp_insert_post_parent",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the post parent -- used to check for and prevent hierarchy loops."
 },
 {
  "name": "wp_insert_term_data",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters term data before it is inserted into the database."
 },
 {
  "name": "wp_insert_term_duplicate_term_check",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the duplicate term check that takes place during term creation."
 },
 {
  "name": "wp_installed_email",
  "file": "wp-admin\/includes\/upgrade.php",
  "type": "filter",
  "description": "Filters the contents of the email sent to the site administrator when WordPress is installed."
 },
 {
  "name": "wp_is_application_passwords_available",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether Application Passwords is available."
 },
 {
  "name": "wp_is_application_passwords_available_for_user",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters whether Application Passwords is available for a specific user."
 },
 {
  "name": "wp_is_comment_flood",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters whether a comment is part of a comment flood."
 },
 {
  "name": "wp_is_large_network",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether the network is considered large."
 },
 {
  "name": "wp_is_mobile",
  "file": "wp-includes\/vars.php",
  "type": "filter",
  "description": "Filters whether the request should be treated as coming from a mobile device or not."
 },
 {
  "name": "wp_is_php_version_acceptable",
  "file": "wp-admin\/includes\/misc.php",
  "type": "filter",
  "description": "Filters whether the active PHP version is considered acceptable by WordPress."
 },
 {
  "name": "wp_is_site_protected_by_basic_auth",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether a site is protected by HTTP Basic Auth."
 },
 {
  "name": "wp_kses_allowed_html",
  "file": "wp-includes\/kses.php",
  "type": "filter",
  "description": "Filters the HTML tags that are allowed for a given context."
 },
 {
  "name": "wp_kses_uri_attributes",
  "file": "wp-includes\/kses.php",
  "type": "filter",
  "description": "Filters the list of attributes that are required to contain a URL."
 },
 {
  "name": "wp_lazy_loading_enabled",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters whether to add the `loading` attribute to the specified tag in the specified context."
 },
 {
  "name": "wp_link_pages",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the HTML output of page links for paginated posts."
 },
 {
  "name": "wp_link_pages_args",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the arguments used in retrieving page links for paginated posts."
 },
 {
  "name": "wp_link_pages_link",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the HTML output of individual page number links."
 },
 {
  "name": "wp_link_query",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the link query results."
 },
 {
  "name": "wp_link_query_args",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters the link query arguments."
 },
 {
  "name": "wp_list_bookmarks",
  "file": "wp-includes\/bookmark-template.php",
  "type": "filter",
  "description": "Filters the bookmarks list before it is echoed or returned."
 },
 {
  "name": "wp_list_categories",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the HTML output of a taxonomy list."
 },
 {
  "name": "wp_list_comments_args",
  "file": "wp-includes\/comment-template.php",
  "type": "filter",
  "description": "Filters the arguments used in retrieving the comment list."
 },
 {
  "name": "wp_list_pages",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the HTML output of the pages to list."
 },
 {
  "name": "wp_list_pages_excludes",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the array of pages to exclude from the pages list."
 },
 {
  "name": "wp_list_table_show_post_checkbox",
  "file": "wp-admin\/includes\/class-wp-posts-list-table.php",
  "type": "filter",
  "description": "Filters whether to show the bulk edit checkbox for a post in its list table."
 },
 {
  "name": "wp_login_errors",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the login page errors."
 },
 {
  "name": "wp_mail",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the wp_mail() arguments."
 },
 {
  "name": "wp_mail_charset",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the default wp_mail() charset."
 },
 {
  "name": "wp_mail_content_type",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the wp_mail() content type."
 },
 {
  "name": "wp_mail_from",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the email address to send from."
 },
 {
  "name": "wp_mail_from_name",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the name to associate with the \"from\" email address."
 },
 {
  "name": "wp_mail_original_content",
  "file": "wp-mail.php",
  "type": "filter",
  "description": "Filters the original content of the email."
 },
 {
  "name": "wp_mce_translation",
  "file": "wp-includes\/class-wp-editor.php",
  "type": "filter",
  "description": "Filters translated strings prepared for TinyMCE."
 },
 {
  "name": "wp_mediaelement_fallback",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the Mediaelement fallback output for no-JS."
 },
 {
  "name": "wp_mime_type_icon",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the mime type icon."
 },
 {
  "name": "wp_nav_locations_listed_per_menu",
  "file": "wp-admin\/nav-menus.php",
  "type": "filter",
  "description": "Filters the number of locations listed per menu in the drop-down select."
 },
 {
  "name": "wp_nav_menu",
  "file": "wp-includes\/nav-menu-template.php",
  "type": "filter",
  "description": "Filters the HTML content for navigation menus."
 },
 {
  "name": "wp_nav_menu_args",
  "file": "wp-includes\/nav-menu-template.php",
  "type": "filter",
  "description": "Filters the arguments used to display a navigation menu."
 },
 {
  "name": "wp_nav_menu_container_allowedtags",
  "file": "wp-includes\/nav-menu-template.php",
  "type": "filter",
  "description": "Filters the list of HTML tags that are valid for use as menu containers."
 },
 {
  "name": "wp_nav_menu_items",
  "file": "wp-includes\/nav-menu-template.php",
  "type": "filter",
  "description": "Filters the HTML list content for navigation menus."
 },
 {
  "name": "wp_nav_menu_objects",
  "file": "wp-includes\/nav-menu-template.php",
  "type": "filter",
  "description": "Filters the sorted list of menu item objects before generating the menu's HTML."
 },
 {
  "name": "wp_nav_menu_{$menu->slug}_items",
  "file": "wp-includes\/nav-menu-template.php",
  "type": "filter",
  "description": "Filters the HTML list content for a specific navigation menu."
 },
 {
  "name": "wp_network_dashboard_widgets",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the list of widgets to load for the Network Admin dashboard."
 },
 {
  "name": "wp_new_user_notification_email",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the contents of the new user notification email sent to the new user."
 },
 {
  "name": "wp_new_user_notification_email_admin",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the contents of the new user notification email sent to the site admin."
 },
 {
  "name": "wp_normalize_site_data",
  "file": "wp-includes\/ms-site.php",
  "type": "filter",
  "description": "Filters passed site data in order to normalize it."
 },
 {
  "name": "wp_omit_loading_attr_threshold",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the threshold for how many of the first content media elements to not lazy-load."
 },
 {
  "name": "wp_opcache_invalidate_file",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters whether to invalidate a file from the opcode cache."
 },
 {
  "name": "wp_page_menu",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the HTML output of a page-based menu."
 },
 {
  "name": "wp_page_menu_args",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the arguments used to generate a page-based menu."
 },
 {
  "name": "wp_parse_str",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the array of variables derived from a parsed string."
 },
 {
  "name": "wp_password_change_notification_email",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the contents of the password change notification email sent to the site admin."
 },
 {
  "name": "wp_php_error_args",
  "file": "wp-includes\/class-wp-fatal-error-handler.php",
  "type": "filter",
  "description": "Filters the arguments passed to {@see wp_die()} for the default PHP error template."
 },
 {
  "name": "wp_php_error_message",
  "file": "wp-includes\/class-wp-fatal-error-handler.php",
  "type": "filter",
  "description": "Filters the message that the default PHP error template displays."
 },
 {
  "name": "wp_post_revision_title_expanded",
  "file": "wp-includes\/post-template.php",
  "type": "filter",
  "description": "Filters the formatted author and date for a revision."
 },
 {
  "name": "wp_pre_insert_user_data",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filters user data before the record is created or updated."
 },
 {
  "name": "wp_prepare_attachment_for_js",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the attachment data prepared for JavaScript."
 },
 {
  "name": "wp_prepare_revision_for_js",
  "file": "wp-admin\/includes\/revision.php",
  "type": "filter",
  "description": "Filters the array of revisions used on the revisions screen."
 },
 {
  "name": "wp_prepare_themes_for_js",
  "file": "wp-admin\/includes\/theme.php",
  "type": "filter",
  "description": "Filters the themes prepared for JavaScript, for themes.php."
 },
 {
  "name": "wp_privacy_additional_user_profile_data",
  "file": "wp-includes\/user.php",
  "type": "filter",
  "description": "Filter to extend the user's profile data for the privacy exporter."
 },
 {
  "name": "wp_privacy_anonymize_data",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the anonymous data for each type."
 },
 {
  "name": "wp_privacy_export_expiration",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the lifetime, in seconds, of a personal data export file."
 },
 {
  "name": "wp_privacy_exports_dir",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the directory used to store personal data export files."
 },
 {
  "name": "wp_privacy_exports_url",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the URL of the directory used to store personal data export files."
 },
 {
  "name": "wp_privacy_personal_data_email_content",
  "file": "wp-admin\/includes\/privacy-tools.php",
  "type": "filter",
  "description": "Filters the text of the email sent with a personal data export file."
 },
 {
  "name": "wp_privacy_personal_data_email_headers",
  "file": "wp-admin\/includes\/privacy-tools.php",
  "type": "filter",
  "description": "Filters the headers of the email sent with a personal data export file."
 },
 {
  "name": "wp_privacy_personal_data_email_subject",
  "file": "wp-admin\/includes\/privacy-tools.php",
  "type": "filter",
  "description": "Filters the subject of the email sent when an export request is completed."
 },
 {
  "name": "wp_privacy_personal_data_email_to",
  "file": "wp-admin\/includes\/privacy-tools.php",
  "type": "filter",
  "description": "Filters the recipient of the personal data export email notification."
 },
 {
  "name": "wp_privacy_personal_data_erasers",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the array of personal data eraser callbacks."
 },
 {
  "name": "wp_privacy_personal_data_erasure_page",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters a page of personal data eraser data."
 },
 {
  "name": "wp_privacy_personal_data_export_page",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters a page of personal data exporter data. Used to build the export report."
 },
 {
  "name": "wp_privacy_personal_data_exporters",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the array of exporter callbacks."
 },
 {
  "name": "wp_protected_ajax_actions",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters the array of protected Ajax actions."
 },
 {
  "name": "wp_query_search_exclusion_prefix",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter",
  "description": "Filters the prefix that indicates that a search term should be excluded from results."
 },
 {
  "name": "wp_read_image_metadata",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the array of meta data read from an image's exif data."
 },
 {
  "name": "wp_read_image_metadata_types",
  "file": "wp-admin\/includes\/image.php",
  "type": "filter",
  "description": "Filters the image types to check for exif data."
 },
 {
  "name": "wp_read_video_metadata",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the array of metadata retrieved from a video."
 },
 {
  "name": "wp_redirect",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the redirect location."
 },
 {
  "name": "wp_redirect_status",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the redirect HTTP response status code to use."
 },
 {
  "name": "wp_refresh_nonces",
  "file": "wp-admin\/includes\/ajax-actions.php",
  "type": "filter",
  "description": "Filters the nonces to send to the New\/Edit Post screen."
 },
 {
  "name": "wp_resource_hints",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters domains and URLs for resource hints of relation type."
 },
 {
  "name": "wp_rest_search_handlers",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the search handlers to use in the REST search controller."
 },
 {
  "name": "wp_rest_server_class",
  "file": "wp-includes\/rest-api.php",
  "type": "filter",
  "description": "Filters the REST Server Class."
 },
 {
  "name": "wp_revisions_to_keep",
  "file": "wp-includes\/revision.php",
  "type": "filter",
  "description": "Filters the number of revisions to save for the given post."
 },
 {
  "name": "wp_robots",
  "file": "wp-includes\/robots-template.php",
  "type": "filter",
  "description": "Filters the directives to be included in the 'robots' meta tag."
 },
 {
  "name": "wp_safe_redirect_fallback",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the redirect fallback URL for when the provided redirect is not safe (local)."
 },
 {
  "name": "wp_save_image_editor_file",
  "file": "wp-admin\/includes\/image-edit.php",
  "type": "filter",
  "description": "Filters whether to skip saving the image file."
 },
 {
  "name": "wp_save_post_revision_check_for_changes",
  "file": "wp-includes\/revision.php",
  "type": "filter",
  "description": "Filters whether the post has changed since the last revision."
 },
 {
  "name": "wp_save_post_revision_post_has_changed",
  "file": "wp-includes\/revision.php",
  "type": "filter",
  "description": "Filters whether a post has changed."
 },
 {
  "name": "wp_script_attributes",
  "file": "wp-includes\/script-loader.php",
  "type": "filter",
  "description": "Filters attributes to be added to a script tag."
 },
 {
  "name": "wp_search_stopwords",
  "file": "wp-includes\/class-wp-query.php",
  "type": "filter",
  "description": "Filters stopwords used when parsing search terms."
 },
 {
  "name": "wp_setup_nav_menu_item",
  "file": "wp-includes\/nav-menu.php",
  "type": "filter",
  "description": "Filters a navigation menu item object."
 },
 {
  "name": "wp_should_handle_php_error",
  "file": "wp-includes\/class-wp-fatal-error-handler.php",
  "type": "filter",
  "description": "Filters whether a given thrown error should be handled by the fatal error handler."
 },
 {
  "name": "wp_should_replace_insecure_home_url",
  "file": "wp-includes\/https-migration.php",
  "type": "filter",
  "description": "Filters whether WordPress should replace old HTTP URLs to the site with their HTTPS counterpart."
 },
 {
  "name": "wp_should_upgrade_global_tables",
  "file": "wp-admin\/includes\/upgrade.php",
  "type": "filter",
  "description": "Filters if upgrade routines should be run on global tables."
 },
 {
  "name": "wp_signature_hosts",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the list of hosts which should have Signature Verification attempted on."
 },
 {
  "name": "wp_signature_softfail",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters whether Signature Verification failures should be allowed to soft fail."
 },
 {
  "name": "wp_signature_url",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the URL where the signature for a file is located."
 },
 {
  "name": "wp_signup_location",
  "file": "wp-login.php",
  "type": "filter",
  "description": "Filters the Multisite sign up URL."
 },
 {
  "name": "wp_sitemaps_add_provider",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps-registry.php",
  "type": "filter",
  "description": "Filters the sitemap provider before it is added."
 },
 {
  "name": "wp_sitemaps_enabled",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps.php",
  "type": "filter",
  "description": "Filters whether XML Sitemaps are enabled or not."
 },
 {
  "name": "wp_sitemaps_index_entry",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps-provider.php",
  "type": "filter",
  "description": "Filters the sitemap entry for the sitemap index."
 },
 {
  "name": "wp_sitemaps_max_urls",
  "file": "wp-includes\/sitemaps.php",
  "type": "filter",
  "description": "Filters the maximum number of URLs displayed on a sitemap."
 },
 {
  "name": "wp_sitemaps_post_types",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-posts.php",
  "type": "filter",
  "description": "Filters the list of post object sub types available within the sitemap."
 },
 {
  "name": "wp_sitemaps_posts_entry",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-posts.php",
  "type": "filter",
  "description": "Filters the sitemap entry for an individual post."
 },
 {
  "name": "wp_sitemaps_posts_pre_max_num_pages",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-posts.php",
  "type": "filter",
  "description": "Filters the max number of pages before it is generated."
 },
 {
  "name": "wp_sitemaps_posts_pre_url_list",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-posts.php",
  "type": "filter",
  "description": "Filters the posts URL list before it is generated."
 },
 {
  "name": "wp_sitemaps_posts_query_args",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-posts.php",
  "type": "filter",
  "description": "Filters the query arguments for post type sitemap queries."
 },
 {
  "name": "wp_sitemaps_posts_show_on_front_entry",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-posts.php",
  "type": "filter",
  "description": "Filters the sitemap entry for the home page when the 'show_on_front' option equals 'posts'."
 },
 {
  "name": "wp_sitemaps_stylesheet_content",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps-stylesheet.php",
  "type": "filter",
  "description": "Filters the content of the sitemap stylesheet."
 },
 {
  "name": "wp_sitemaps_stylesheet_css",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps-stylesheet.php",
  "type": "filter",
  "description": "Filters the CSS only for the sitemap stylesheet."
 },
 {
  "name": "wp_sitemaps_stylesheet_index_content",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps-stylesheet.php",
  "type": "filter",
  "description": "Filters the content of the sitemap index stylesheet."
 },
 {
  "name": "wp_sitemaps_stylesheet_index_url",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps-renderer.php",
  "type": "filter",
  "description": "Filters the URL for the sitemap index stylesheet."
 },
 {
  "name": "wp_sitemaps_stylesheet_url",
  "file": "wp-includes\/sitemaps\/class-wp-sitemaps-renderer.php",
  "type": "filter",
  "description": "Filters the URL for the sitemap stylesheet."
 },
 {
  "name": "wp_sitemaps_taxonomies",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-taxonomies.php",
  "type": "filter",
  "description": "Filters the list of taxonomy object subtypes available within the sitemap."
 },
 {
  "name": "wp_sitemaps_taxonomies_entry",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-taxonomies.php",
  "type": "filter",
  "description": "Filters the sitemap entry for an individual term."
 },
 {
  "name": "wp_sitemaps_taxonomies_pre_max_num_pages",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-taxonomies.php",
  "type": "filter",
  "description": "Filters the max number of pages for a taxonomy sitemap before it is generated."
 },
 {
  "name": "wp_sitemaps_taxonomies_pre_url_list",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-taxonomies.php",
  "type": "filter",
  "description": "Filters the taxonomies URL list before it is generated."
 },
 {
  "name": "wp_sitemaps_taxonomies_query_args",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-taxonomies.php",
  "type": "filter",
  "description": "Filters the taxonomy terms query arguments."
 },
 {
  "name": "wp_sitemaps_users_entry",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-users.php",
  "type": "filter",
  "description": "Filters the sitemap entry for an individual user."
 },
 {
  "name": "wp_sitemaps_users_pre_max_num_pages",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-users.php",
  "type": "filter",
  "description": "Filters the max number of pages for a user sitemap before it is generated."
 },
 {
  "name": "wp_sitemaps_users_pre_url_list",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-users.php",
  "type": "filter",
  "description": "Filters the users URL list before it is generated."
 },
 {
  "name": "wp_sitemaps_users_query_args",
  "file": "wp-includes\/sitemaps\/providers\/class-wp-sitemaps-users.php",
  "type": "filter",
  "description": "Filters the query arguments for authors with public posts."
 },
 {
  "name": "wp_spaces_regexp",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the regexp for common whitespace characters."
 },
 {
  "name": "wp_sprintf",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters a fragment from the pattern passed to wp_sprintf()."
 },
 {
  "name": "wp_sprintf_l",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the translated delimiters used by wp_sprintf_l()."
 },
 {
  "name": "wp_tag_cloud",
  "file": "wp-includes\/category-template.php",
  "type": "filter",
  "description": "Filters the tag cloud output."
 },
 {
  "name": "wp_targeted_link_rel",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the rel values that are added to links with `target` attribute."
 },
 {
  "name": "wp_terms_checklist_args",
  "file": "wp-admin\/includes\/template.php",
  "type": "filter",
  "description": "Filters the taxonomy terms checklist arguments."
 },
 {
  "name": "wp_theme_editor_filetypes",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the list of file types allowed for editing in the theme file editor."
 },
 {
  "name": "wp_title",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the text of the page title."
 },
 {
  "name": "wp_title_parts",
  "file": "wp-includes\/general-template.php",
  "type": "filter",
  "description": "Filters the parts of the page title."
 },
 {
  "name": "wp_title_rss",
  "file": "wp-includes\/feed.php",
  "type": "filter",
  "description": "Filters the blog title for display of the feed title."
 },
 {
  "name": "wp_trim_excerpt",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the trimmed excerpt string."
 },
 {
  "name": "wp_trim_words",
  "file": "wp-includes\/formatting.php",
  "type": "filter",
  "description": "Filters the text content after words have been trimmed."
 },
 {
  "name": "wp_trusted_keys",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the valid signing keys used to verify the contents of files."
 },
 {
  "name": "wp_unique_filename",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the result when generating a unique file name."
 },
 {
  "name": "wp_unique_post_slug",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the unique post slug."
 },
 {
  "name": "wp_unique_post_slug_is_bad_attachment_slug",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether the post slug would make a bad attachment slug."
 },
 {
  "name": "wp_unique_post_slug_is_bad_flat_slug",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether the post slug would be bad as a flat slug."
 },
 {
  "name": "wp_unique_post_slug_is_bad_hierarchical_slug",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters whether the post slug would make a bad hierarchical post slug."
 },
 {
  "name": "wp_unique_term_slug",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the unique term slug."
 },
 {
  "name": "wp_unique_term_slug_is_bad_slug",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters whether the proposed unique term slug is bad."
 },
 {
  "name": "wp_untrash_post_status",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the status that a post gets assigned when it is restored from the trash (untrashed)."
 },
 {
  "name": "wp_update_attachment_metadata",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the updated attachment meta data."
 },
 {
  "name": "wp_update_comment_data",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment data immediately before it is updated in the database."
 },
 {
  "name": "wp_update_comment_type_batch_size",
  "file": "wp-includes\/comment.php",
  "type": "filter",
  "description": "Filters the comment batch size for updating the comment type."
 },
 {
  "name": "wp_update_https_url",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the URL to learn more about updating the HTTPS version the site is running on."
 },
 {
  "name": "wp_update_php_url",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the URL to learn more about updating the PHP version the site is running on."
 },
 {
  "name": "wp_update_term_data",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters term data before it is updated in the database."
 },
 {
  "name": "wp_update_term_parent",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the term parent."
 },
 {
  "name": "wp_upload_bits",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters whether to treat the upload bits as an error."
 },
 {
  "name": "wp_user_dashboard_widgets",
  "file": "wp-admin\/includes\/dashboard.php",
  "type": "filter",
  "description": "Filters the list of widgets to load for the User Admin dashboard."
 },
 {
  "name": "wp_using_themes",
  "file": "wp-includes\/load.php",
  "type": "filter",
  "description": "Filters whether the current request should use themes."
 },
 {
  "name": "wp_video_embed_handler",
  "file": "wp-includes\/embed.php",
  "type": "filter",
  "description": "Filters the video embed handler callback."
 },
 {
  "name": "wp_video_extensions",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the list of supported video formats."
 },
 {
  "name": "wp_video_shortcode",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the output of the video shortcode."
 },
 {
  "name": "wp_video_shortcode_class",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the class attribute for the video shortcode output container."
 },
 {
  "name": "wp_video_shortcode_library",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the media library used for the video shortcode."
 },
 {
  "name": "wp_video_shortcode_override",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the default video shortcode output."
 },
 {
  "name": "wp_xmlrpc_server_class",
  "file": "xmlrpc.php",
  "type": "filter",
  "description": "Filters the class used for handling XML-RPC requests."
 },
 {
  "name": "wp_{$post->post_type}_revisions_to_keep",
  "file": "wp-includes\/revision.php",
  "type": "filter",
  "description": "Filters the number of revisions to save for the given post by its post type."
 },
 {
  "name": "wpmu_active_signup",
  "file": "wp-signup.php",
  "type": "filter",
  "description": "Filters the type of site sign-up."
 },
 {
  "name": "wpmu_blogs_columns",
  "file": "wp-admin\/includes\/class-wp-ms-sites-list-table.php",
  "type": "filter",
  "description": "Filters the displayed site columns in Sites list table."
 },
 {
  "name": "wpmu_delete_blog_upload_dir",
  "file": "wp-includes\/ms-site.php",
  "type": "filter",
  "description": "Filters the upload base directory to delete when the site is deleted."
 },
 {
  "name": "wpmu_drop_tables",
  "file": "wp-includes\/ms-site.php",
  "type": "filter",
  "description": "Filters the tables to drop when the site is deleted."
 },
 {
  "name": "wpmu_signup_blog_notification",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether to bypass the new site email notification."
 },
 {
  "name": "wpmu_signup_blog_notification_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the message content of the new blog notification email."
 },
 {
  "name": "wpmu_signup_blog_notification_subject",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the subject of the new blog notification email."
 },
 {
  "name": "wpmu_signup_user_notification",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether to bypass the email notification for new user sign-up."
 },
 {
  "name": "wpmu_signup_user_notification_email",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the content of the notification email for new user sign-up."
 },
 {
  "name": "wpmu_signup_user_notification_subject",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the subject of the notification email of new user signup."
 },
 {
  "name": "wpmu_users_columns",
  "file": "wp-admin\/includes\/class-wp-ms-users-list-table.php",
  "type": "filter",
  "description": "Filters the columns displayed in the Network Admin Users list table."
 },
 {
  "name": "wpmu_validate_blog_signup",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters site details and error messages following registration."
 },
 {
  "name": "wpmu_validate_user_signup",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters the validated user registration details."
 },
 {
  "name": "wpmu_welcome_notification",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether to bypass the welcome email sent to the site administrator after site activation."
 },
 {
  "name": "wpmu_welcome_user_notification",
  "file": "wp-includes\/ms-functions.php",
  "type": "filter",
  "description": "Filters whether to bypass the welcome email after user activation."
 },
 {
  "name": "write_your_story",
  "file": "wp-admin\/edit-form-blocks.php",
  "type": "filter",
  "description": "Filters the body placeholder text."
 },
 {
  "name": "wxr_export_skip_commentmeta",
  "file": "wp-admin\/includes\/export.php",
  "type": "filter",
  "description": "Filters whether to selectively skip comment meta used for WXR exports."
 },
 {
  "name": "wxr_export_skip_postmeta",
  "file": "wp-admin\/includes\/export.php",
  "type": "filter",
  "description": "Filters whether to selectively skip post meta used for WXR exports."
 },
 {
  "name": "wxr_export_skip_termmeta",
  "file": "wp-admin\/includes\/export.php",
  "type": "filter",
  "description": "Filters whether to selectively skip term meta used for WXR exports."
 },
 {
  "name": "x_redirect_by",
  "file": "wp-includes\/pluggable.php",
  "type": "filter",
  "description": "Filters the X-Redirect-By header."
 },
 {
  "name": "xmlrpc_allow_anonymous_comments",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters whether to allow anonymous comments over XML-RPC."
 },
 {
  "name": "xmlrpc_blog_options",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the XML-RPC blog options property."
 },
 {
  "name": "xmlrpc_chunk_parsing_size",
  "file": "wp-includes\/IXR\/class-IXR-message.php",
  "type": "filter",
  "description": "Filters the chunk size that can be used to parse an XML-RPC response message."
 },
 {
  "name": "xmlrpc_default_post_fields",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the list of post query fields used by the given XML-RPC method."
 },
 {
  "name": "xmlrpc_default_posttype_fields",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the default query fields used by the given XML-RPC method."
 },
 {
  "name": "xmlrpc_default_revision_fields",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the default revision query fields used by the given XML-RPC method."
 },
 {
  "name": "xmlrpc_default_taxonomy_fields",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the taxonomy query fields used by the given XML-RPC method."
 },
 {
  "name": "xmlrpc_default_user_fields",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the default user query fields used by the given XML-RPC method."
 },
 {
  "name": "xmlrpc_element_limit",
  "file": "wp-includes\/IXR\/class-IXR-message.php",
  "type": "filter",
  "description": "Filters the number of elements to parse in an XML-RPC response."
 },
 {
  "name": "xmlrpc_enabled",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters whether XML-RPC methods requiring authentication are enabled."
 },
 {
  "name": "xmlrpc_login_error",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the XML-RPC user login error message."
 },
 {
  "name": "xmlrpc_methods",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the methods exposed by the XML-RPC server."
 },
 {
  "name": "xmlrpc_pingback_error",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the XML-RPC pingback error return."
 },
 {
  "name": "xmlrpc_prepare_comment",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared data for the given comment."
 },
 {
  "name": "xmlrpc_prepare_media_item",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared data for the given media item."
 },
 {
  "name": "xmlrpc_prepare_page",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared data for the given page."
 },
 {
  "name": "xmlrpc_prepare_post",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared date for the given post."
 },
 {
  "name": "xmlrpc_prepare_post_type",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared date for the given post type."
 },
 {
  "name": "xmlrpc_prepare_taxonomy",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared data for the given taxonomy."
 },
 {
  "name": "xmlrpc_prepare_term",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared data for the given term."
 },
 {
  "name": "xmlrpc_prepare_user",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters XML-RPC-prepared data for the given user."
 },
 {
  "name": "xmlrpc_text_filters",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters the MoveableType text filters list for XML-RPC."
 },
 {
  "name": "xmlrpc_wp_insert_post_data",
  "file": "wp-includes\/class-wp-xmlrpc-server.php",
  "type": "filter",
  "description": "Filters post data array to be inserted via XML-RPC."
 },
 {
  "name": "year_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the year archive permalink."
 },
 {
  "name": "{$action}_overrides",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the override parameters for a file before it is uploaded to WordPress."
 },
 {
  "name": "{$action}_prefilter",
  "file": "wp-admin\/includes\/file.php",
  "type": "filter",
  "description": "Filters the data for a file before it is uploaded to WordPress."
 },
 {
  "name": "{$adjacent}_image_link",
  "file": "wp-includes\/media.php",
  "type": "filter",
  "description": "Filters the adjacent image link."
 },
 {
  "name": "{$adjacent}_post_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the adjacent post link."
 },
 {
  "name": "{$adjacent}_post_rel_link",
  "file": "wp-includes\/link-template.php",
  "type": "filter",
  "description": "Filters the adjacent post relational link."
 },
 {
  "name": "{$context}_memory_limit",
  "file": "wp-includes\/functions.php",
  "type": "filter",
  "description": "Filters the memory limit allocated for arbitrary contexts."
 },
 {
  "name": "{$field_no_prefix}_edit_pre",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the value of a specific post field to edit."
 },
 {
  "name": "{$field_no_prefix}_save_pre",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the value of a specific field before saving."
 },
 {
  "name": "{$field}",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the value of a specific post field for display."
 },
 {
  "name": "{$field}_pre",
  "file": "wp-includes\/post.php",
  "type": "filter",
  "description": "Filters the value of a specific post field before saving."
 },
 {
  "name": "{$option}",
  "file": "wp-admin\/includes\/class-wp-list-table.php",
  "type": "filter",
  "description": "Filters the number of items to be displayed on each page of the list table."
 },
 {
  "name": "{$permastructname}_rewrite_rules",
  "file": "wp-includes\/class-wp-rewrite.php",
  "type": "filter",
  "description": "Filters rewrite rules used for individual permastructs."
 },
 {
  "name": "{$taxonomy}_row_actions",
  "file": "wp-admin\/includes\/class-wp-terms-list-table.php",
  "type": "filter",
  "description": "Filters the action links displayed for each term in the terms list table."
 },
 {
  "name": "{$taxonomy}_{$field}",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the taxonomy field sanitized for display."
 },
 {
  "name": "{$taxonomy}_{$field}_rss",
  "file": "wp-includes\/taxonomy.php",
  "type": "filter",
  "description": "Filters the taxonomy field for use in RSS."
 },
 {
  "name": "{$type}_send_to_editor_url",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the URL sent to the editor for a specific media type."
 },
 {
  "name": "{$type}_template",
  "file": "wp-includes\/template.php",
  "type": "filter",
  "description": "Filters the path of the queried template by type."
 },
 {
  "name": "{$type}_template_hierarchy",
  "file": "wp-includes\/template.php",
  "type": "filter",
  "description": "Filters the list of template filenames that are searched for when retrieving a template to use."
 },
 {
  "name": "{$type}_upload_iframe_src",
  "file": "wp-admin\/includes\/media.php",
  "type": "filter",
  "description": "Filters the upload iframe source URL for a specific media type."
 }
]